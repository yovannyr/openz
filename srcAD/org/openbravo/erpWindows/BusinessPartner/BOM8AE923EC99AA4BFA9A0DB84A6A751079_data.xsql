<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="BOM8AE923EC99AA4BFA9A0DB84A6A751079Data" package="org.openbravo.erpWindows.BusinessPartner">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(CA_ASSETSSTOCKEDBOM.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = CA_ASSETSSTOCKEDBOM.CreatedBy) as CreatedByR, 
        to_char(CA_ASSETSSTOCKEDBOM.Updated, ?) as updated, 
        to_char(CA_ASSETSSTOCKEDBOM.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        CA_ASSETSSTOCKEDBOM.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = CA_ASSETSSTOCKEDBOM.UpdatedBy) as UpdatedByR,
        CA_ASSETSSTOCKEDBOM.CA_Assetsstocked_ID, 
(CASE WHEN CA_ASSETSSTOCKEDBOM.CA_Assetsstocked_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Qty), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Serialnumber), ''))),'') ) END) AS CA_Assetsstocked_IDR, 
CA_ASSETSSTOCKEDBOM.M_Product_ID, 
(CASE WHEN CA_ASSETSSTOCKEDBOM.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL6.Name IS NULL THEN TO_CHAR(table6.Name) ELSE TO_CHAR(tableTRL6.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
CA_ASSETSSTOCKEDBOM.Price, 
CA_ASSETSSTOCKEDBOM.Qty, 
CA_ASSETSSTOCKEDBOM.Amt, 
CA_ASSETSSTOCKEDBOM.Description, 
CA_ASSETSSTOCKEDBOM.Bomqty, 
CA_ASSETSSTOCKEDBOM.AD_Client_ID, 
CA_ASSETSSTOCKEDBOM.AD_Org_ID, 
COALESCE(CA_ASSETSSTOCKEDBOM.Isactive, 'N') AS Isactive, 
CA_ASSETSSTOCKEDBOM.CA_Assetsstockedbom_ID, 
CA_ASSETSSTOCKEDBOM.Dateofsale, 
 
        ? AS LANGUAGE 
        FROM CA_ASSETSSTOCKEDBOM left join (select CA_Assetsstocked_ID, C_BPartner_ID, M_Product_ID, Qty, SNR_Masterdata_id from CA_Assetsstocked) table1 on (CA_ASSETSSTOCKEDBOM.CA_Assetsstocked_ID = table1.CA_Assetsstocked_ID) left join (select C_BPartner_ID, Name from C_BPartner) table2 on (table1.C_BPartner_ID = table2.C_BPartner_ID) left join (select M_Product_ID, Value, Name from M_Product) table3 on (table1.M_Product_ID = table3.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL3 on (table3.M_Product_ID = tableTRL3.M_Product_ID and tableTRL3.AD_Language = ?)  left join (select SNR_Masterdata_id, M_Product_ID, Serialnumber from SNR_Masterdata) table4 on (table1.SNR_Masterdata_id = table4.SNR_Masterdata_id) left join (select M_Product_ID, Value, Name from M_Product) table5 on (table4.M_Product_ID = table5.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL5 on (table5.M_Product_ID = tableTRL5.M_Product_ID and tableTRL5.AD_Language = ?)  left join (select M_Product_ID, Value, Name from M_Product) table6 on (CA_ASSETSSTOCKEDBOM.M_Product_ID = table6.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL6 on (table6.M_Product_ID = tableTRL6.M_Product_ID and tableTRL6.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND CA_ASSETSSTOCKEDBOM.CA_Assetsstockedbom_ID = ? 
        AND CA_ASSETSSTOCKEDBOM.AD_Client_ID IN ('1') 
           AND CA_ASSETSSTOCKEDBOM.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="caAssetsstockedId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND CA_ASSETSSTOCKEDBOM.CA_Assetsstocked_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="CA_ASSETSSTOCKEDBOM.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="CA_ASSETSSTOCKEDBOM.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="caAssetsstockedId" id="paramKeyParent"></Parameter>
<Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="price"></Parameter><Parameter name="description"></Parameter><Parameter name="dateofsale"></Parameter><Parameter name="caAssetsstockedbomId"></Parameter><Parameter name="bomqty"></Parameter><Parameter name="amt"></Parameter><Parameter name="isactive"></Parameter><Parameter name="qty"></Parameter><Parameter name="mProductId"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef022E76A8FA794084919FAB58EB78E816_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef297D9C0A758A4B58A43B72D271E2BB56_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefA05A562191F14F09A97238A274D76532_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT CA_ASSETSSTOCKEDBOM.CA_Assetsstocked_ID AS NAME
        FROM CA_ASSETSSTOCKEDBOM
        WHERE CA_ASSETSSTOCKEDBOM.CA_Assetsstockedbom_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table2.Name), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table3.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Qty), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table5.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table4.Serialnumber), ''))) AS NAME FROM CA_Assetsstocked left join (select CA_Assetsstocked_ID, C_BPartner_ID, M_Product_ID, Qty, SNR_Masterdata_id from CA_Assetsstocked) table1 on (CA_Assetsstocked.CA_Assetsstocked_ID = table1.CA_Assetsstocked_ID) left join (select C_BPartner_ID, Name from C_BPartner) table2 on (table1.C_BPartner_ID = table2.C_BPartner_ID) left join (select M_Product_ID, Value, Name from M_Product) table3 on (table1.M_Product_ID = table3.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL3 on (table3.M_Product_ID = tableTRL3.M_Product_ID and tableTRL3.AD_Language = ?)  left join (select SNR_Masterdata_id, M_Product_ID, Serialnumber from SNR_Masterdata) table4 on (table1.SNR_Masterdata_id = table4.SNR_Masterdata_id) left join (select M_Product_ID, Value, Name from M_Product) table5 on (table4.M_Product_ID = table5.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL5 on (table5.M_Product_ID = tableTRL5.M_Product_ID and tableTRL5.AD_Language = ?)  WHERE CA_Assetsstocked.CA_Assetsstocked_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="caAssetsstockedId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table2.Name), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table3.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Qty), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table5.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table4.Serialnumber), ''))) AS NAME FROM CA_Assetsstocked left join (select CA_Assetsstocked_ID, C_BPartner_ID, M_Product_ID, Qty, SNR_Masterdata_id from CA_Assetsstocked) table1 on (CA_Assetsstocked.CA_Assetsstocked_ID = table1.CA_Assetsstocked_ID) left join (select C_BPartner_ID, Name from C_BPartner) table2 on (table1.C_BPartner_ID = table2.C_BPartner_ID) left join (select M_Product_ID, Value, Name from M_Product) table3 on (table1.M_Product_ID = table3.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL3 on (table3.M_Product_ID = tableTRL3.M_Product_ID and tableTRL3.AD_Language = ?)  left join (select SNR_Masterdata_id, M_Product_ID, Serialnumber from SNR_Masterdata) table4 on (table1.SNR_Masterdata_id = table4.SNR_Masterdata_id) left join (select M_Product_ID, Value, Name from M_Product) table5 on (table4.M_Product_ID = table5.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL5 on (table5.M_Product_ID = tableTRL5.M_Product_ID and tableTRL5.AD_Language = ?)  WHERE CA_Assetsstocked.CA_Assetsstocked_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="caAssetsstockedId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE CA_ASSETSSTOCKEDBOM
        SET CA_Assetsstocked_ID = (?) , M_Product_ID = (?) , Price = TO_NUMBER(?) , Qty = TO_NUMBER(?) , Amt = TO_NUMBER(?) , Description = (?) , Bomqty = TO_NUMBER(?) , AD_Client_ID = (?) , AD_Org_ID = (?) , Isactive = (?) , CA_Assetsstockedbom_ID = (?) , Dateofsale = TO_DATE(?) , updated = now(), updatedby = ? 
        WHERE CA_ASSETSSTOCKEDBOM.CA_Assetsstockedbom_ID = ? 
                 AND CA_ASSETSSTOCKEDBOM.CA_Assetsstocked_ID = ? 
        AND CA_ASSETSSTOCKEDBOM.AD_Client_ID IN ('1') 
        AND CA_ASSETSSTOCKEDBOM.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="caAssetsstockedId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="price"></Parameter> <Parameter name="qty"></Parameter> <Parameter name="amt"></Parameter> <Parameter name="description"></Parameter> <Parameter name="bomqty"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="caAssetsstockedbomId"></Parameter> <Parameter name="dateofsale"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="caAssetsstockedbomId"></Parameter>
    
    <Parameter name="caAssetsstockedId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="CA_ASSETSSTOCKEDBOM.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="CA_ASSETSSTOCKEDBOM.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO CA_ASSETSSTOCKEDBOM 
        (CA_Assetsstocked_ID, M_Product_ID, Price, Qty, Amt, Description, Bomqty, AD_Client_ID, AD_Org_ID, Isactive, CA_Assetsstockedbom_ID, Dateofsale, created, createdby, updated, updatedBy)
        VALUES ((?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), TO_NUMBER(?), (?), (?), (?), (?), TO_DATE(?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="caAssetsstockedId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="price"></Parameter> <Parameter name="qty"></Parameter> <Parameter name="amt"></Parameter> <Parameter name="description"></Parameter> <Parameter name="bomqty"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="caAssetsstockedbomId"></Parameter> <Parameter name="dateofsale"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM CA_ASSETSSTOCKEDBOM
        WHERE CA_ASSETSSTOCKEDBOM.CA_Assetsstockedbom_ID = ? 
                 AND CA_ASSETSSTOCKEDBOM.CA_Assetsstocked_ID = ? 
        AND CA_ASSETSSTOCKEDBOM.AD_Client_ID IN ('1') 
        AND CA_ASSETSSTOCKEDBOM.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="caAssetsstockedId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="CA_ASSETSSTOCKEDBOM.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="CA_ASSETSSTOCKEDBOM.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM CA_ASSETSSTOCKEDBOM
        WHERE CA_ASSETSSTOCKEDBOM.CA_Assetsstockedbom_ID = ? 
                 AND CA_ASSETSSTOCKEDBOM.CA_Assetsstocked_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="caAssetsstockedId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM CA_ASSETSSTOCKEDBOM
         WHERE CA_ASSETSSTOCKEDBOM.CA_Assetsstockedbom_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM CA_ASSETSSTOCKEDBOM
         WHERE CA_ASSETSSTOCKEDBOM.CA_Assetsstockedbom_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>