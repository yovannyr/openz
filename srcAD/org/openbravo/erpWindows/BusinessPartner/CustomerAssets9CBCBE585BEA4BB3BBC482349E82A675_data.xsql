<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="CustomerAssets9CBCBE585BEA4BB3BBC482349E82A675Data" package="org.openbravo.erpWindows.BusinessPartner">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(CA_Assetsstocked.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = CA_Assetsstocked.CreatedBy) as CreatedByR, 
        to_char(CA_Assetsstocked.Updated, ?) as updated, 
        to_char(CA_Assetsstocked.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        CA_Assetsstocked.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = CA_Assetsstocked.UpdatedBy) as UpdatedByR,
        CA_Assetsstocked.C_BPartner_ID, 
(CASE WHEN CA_Assetsstocked.C_BPartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS C_BPartner_IDR, 
CA_Assetsstocked.Statusref, 
(CASE WHEN CA_Assetsstocked.Statusref IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS StatusrefR, 
CA_Assetsstocked.M_Product_ID, 
(CASE WHEN CA_Assetsstocked.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
CA_Assetsstocked.SNR_Masterdata_id, 
(CASE WHEN CA_Assetsstocked.SNR_Masterdata_id IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL4.Name IS NULL THEN TO_CHAR(table4.Name) ELSE TO_CHAR(tableTRL4.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Serialnumber), ''))),'') ) END) AS SNR_Masterdata_idR, 
CA_Assetsstocked.DateOrdered, 
CA_Assetsstocked.Paymentdate, 
CA_Assetsstocked.DateDelivered, 
CA_Assetsstocked.DateStockFeeUntil, 
CA_Assetsstocked.Qty, 
CA_Assetsstocked.Price, 
CA_Assetsstocked.Amt, 
CA_Assetsstocked.ChargeAmt, 
CA_Assetsstocked.Stockcharge, 
CA_Assetsstocked.C_Currency_ID, 
(CASE WHEN CA_Assetsstocked.C_Currency_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.ISO_Code), ''))),'') ) END) AS C_Currency_IDR, 
CA_Assetsstocked.DateOfSale, 
CA_Assetsstocked.Qtysold, 
CA_Assetsstocked.Actualqty, 
CA_Assetsstocked.C_OrderLine_ID, 
(CASE WHEN CA_Assetsstocked.C_OrderLine_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table7.DateOrdered, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.GrandTotal), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Line), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.LineNetAmt), ''))),'') ) END) AS C_OrderLine_IDR, 
CA_Assetsstocked.Poorderline, 
(CASE WHEN CA_Assetsstocked.Poorderline IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Line), ''))),'') ) END) AS PoorderlineR, 
CA_Assetsstocked.M_Warehouse_ID, 
(CASE WHEN CA_Assetsstocked.M_Warehouse_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Name), ''))),'') ) END) AS M_Warehouse_IDR, 
CA_Assetsstocked.Description, 
CA_Assetsstocked.AD_Client_ID, 
COALESCE(CA_Assetsstocked.IsActive, 'N') AS IsActive, 
CA_Assetsstocked.CA_AssetsStocked_ID, 
CA_Assetsstocked.AD_Org_ID, 
 
        ? AS LANGUAGE 
        FROM CA_Assetsstocked left join (select C_BPartner_ID, Name from C_BPartner) table1 on (CA_Assetsstocked.C_BPartner_ID = table1.C_BPartner_ID) left join ad_ref_list_v list1 on (CA_Assetsstocked.Statusref = list1.value and list1.ad_reference_id = '11F66EE090404622803A4D41F6BB3EB9' and list1.ad_language = ?)  left join (select M_Product_ID, Value, Name from M_Product) table2 on (CA_Assetsstocked.M_Product_ID = table2.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL2 on (table2.M_Product_ID = tableTRL2.M_Product_ID and tableTRL2.AD_Language = ?)  left join (select SNR_Masterdata_id, M_Product_ID, Serialnumber from SNR_Masterdata) table3 on (CA_Assetsstocked.SNR_Masterdata_id = table3.SNR_Masterdata_id) left join (select M_Product_ID, Value, Name from M_Product) table4 on (table3.M_Product_ID = table4.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL4 on (table4.M_Product_ID = tableTRL4.M_Product_ID and tableTRL4.AD_Language = ?)  left join (select C_Currency_ID, ISO_Code from C_Currency) table5 on (CA_Assetsstocked.C_Currency_ID = table5.C_Currency_ID) left join (select C_OrderLine_ID, C_Order_ID, Line, LineNetAmt from C_OrderLine) table6 on (CA_Assetsstocked.C_OrderLine_ID = table6.C_OrderLine_ID) left join (select C_Order_ID, DocumentNo, Name, DateOrdered, GrandTotal from C_Order) table7 on (table6.C_Order_ID = table7.C_Order_ID) left join (select C_OrderLine_ID, Line from C_OrderLine) table8 on (CA_Assetsstocked.Poorderline =  table8.C_OrderLine_ID) left join (select M_Warehouse_ID, Name from M_Warehouse) table9 on (CA_Assetsstocked.M_Warehouse_ID = table9.M_Warehouse_ID)
        WHERE 2=2 

        AND 1=1 
        AND CA_Assetsstocked.CA_AssetsStocked_ID = ? 
        AND CA_Assetsstocked.AD_Client_ID IN ('1') 
           AND CA_Assetsstocked.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="cBpartnerId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND CA_Assetsstocked.C_BPartner_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="CA_Assetsstocked.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="CA_Assetsstocked.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
<Parameter name="snrMasterdataId"></Parameter><Parameter name="price"></Parameter><Parameter name="mProductId"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="actualqty"></Parameter><Parameter name="chargeamt"></Parameter><Parameter name="datestockfeeuntil"></Parameter><Parameter name="cOrderlineId"></Parameter><Parameter name="description"></Parameter><Parameter name="mWarehouseId"></Parameter><Parameter name="amt"></Parameter><Parameter name="datedelivered"></Parameter><Parameter name="stockcharge"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="statusref"></Parameter><Parameter name="isactive"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="cCurrencyId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="paymentdate"></Parameter><Parameter name="caAssetsstockedId"></Parameter><Parameter name="qtysold"></Parameter><Parameter name="qty"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="dateordered"></Parameter><Parameter name="dateofsale"></Parameter><Parameter name="poorderline"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef9CFD412BDE444822A111D1D8F1C35ACD_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef50776D81AA0944A69E1B6F951CFF161D_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as C_BPartner_ID FROM C_BPartner table1 WHERE table1.isActive='Y' AND table1.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_BPartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefB8FD240B381E480FB8DDC9807008A7E7_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef57F4E21F8A55400DA273C41AF26F0AEB_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT CA_Assetsstocked.C_BPartner_ID AS NAME
        FROM CA_Assetsstocked
        WHERE CA_Assetsstocked.CA_AssetsStocked_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table1 on (C_BPartner.C_BPartner_ID = table1.C_BPartner_ID) WHERE C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="cBpartnerId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table1 on (C_BPartner.C_BPartner_ID = table1.C_BPartner_ID) WHERE C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="cBpartnerId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE CA_Assetsstocked
        SET C_BPartner_ID = (?) , Statusref = (?) , M_Product_ID = (?) , SNR_Masterdata_id = (?) , DateOrdered = TO_DATE(?) , Paymentdate = TO_DATE(?) , DateDelivered = TO_DATE(?) , DateStockFeeUntil = TO_DATE(?) , Qty = TO_NUMBER(?) , Price = TO_NUMBER(?) , Amt = TO_NUMBER(?) , ChargeAmt = TO_NUMBER(?) , Stockcharge = TO_NUMBER(?) , C_Currency_ID = (?) , DateOfSale = TO_DATE(?) , Qtysold = TO_NUMBER(?) , Actualqty = TO_NUMBER(?) , C_OrderLine_ID = (?) , Poorderline = (?) , M_Warehouse_ID = (?) , Description = (?) , AD_Client_ID = (?) , IsActive = (?) , CA_AssetsStocked_ID = (?) , AD_Org_ID = (?) , updated = now(), updatedby = ? 
        WHERE CA_Assetsstocked.CA_AssetsStocked_ID = ? 
                 AND CA_Assetsstocked.C_BPartner_ID = ? 
        AND CA_Assetsstocked.AD_Client_ID IN ('1') 
        AND CA_Assetsstocked.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cBpartnerId"></Parameter> <Parameter name="statusref"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="snrMasterdataId"></Parameter> <Parameter name="dateordered"></Parameter> <Parameter name="paymentdate"></Parameter> <Parameter name="datedelivered"></Parameter> <Parameter name="datestockfeeuntil"></Parameter> <Parameter name="qty"></Parameter> <Parameter name="price"></Parameter> <Parameter name="amt"></Parameter> <Parameter name="chargeamt"></Parameter> <Parameter name="stockcharge"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="dateofsale"></Parameter> <Parameter name="qtysold"></Parameter> <Parameter name="actualqty"></Parameter> <Parameter name="cOrderlineId"></Parameter> <Parameter name="poorderline"></Parameter> <Parameter name="mWarehouseId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="caAssetsstockedId"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="caAssetsstockedId"></Parameter>
    
    <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="CA_Assetsstocked.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="CA_Assetsstocked.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO CA_Assetsstocked 
        (C_BPartner_ID, Statusref, M_Product_ID, SNR_Masterdata_id, DateOrdered, Paymentdate, DateDelivered, DateStockFeeUntil, Qty, Price, Amt, ChargeAmt, Stockcharge, C_Currency_ID, DateOfSale, Qtysold, Actualqty, C_OrderLine_ID, Poorderline, M_Warehouse_ID, Description, AD_Client_ID, IsActive, CA_AssetsStocked_ID, AD_Org_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), TO_DATE(?), TO_DATE(?), TO_DATE(?), TO_DATE(?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), TO_DATE(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cBpartnerId"></Parameter> <Parameter name="statusref"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="snrMasterdataId"></Parameter> <Parameter name="dateordered"></Parameter> <Parameter name="paymentdate"></Parameter> <Parameter name="datedelivered"></Parameter> <Parameter name="datestockfeeuntil"></Parameter> <Parameter name="qty"></Parameter> <Parameter name="price"></Parameter> <Parameter name="amt"></Parameter> <Parameter name="chargeamt"></Parameter> <Parameter name="stockcharge"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="dateofsale"></Parameter> <Parameter name="qtysold"></Parameter> <Parameter name="actualqty"></Parameter> <Parameter name="cOrderlineId"></Parameter> <Parameter name="poorderline"></Parameter> <Parameter name="mWarehouseId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="caAssetsstockedId"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM CA_Assetsstocked
        WHERE CA_Assetsstocked.CA_AssetsStocked_ID = ? 
                 AND CA_Assetsstocked.C_BPartner_ID = ? 
        AND CA_Assetsstocked.AD_Client_ID IN ('1') 
        AND CA_Assetsstocked.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="CA_Assetsstocked.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="CA_Assetsstocked.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM CA_Assetsstocked
        WHERE CA_Assetsstocked.CA_AssetsStocked_ID = ? 
                 AND CA_Assetsstocked.C_BPartner_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM CA_Assetsstocked
         WHERE CA_Assetsstocked.CA_AssetsStocked_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM CA_Assetsstocked
         WHERE CA_Assetsstocked.CA_AssetsStocked_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>