<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="CustomerAccountingData" package="org.openbravo.erpWindows.BusinessPartner">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_BP_Customer_Acct.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_BP_Customer_Acct.CreatedBy) as CreatedByR, 
        to_char(C_BP_Customer_Acct.Updated, ?) as updated, 
        to_char(C_BP_Customer_Acct.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_BP_Customer_Acct.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_BP_Customer_Acct.UpdatedBy) as UpdatedByR,
        C_BP_Customer_Acct.C_BPartner_ID, 
(CASE WHEN C_BP_Customer_Acct.C_BPartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS C_BPartner_IDR, 
C_BP_Customer_Acct.Status, 
C_BP_Customer_Acct.C_AcctSchema_ID, 
(CASE WHEN C_BP_Customer_Acct.C_AcctSchema_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS C_AcctSchema_IDR, 
C_BP_Customer_Acct.C_Bp_Customer_Acct_ID, 
COALESCE(C_BP_Customer_Acct.IsActive, 'N') AS IsActive, 
C_BP_Customer_Acct.C_Receivable_Acct, 
(CASE WHEN C_BP_Customer_Acct.C_Receivable_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Combination), ''))),'') ) END) AS C_Receivable_AcctR, 
C_BP_Customer_Acct.C_Prepayment_Acct, 
C_BP_Customer_Acct.AD_Org_ID, 
C_BP_Customer_Acct.AD_Client_ID, 
 
        ? AS LANGUAGE 
        FROM C_BP_Customer_Acct left join (select C_BPartner_ID, Name from C_BPartner) table1 on (C_BP_Customer_Acct.C_BPartner_ID = table1.C_BPartner_ID) left join (select C_AcctSchema_ID, Name from C_AcctSchema) table2 on (C_BP_Customer_Acct.C_AcctSchema_ID = table2.C_AcctSchema_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table3 on (C_BP_Customer_Acct.C_Receivable_Acct = table3.C_ValidCombination_ID)
        WHERE 2=2 

        AND 1=1 
        AND C_BP_Customer_Acct.C_Bp_Customer_Acct_ID = ? 
        AND C_BP_Customer_Acct.AD_Client_ID IN ('1') 
           AND C_BP_Customer_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>

    <Parameter name="cBpartnerId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_BP_Customer_Acct.C_BPartner_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BP_Customer_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BP_Customer_Acct.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
<Parameter name="isactive"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="cBpCustomerAcctId"></Parameter><Parameter name="cPrepaymentAcct"></Parameter><Parameter name="cPrepaymentAcctr"></Parameter><Parameter name="cReceivableAcct"></Parameter><Parameter name="cReceivableAcctr"></Parameter><Parameter name="status"></Parameter><Parameter name="cAcctschemaId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="cBpartnerIdr"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef3380_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as C_Prepayment_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="C_Prepayment_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3379_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as C_Receivable_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="C_Receivable_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2417_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2415_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2756_4" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as C_BPartner_ID FROM C_BPartner table1 WHERE table1.isActive='Y' AND table1.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_BPartner_IDR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_BP_Customer_Acct.C_BPartner_ID AS NAME
        FROM C_BP_Customer_Acct
        WHERE C_BP_Customer_Acct.C_Bp_Customer_Acct_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table1 on (C_BPartner.C_BPartner_ID = table1.C_BPartner_ID) WHERE C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="cBpartnerId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table1 on (C_BPartner.C_BPartner_ID = table1.C_BPartner_ID) WHERE C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="cBpartnerId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_BP_Customer_Acct
        SET C_BPartner_ID = (?) , Status = (?) , C_AcctSchema_ID = (?) , C_Bp_Customer_Acct_ID = (?) , IsActive = (?) , C_Receivable_Acct = (?) , C_Prepayment_Acct = (?) , AD_Org_ID = (?) , AD_Client_ID = (?) , updated = now(), updatedby = ? 
        WHERE C_BP_Customer_Acct.C_Bp_Customer_Acct_ID = ? 
                 AND C_BP_Customer_Acct.C_BPartner_ID = ? 
        AND C_BP_Customer_Acct.AD_Client_ID IN ('1') 
        AND C_BP_Customer_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cBpartnerId"></Parameter> <Parameter name="status"></Parameter> <Parameter name="cAcctschemaId"></Parameter> <Parameter name="cBpCustomerAcctId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cReceivableAcct"></Parameter> <Parameter name="cPrepaymentAcct"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adClientId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cBpCustomerAcctId"></Parameter>
    
    <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BP_Customer_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BP_Customer_Acct.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_BP_Customer_Acct 
        (C_BPartner_ID, Status, C_AcctSchema_ID, C_Bp_Customer_Acct_ID, IsActive, C_Receivable_Acct, C_Prepayment_Acct, AD_Org_ID, AD_Client_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cBpartnerId"></Parameter> <Parameter name="status"></Parameter> <Parameter name="cAcctschemaId"></Parameter> <Parameter name="cBpCustomerAcctId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cReceivableAcct"></Parameter> <Parameter name="cPrepaymentAcct"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adClientId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_BP_Customer_Acct
        WHERE C_BP_Customer_Acct.C_Bp_Customer_Acct_ID = ? 
                 AND C_BP_Customer_Acct.C_BPartner_ID = ? 
        AND C_BP_Customer_Acct.AD_Client_ID IN ('1') 
        AND C_BP_Customer_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BP_Customer_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BP_Customer_Acct.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_BP_Customer_Acct
        WHERE C_BP_Customer_Acct.C_Bp_Customer_Acct_ID = ? 
                 AND C_BP_Customer_Acct.C_BPartner_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_BP_Customer_Acct
         WHERE C_BP_Customer_Acct.C_Bp_Customer_Acct_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_BP_Customer_Acct
         WHERE C_BP_Customer_Acct.C_Bp_Customer_Acct_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>