<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="PriceAdjustmentProductAssignmentData" package="org.openbravo.erpWindows.BusinessPartner">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(m_offerbpartner_v.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = m_offerbpartner_v.CreatedBy) as CreatedByR, 
        to_char(m_offerbpartner_v.Updated, ?) as updated, 
        to_char(m_offerbpartner_v.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        m_offerbpartner_v.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = m_offerbpartner_v.UpdatedBy) as UpdatedByR,
        m_offerbpartner_v.C_Bpartner_ID, 
(CASE WHEN m_offerbpartner_v.C_Bpartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
m_offerbpartner_v.Name, 
COALESCE(m_offerbpartner_v.Isactive, 'N') AS Isactive, 
m_offerbpartner_v.Datefrom, 
m_offerbpartner_v.Dateto, 
m_offerbpartner_v.QTY_From, 
m_offerbpartner_v.QTY_To, 
m_offerbpartner_v.Priority, 
m_offerbpartner_v.Discount, 
m_offerbpartner_v.Addamt, 
m_offerbpartner_v.Fixed, 
m_offerbpartner_v.M_Product_Category_ID, 
(CASE WHEN m_offerbpartner_v.M_Product_Category_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS M_Product_Category_IDR, 
m_offerbpartner_v.M_Pricelist_ID, 
(CASE WHEN m_offerbpartner_v.M_Pricelist_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS M_Pricelist_IDR, 
m_offerbpartner_v.M_Product_ID, 
(CASE WHEN m_offerbpartner_v.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL4.Name IS NULL THEN TO_CHAR(table4.Name) ELSE TO_CHAR(tableTRL4.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
m_offerbpartner_v.C_Uom_ID, 
(CASE WHEN m_offerbpartner_v.C_Uom_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'') ) END) AS C_Uom_IDR, 
m_offerbpartner_v.M_Manufacturer_ID, 
COALESCE(m_offerbpartner_v.Prod_Cat_Selection, 'N') AS Prod_Cat_Selection, 
COALESCE(m_offerbpartner_v.Bpartner_Selection, 'N') AS Bpartner_Selection, 
m_offerbpartner_v.AD_Org_ID, 
COALESCE(m_offerbpartner_v.Pricelist_Selection, 'N') AS Pricelist_Selection, 
m_offerbpartner_v.AD_Client_ID, 
COALESCE(m_offerbpartner_v.BP_Group_Selection, 'N') AS BP_Group_Selection, 
COALESCE(m_offerbpartner_v.Product_Selection, 'N') AS Product_Selection, 
m_offerbpartner_v.M_Offerbpartner_V_ID, 
m_offerbpartner_v.Description, 
 
        ? AS LANGUAGE 
        FROM m_offerbpartner_v left join (select C_Bpartner_ID, Name from C_Bpartner) table1 on (m_offerbpartner_v.C_Bpartner_ID = table1.C_Bpartner_ID) left join (select M_Product_Category_ID, Name from M_Product_Category) table2 on (m_offerbpartner_v.M_Product_Category_ID = table2.M_Product_Category_ID) left join (select M_PriceList_ID, Name from M_PriceList) table3 on (m_offerbpartner_v.M_Pricelist_ID =  table3.M_PriceList_ID) left join (select M_Product_ID, Value, Name from M_Product) table4 on (m_offerbpartner_v.M_Product_ID = table4.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL4 on (table4.M_Product_ID = tableTRL4.M_Product_ID and tableTRL4.AD_Language = ?)  left join (select C_Uom_ID, Name from C_Uom) table5 on (m_offerbpartner_v.C_Uom_ID = table5.C_Uom_ID) left join (select C_UOM_ID,AD_Language, Name from C_UOM_TRL) tableTRL5 on (table5.C_UOM_ID = tableTRL5.C_UOM_ID and tableTRL5.AD_Language = ?) 
        WHERE 2=2 
 AND m_offerbpartner_v.c_bpartner_id=?
        AND 1=1 
        AND m_offerbpartner_v.M_Offerbpartner_V_ID = ? 
        AND m_offerbpartner_v.AD_Client_ID IN ('1') 
           AND m_offerbpartner_v.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="c_bpartner_id"/>

    <Parameter name="cBpartnerId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND m_offerbpartner_v.C_Bpartner_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="m_offerbpartner_v.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m_offerbpartner_v.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
<Parameter name="qtyFrom"></Parameter><Parameter name="addamt"></Parameter><Parameter name="mManufacturerId"></Parameter><Parameter name="mOfferbpartnerVId"></Parameter><Parameter name="productSelection"></Parameter><Parameter name="name"></Parameter><Parameter name="mPricelistId"></Parameter><Parameter name="discount"></Parameter><Parameter name="mProductCategoryId"></Parameter><Parameter name="description"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="mProductId"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="cUomId"></Parameter><Parameter name="priority"></Parameter><Parameter name="datefrom"></Parameter><Parameter name="bpartnerSelection"></Parameter><Parameter name="bpGroupSelection"></Parameter><Parameter name="fixed"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="prodCatSelection"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="pricelistSelection"></Parameter><Parameter name="isactive"></Parameter><Parameter name="dateto"></Parameter><Parameter name="qtyTo"></Parameter><Parameter name="adClientId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef190E88C98AF146659837BFB531E55F84_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefC3245A49E1E744E6923D8E776A2D607A_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefFC5B56E488AB4993A00DD3FA829D907E_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT m_offerbpartner_v.C_Bpartner_ID AS NAME
        FROM m_offerbpartner_v
        WHERE m_offerbpartner_v.M_Offerbpartner_V_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_BPartner left join (select C_Bpartner_ID, Name from C_Bpartner) table1 on (C_BPartner.C_Bpartner_ID = table1.C_Bpartner_ID) WHERE C_BPartner.C_Bpartner_ID = ?  
    ]]></Sql>
<Parameter name="cBpartnerId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_BPartner left join (select C_Bpartner_ID, Name from C_Bpartner) table1 on (C_BPartner.C_Bpartner_ID = table1.C_Bpartner_ID) WHERE C_BPartner.C_Bpartner_ID = ?  
    ]]></Sql>
<Parameter name="cBpartnerId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE m_offerbpartner_v
        SET C_Bpartner_ID = (?) , Name = (?) , Isactive = (?) , Datefrom = TO_DATE(?) , Dateto = TO_DATE(?) , QTY_From = TO_NUMBER(?) , QTY_To = TO_NUMBER(?) , Priority = TO_NUMBER(?) , Discount = TO_NUMBER(?) , Addamt = TO_NUMBER(?) , Fixed = TO_NUMBER(?) , M_Product_Category_ID = (?) , M_Pricelist_ID = (?) , M_Product_ID = (?) , C_Uom_ID = (?) , M_Manufacturer_ID = (?) , Prod_Cat_Selection = (?) , Bpartner_Selection = (?) , AD_Org_ID = (?) , Pricelist_Selection = (?) , AD_Client_ID = (?) , BP_Group_Selection = (?) , Product_Selection = (?) , M_Offerbpartner_V_ID = (?) , Description = (?) , updated = now(), updatedby = ? 
        WHERE m_offerbpartner_v.M_Offerbpartner_V_ID = ? 
                 AND m_offerbpartner_v.C_Bpartner_ID = ? 
        AND m_offerbpartner_v.AD_Client_ID IN ('1') 
        AND m_offerbpartner_v.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cBpartnerId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="datefrom"></Parameter> <Parameter name="dateto"></Parameter> <Parameter name="qtyFrom"></Parameter> <Parameter name="qtyTo"></Parameter> <Parameter name="priority"></Parameter> <Parameter name="discount"></Parameter> <Parameter name="addamt"></Parameter> <Parameter name="fixed"></Parameter> <Parameter name="mProductCategoryId"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="cUomId"></Parameter> <Parameter name="mManufacturerId"></Parameter> <Parameter name="prodCatSelection"></Parameter> <Parameter name="bpartnerSelection"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="pricelistSelection"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="bpGroupSelection"></Parameter> <Parameter name="productSelection"></Parameter> <Parameter name="mOfferbpartnerVId"></Parameter> <Parameter name="description"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mOfferbpartnerVId"></Parameter>
    
    <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="m_offerbpartner_v.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m_offerbpartner_v.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO m_offerbpartner_v 
        (C_Bpartner_ID, Name, Isactive, Datefrom, Dateto, QTY_From, QTY_To, Priority, Discount, Addamt, Fixed, M_Product_Category_ID, M_Pricelist_ID, M_Product_ID, C_Uom_ID, M_Manufacturer_ID, Prod_Cat_Selection, Bpartner_Selection, AD_Org_ID, Pricelist_Selection, AD_Client_ID, BP_Group_Selection, Product_Selection, M_Offerbpartner_V_ID, Description, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), TO_DATE(?), TO_DATE(?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cBpartnerId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="datefrom"></Parameter> <Parameter name="dateto"></Parameter> <Parameter name="qtyFrom"></Parameter> <Parameter name="qtyTo"></Parameter> <Parameter name="priority"></Parameter> <Parameter name="discount"></Parameter> <Parameter name="addamt"></Parameter> <Parameter name="fixed"></Parameter> <Parameter name="mProductCategoryId"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="cUomId"></Parameter> <Parameter name="mManufacturerId"></Parameter> <Parameter name="prodCatSelection"></Parameter> <Parameter name="bpartnerSelection"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="pricelistSelection"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="bpGroupSelection"></Parameter> <Parameter name="productSelection"></Parameter> <Parameter name="mOfferbpartnerVId"></Parameter> <Parameter name="description"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM m_offerbpartner_v
        WHERE m_offerbpartner_v.M_Offerbpartner_V_ID = ? 
                 AND m_offerbpartner_v.C_Bpartner_ID = ? 
        AND m_offerbpartner_v.AD_Client_ID IN ('1') 
        AND m_offerbpartner_v.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="m_offerbpartner_v.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m_offerbpartner_v.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM m_offerbpartner_v
        WHERE m_offerbpartner_v.M_Offerbpartner_V_ID = ? 
                 AND m_offerbpartner_v.C_Bpartner_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM m_offerbpartner_v
         WHERE m_offerbpartner_v.M_Offerbpartner_V_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM m_offerbpartner_v
         WHERE m_offerbpartner_v.M_Offerbpartner_V_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>