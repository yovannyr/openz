<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="FormAccessData" package="org.openbravo.erpWindows.Role">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(AD_Form_Access.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = AD_Form_Access.CreatedBy) as CreatedByR, 
        to_char(AD_Form_Access.Updated, ?) as updated, 
        to_char(AD_Form_Access.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        AD_Form_Access.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = AD_Form_Access.UpdatedBy) as UpdatedByR,
        AD_Form_Access.AD_Form_Access_ID, 
AD_Form_Access.AD_Client_ID, 
(CASE WHEN AD_Form_Access.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
AD_Form_Access.AD_Org_ID, 
(CASE WHEN AD_Form_Access.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
AD_Form_Access.AD_Role_ID, 
(CASE WHEN AD_Form_Access.AD_Role_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS AD_Role_IDR, 
AD_Form_Access.AD_Form_ID, 
(CASE WHEN AD_Form_Access.AD_Form_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS AD_Form_IDR, 
COALESCE(AD_Form_Access.IsActive, 'N') AS IsActive, 
COALESCE(AD_Form_Access.IsReadWrite, 'N') AS IsReadWrite, 
 
        ? AS LANGUAGE 
        FROM AD_Form_Access left join (select AD_Client_ID, Name from AD_Client) table1 on (AD_Form_Access.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (AD_Form_Access.AD_Org_ID = table2.AD_Org_ID) left join (select AD_Role_ID, Name from AD_Role) table3 on (AD_Form_Access.AD_Role_ID = table3.AD_Role_ID) left join (select AD_Form_ID, Name from AD_Form) table4 on (AD_Form_Access.AD_Form_ID = table4.AD_Form_ID)
        WHERE 2=2 

        AND 1=1 
        AND AD_Form_Access.AD_Form_Access_ID = ? 
        
        
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>

    <Parameter name="adRoleId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND AD_Form_Access.AD_Role_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
    
    

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="adRoleId" id="paramKeyParent"></Parameter>
<Parameter name="isreadwrite"></Parameter><Parameter name="adFormId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="adFormAccessId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="adClientId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef4629_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4631_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT AD_Form_Access.AD_Role_ID AS NAME
        FROM AD_Form_Access
        WHERE AD_Form_Access.AD_Form_Access_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM AD_Role left join (select AD_Role_ID, Name from AD_Role) table1 on (AD_Role.AD_Role_ID = table1.AD_Role_ID) WHERE AD_Role.AD_Role_ID = ?  
    ]]></Sql>
<Parameter name="adRoleId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM AD_Role left join (select AD_Role_ID, Name from AD_Role) table1 on (AD_Role.AD_Role_ID = table1.AD_Role_ID) WHERE AD_Role.AD_Role_ID = ?  
    ]]></Sql>
<Parameter name="adRoleId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE AD_Form_Access
        SET AD_Form_Access_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , AD_Role_ID = (?) , AD_Form_ID = (?) , IsActive = (?) , IsReadWrite = (?) , updated = now(), updatedby = ? 
        WHERE AD_Form_Access.AD_Form_Access_ID = ? 
                 AND AD_Form_Access.AD_Role_ID = ? 
        
        
    ]]></Sql>
    <Parameter name="adFormAccessId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adRoleId"></Parameter> <Parameter name="adFormId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="isreadwrite"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="adFormAccessId"></Parameter>
    
    <Parameter name="adRoleId" id="paramKeyParent"></Parameter>
    
    
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO AD_Form_Access 
        (AD_Form_Access_ID, AD_Client_ID, AD_Org_ID, AD_Role_ID, AD_Form_ID, IsActive, IsReadWrite, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adFormAccessId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adRoleId"></Parameter> <Parameter name="adFormId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="isreadwrite"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM AD_Form_Access
        WHERE AD_Form_Access.AD_Form_Access_ID = ? 
                 AND AD_Form_Access.AD_Role_ID = ? 
        
        
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adRoleId" id="paramKeyParent"></Parameter>
    
    
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM AD_Form_Access
        WHERE AD_Form_Access.AD_Form_Access_ID = ? 
                 AND AD_Form_Access.AD_Role_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adRoleId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM AD_Form_Access
         WHERE AD_Form_Access.AD_Form_Access_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM AD_Form_Access
         WHERE AD_Form_Access.AD_Form_Access_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>