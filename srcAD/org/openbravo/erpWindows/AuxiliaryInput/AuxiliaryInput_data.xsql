<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="AuxiliaryInputData" package="org.openbravo.erpWindows.AuxiliaryInput">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(AD_AuxiliarInput.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = AD_AuxiliarInput.CreatedBy) as CreatedByR, 
        to_char(AD_AuxiliarInput.Updated, ?) as updated, 
        to_char(AD_AuxiliarInput.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        AD_AuxiliarInput.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = AD_AuxiliarInput.UpdatedBy) as UpdatedByR,
        AD_AuxiliarInput.Ad_Auxiliarinput_Id, 
AD_AuxiliarInput.AD_Client_ID, 
(CASE WHEN AD_AuxiliarInput.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
AD_AuxiliarInput.AD_Org_ID, 
(CASE WHEN AD_AuxiliarInput.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
AD_AuxiliarInput.AD_Module_ID, 
(CASE WHEN AD_AuxiliarInput.AD_Module_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Version), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS AD_Module_IDR, 
AD_AuxiliarInput.AD_Tab_ID, 
(CASE WHEN AD_AuxiliarInput.AD_Tab_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL6.Name IS NULL THEN TO_CHAR(table6.Name) ELSE TO_CHAR(tableTRL6.Name) END)), ''))),'') ) END) AS AD_Tab_IDR, 
AD_AuxiliarInput.Name, 
COALESCE(AD_AuxiliarInput.IsActive, 'N') AS IsActive, 
AD_AuxiliarInput.Code, 
 
        ? AS LANGUAGE 
        FROM AD_AuxiliarInput left join (select AD_Client_ID, Name from AD_Client) table1 on (AD_AuxiliarInput.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (AD_AuxiliarInput.AD_Org_ID = table2.AD_Org_ID) left join (select AD_Module_ID, Name, Version, AD_Language from AD_Module) table3 on (AD_AuxiliarInput.AD_Module_ID = table3.AD_Module_ID) left join (select AD_Language, Name from AD_Language) table4 on (table3.AD_Language =  table4.AD_Language) left join (select AD_Tab_ID, Name, AD_Window_ID from AD_Tab) table5 on (AD_AuxiliarInput.AD_Tab_ID = table5.AD_Tab_ID) left join (select AD_Tab_ID,AD_Language, Name from AD_Tab_TRL) tableTRL5 on (table5.AD_Tab_ID = tableTRL5.AD_Tab_ID and tableTRL5.AD_Language = ?)  left join (select AD_Window_ID, Name from AD_Window) table6 on (table5.AD_Window_ID = table6.AD_Window_ID) left join (select AD_Window_ID,AD_Language, Name from AD_Window_TRL) tableTRL6 on (table6.AD_Window_ID = tableTRL6.AD_Window_ID and tableTRL6.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND AD_AuxiliarInput.Ad_Auxiliarinput_Id = ? 
        AND AD_AuxiliarInput.AD_Client_ID IN ('1') 
           AND AD_AuxiliarInput.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_AuxiliarInput.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_AuxiliarInput.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="adModuleId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="code"></Parameter><Parameter name="adTabId"></Parameter><Parameter name="adAuxiliarinputId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="name"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef5661DEEC4310FC21E040007F01004C04" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT MAX(AD_MODULE_ID) FROM AD_MODULE WHERE ISDEFAULT='Y' 
    ]]></Sql>

  </SqlMethod>

   <SqlMethod name="selectDef800025_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef800017_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE AD_AuxiliarInput
        SET Ad_Auxiliarinput_Id = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , AD_Module_ID = (?) , AD_Tab_ID = (?) , Name = (?) , IsActive = (?) , Code = (?) , updated = now(), updatedby = ? 
        WHERE AD_AuxiliarInput.Ad_Auxiliarinput_Id = ? 
        
        AND AD_AuxiliarInput.AD_Client_ID IN ('1') 
        AND AD_AuxiliarInput.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adAuxiliarinputId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adModuleId"></Parameter> <Parameter name="adTabId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="code"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="adAuxiliarinputId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_AuxiliarInput.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_AuxiliarInput.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO AD_AuxiliarInput 
        (Ad_Auxiliarinput_Id, AD_Client_ID, AD_Org_ID, AD_Module_ID, AD_Tab_ID, Name, IsActive, Code, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adAuxiliarinputId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adModuleId"></Parameter> <Parameter name="adTabId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="code"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM AD_AuxiliarInput
        WHERE AD_AuxiliarInput.Ad_Auxiliarinput_Id = ? 
        
        AND AD_AuxiliarInput.AD_Client_ID IN ('1') 
        AND AD_AuxiliarInput.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_AuxiliarInput.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_AuxiliarInput.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM AD_AuxiliarInput
        WHERE AD_AuxiliarInput.Ad_Auxiliarinput_Id = ? 
        
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM AD_AuxiliarInput
         WHERE AD_AuxiliarInput.Ad_Auxiliarinput_Id = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM AD_AuxiliarInput
         WHERE AD_AuxiliarInput.Ad_Auxiliarinput_Id = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>