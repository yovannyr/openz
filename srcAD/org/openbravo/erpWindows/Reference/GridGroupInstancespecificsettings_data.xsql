<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="GridGroupInstancespecificsettingsData" package="org.openbravo.erpWindows.Reference">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(ad_ref_groupinstance.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = ad_ref_groupinstance.CreatedBy) as CreatedByR, 
        to_char(ad_ref_groupinstance.Updated, ?) as updated, 
        to_char(ad_ref_groupinstance.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        ad_ref_groupinstance.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = ad_ref_groupinstance.UpdatedBy) as UpdatedByR,
        ad_ref_groupinstance.AD_Ref_Groupinstance_ID, 
ad_ref_groupinstance.AD_Ref_Group_ID, 
(CASE WHEN ad_ref_groupinstance.AD_Ref_Group_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(list1.name),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Idcolumn), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Level), ''))),'') ) END) AS AD_Ref_Group_IDR, 
ad_ref_groupinstance.Line, 
COALESCE(ad_ref_groupinstance.Isautoheader, 'N') AS Isautoheader, 
ad_ref_groupinstance.AD_Client_ID, 
ad_ref_groupinstance.AD_Org_ID, 
ad_ref_groupinstance.Hasselectline, 
(CASE WHEN ad_ref_groupinstance.Hasselectline IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list2.name),'') ) END) AS HasselectlineR, 
ad_ref_groupinstance.Hasselectallbelow, 
(CASE WHEN ad_ref_groupinstance.Hasselectallbelow IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list3.name),'') ) END) AS HasselectallbelowR, 
ad_ref_groupinstance.Hasevenodd, 
(CASE WHEN ad_ref_groupinstance.Hasevenodd IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list4.name),'') ) END) AS HasevenoddR, 
ad_ref_groupinstance.Hasexpander, 
(CASE WHEN ad_ref_groupinstance.Hasexpander IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list5.name),'') ) END) AS HasexpanderR, 
ad_ref_groupinstance.Headerformatbold, 
(CASE WHEN ad_ref_groupinstance.Headerformatbold IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list6.name),'') ) END) AS HeaderformatboldR, 
ad_ref_groupinstance.Colsvisibleoninit, 
(CASE WHEN ad_ref_groupinstance.Colsvisibleoninit IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list7.name),'') ) END) AS ColsvisibleoninitR, 
ad_ref_groupinstance.Leadingemptycols, 
ad_ref_groupinstance.Level, 
COALESCE(ad_ref_groupinstance.Isactive, 'N') AS Isactive, 
 
        ? AS LANGUAGE 
        FROM ad_ref_groupinstance left join (select AD_Ref_Group_ID, AD_Reference_ID, Idcolumn, Level from AD_Ref_Group) table1 on (ad_ref_groupinstance.AD_Ref_Group_ID = table1.AD_Ref_Group_ID) left join (select AD_Reference_ID, Name, ValidationType from AD_Reference) table2 on (table1.AD_Reference_ID = table2.AD_Reference_ID) left join (select AD_Reference_ID,AD_Language, Name from AD_Reference_TRL) tableTRL2 on (table2.AD_Reference_ID = tableTRL2.AD_Reference_ID and tableTRL2.AD_Language = ?)  left join ad_ref_list_v list1 on (table2.ValidationType = list1.value and list1.ad_reference_id = '2' and list1.ad_language = ?)  left join ad_ref_list_v list2 on (ad_ref_groupinstance.Hasselectline = list2.value and list2.ad_reference_id = 'BE2C89D33763486BBCDDB2E1D63A5B00' and list2.ad_language = ?)  left join ad_ref_list_v list3 on (ad_ref_groupinstance.Hasselectallbelow = list3.value and list3.ad_reference_id = 'BE2C89D33763486BBCDDB2E1D63A5B00' and list3.ad_language = ?)  left join ad_ref_list_v list4 on (ad_ref_groupinstance.Hasevenodd = list4.value and list4.ad_reference_id = 'BE2C89D33763486BBCDDB2E1D63A5B00' and list4.ad_language = ?)  left join ad_ref_list_v list5 on (ad_ref_groupinstance.Hasexpander = list5.value and list5.ad_reference_id = 'BE2C89D33763486BBCDDB2E1D63A5B00' and list5.ad_language = ?)  left join ad_ref_list_v list6 on (ad_ref_groupinstance.Headerformatbold = list6.value and list6.ad_reference_id = 'BE2C89D33763486BBCDDB2E1D63A5B00' and list6.ad_language = ?)  left join ad_ref_list_v list7 on (ad_ref_groupinstance.Colsvisibleoninit = list7.value and list7.ad_reference_id = 'BE2C89D33763486BBCDDB2E1D63A5B00' and list7.ad_language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND ad_ref_groupinstance.AD_Ref_Groupinstance_ID = ? 
        AND ad_ref_groupinstance.AD_Client_ID IN ('1') 
           AND ad_ref_groupinstance.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="adRefGroupId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND ad_ref_groupinstance.AD_Ref_Group_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ad_ref_groupinstance.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ad_ref_groupinstance.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="adRefGroupId" id="paramKeyParent"></Parameter>
<Parameter name="adClientId"></Parameter><Parameter name="level"></Parameter><Parameter name="isautoheader"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="adRefGroupinstanceId"></Parameter><Parameter name="colsvisibleoninit"></Parameter><Parameter name="headerformatbold"></Parameter><Parameter name="leadingemptycols"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="hasexpander"></Parameter><Parameter name="hasselectline"></Parameter><Parameter name="line"></Parameter><Parameter name="hasevenodd"></Parameter><Parameter name="hasselectallbelow"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef18BB3E360A21450481E71D7CB1A3175F_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef15410E5EFB824833AD19173F8655A7E6_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT ad_ref_groupinstance.AD_Ref_Group_ID AS NAME
        FROM ad_ref_groupinstance
        WHERE ad_ref_groupinstance.AD_Ref_Groupinstance_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), '')) || ' - ' || list1.name || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Idcolumn), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Level), ''))) AS NAME FROM ad_ref_group left join (select AD_Ref_Group_ID, AD_Reference_ID, Idcolumn, Level from AD_Ref_Group) table1 on (ad_ref_group.AD_Ref_Group_ID = table1.AD_Ref_Group_ID) left join (select AD_Reference_ID, Name, ValidationType from AD_Reference) table2 on (table1.AD_Reference_ID = table2.AD_Reference_ID) left join (select AD_Reference_ID,AD_Language, Name from AD_Reference_TRL) tableTRL2 on (table2.AD_Reference_ID = tableTRL2.AD_Reference_ID and tableTRL2.AD_Language = ?)  left join ad_ref_list_v list1 on (table2.ValidationType = list1.value and list1.ad_reference_id = '2' and list1.ad_language = ?)  WHERE ad_ref_group.AD_Ref_Group_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="adRefGroupId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), '')) || ' - ' || list1.name || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Idcolumn), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Level), ''))) AS NAME FROM ad_ref_group left join (select AD_Ref_Group_ID, AD_Reference_ID, Idcolumn, Level from AD_Ref_Group) table1 on (ad_ref_group.AD_Ref_Group_ID = table1.AD_Ref_Group_ID) left join (select AD_Reference_ID, Name, ValidationType from AD_Reference) table2 on (table1.AD_Reference_ID = table2.AD_Reference_ID) left join (select AD_Reference_ID,AD_Language, Name from AD_Reference_TRL) tableTRL2 on (table2.AD_Reference_ID = tableTRL2.AD_Reference_ID and tableTRL2.AD_Language = ?)  left join ad_ref_list_v list1 on (table2.ValidationType = list1.value and list1.ad_reference_id = '2' and list1.ad_language = ?)  WHERE ad_ref_group.AD_Ref_Group_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="adRefGroupId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE ad_ref_groupinstance
        SET AD_Ref_Groupinstance_ID = (?) , AD_Ref_Group_ID = (?) , Line = TO_NUMBER(?) , Isautoheader = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , Hasselectline = (?) , Hasselectallbelow = (?) , Hasevenodd = (?) , Hasexpander = (?) , Headerformatbold = (?) , Colsvisibleoninit = (?) , Leadingemptycols = TO_NUMBER(?) , Level = TO_NUMBER(?) , Isactive = (?) , updated = now(), updatedby = ? 
        WHERE ad_ref_groupinstance.AD_Ref_Groupinstance_ID = ? 
                 AND ad_ref_groupinstance.AD_Ref_Group_ID = ? 
        AND ad_ref_groupinstance.AD_Client_ID IN ('1') 
        AND ad_ref_groupinstance.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adRefGroupinstanceId"></Parameter> <Parameter name="adRefGroupId"></Parameter> <Parameter name="line"></Parameter> <Parameter name="isautoheader"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="hasselectline"></Parameter> <Parameter name="hasselectallbelow"></Parameter> <Parameter name="hasevenodd"></Parameter> <Parameter name="hasexpander"></Parameter> <Parameter name="headerformatbold"></Parameter> <Parameter name="colsvisibleoninit"></Parameter> <Parameter name="leadingemptycols"></Parameter> <Parameter name="level"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="adRefGroupinstanceId"></Parameter>
    
    <Parameter name="adRefGroupId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ad_ref_groupinstance.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ad_ref_groupinstance.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO ad_ref_groupinstance 
        (AD_Ref_Groupinstance_ID, AD_Ref_Group_ID, Line, Isautoheader, AD_Client_ID, AD_Org_ID, Hasselectline, Hasselectallbelow, Hasevenodd, Hasexpander, Headerformatbold, Colsvisibleoninit, Leadingemptycols, Level, Isactive, created, createdby, updated, updatedBy)
        VALUES ((?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adRefGroupinstanceId"></Parameter> <Parameter name="adRefGroupId"></Parameter> <Parameter name="line"></Parameter> <Parameter name="isautoheader"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="hasselectline"></Parameter> <Parameter name="hasselectallbelow"></Parameter> <Parameter name="hasevenodd"></Parameter> <Parameter name="hasexpander"></Parameter> <Parameter name="headerformatbold"></Parameter> <Parameter name="colsvisibleoninit"></Parameter> <Parameter name="leadingemptycols"></Parameter> <Parameter name="level"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM ad_ref_groupinstance
        WHERE ad_ref_groupinstance.AD_Ref_Groupinstance_ID = ? 
                 AND ad_ref_groupinstance.AD_Ref_Group_ID = ? 
        AND ad_ref_groupinstance.AD_Client_ID IN ('1') 
        AND ad_ref_groupinstance.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adRefGroupId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ad_ref_groupinstance.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ad_ref_groupinstance.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM ad_ref_groupinstance
        WHERE ad_ref_groupinstance.AD_Ref_Groupinstance_ID = ? 
                 AND ad_ref_groupinstance.AD_Ref_Group_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adRefGroupId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM ad_ref_groupinstance
         WHERE ad_ref_groupinstance.AD_Ref_Groupinstance_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM ad_ref_groupinstance
         WHERE ad_ref_groupinstance.AD_Ref_Groupinstance_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>