<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="ListReferenceInstanceSpecificData" package="org.openbravo.erpWindows.Reference">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(ad_ref_listinstance.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = ad_ref_listinstance.CreatedBy) as CreatedByR, 
        to_char(ad_ref_listinstance.Updated, ?) as updated, 
        to_char(ad_ref_listinstance.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        ad_ref_listinstance.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = ad_ref_listinstance.UpdatedBy) as UpdatedByR,
        ad_ref_listinstance.AD_Ref_Listinstance_ID, 
ad_ref_listinstance.AD_Ref_List_ID, 
(CASE WHEN ad_ref_listinstance.AD_Ref_List_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'') ) END) AS AD_Ref_List_IDR, 
ad_ref_listinstance.AD_Reference_ID, 
(CASE WHEN ad_ref_listinstance.AD_Reference_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(list1.name),'') ) END) AS AD_Reference_IDR, 
ad_ref_listinstance.AD_Client_ID, 
ad_ref_listinstance.AD_Org_ID, 
COALESCE(ad_ref_listinstance.Ishidden, 'N') AS Ishidden, 
COALESCE(ad_ref_listinstance.Isactive, 'N') AS Isactive, 
ad_ref_listinstance.Value, 
ad_ref_listinstance.Name, 
ad_ref_listinstance.Seqno, 
COALESCE(ad_ref_listinstance.Isdefault, 'N') AS Isdefault, 
ad_ref_listinstance.AD_Window_ID, 
(CASE WHEN ad_ref_listinstance.AD_Window_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS AD_Window_IDR, 
ad_ref_listinstance.AD_Tab_ID, 
(CASE WHEN ad_ref_listinstance.AD_Tab_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL4.Name IS NULL THEN TO_CHAR(table4.Name) ELSE TO_CHAR(tableTRL4.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'') ) END) AS AD_Tab_IDR, 
 
        ? AS LANGUAGE 
        FROM ad_ref_listinstance left join (select AD_Ref_List_ID, Name from AD_Ref_List) table1 on (ad_ref_listinstance.AD_Ref_List_ID = table1.AD_Ref_List_ID) left join (select AD_Ref_List_ID,AD_Language, Name from AD_Ref_List_TRL) tableTRL1 on (table1.AD_Ref_List_ID = tableTRL1.AD_Ref_List_ID and tableTRL1.AD_Language = ?)  left join (select AD_Reference_ID, Name, ValidationType from AD_Reference) table2 on (ad_ref_listinstance.AD_Reference_ID = table2.AD_Reference_ID) left join (select AD_Reference_ID,AD_Language, Name from AD_Reference_TRL) tableTRL2 on (table2.AD_Reference_ID = tableTRL2.AD_Reference_ID and tableTRL2.AD_Language = ?)  left join ad_ref_list_v list1 on (table2.ValidationType = list1.value and list1.ad_reference_id = '2' and list1.ad_language = ?)  left join (select AD_Window_ID, Name from AD_Window) table3 on (ad_ref_listinstance.AD_Window_ID = table3.AD_Window_ID) left join (select AD_Window_ID,AD_Language, Name from AD_Window_TRL) tableTRL3 on (table3.AD_Window_ID = tableTRL3.AD_Window_ID and tableTRL3.AD_Language = ?)  left join (select AD_Tab_ID, Name, AD_Window_ID from AD_Tab) table4 on (ad_ref_listinstance.AD_Tab_ID = table4.AD_Tab_ID) left join (select AD_Tab_ID,AD_Language, Name from AD_Tab_TRL) tableTRL4 on (table4.AD_Tab_ID = tableTRL4.AD_Tab_ID and tableTRL4.AD_Language = ?)  left join (select AD_Window_ID, Name from AD_Window) table5 on (table4.AD_Window_ID = table5.AD_Window_ID) left join (select AD_Window_ID,AD_Language, Name from AD_Window_TRL) tableTRL5 on (table5.AD_Window_ID = tableTRL5.AD_Window_ID and tableTRL5.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND ad_ref_listinstance.AD_Ref_Listinstance_ID = ? 
        AND ad_ref_listinstance.AD_Client_ID IN ('1') 
           AND ad_ref_listinstance.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="adRefListId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND ad_ref_listinstance.AD_Ref_List_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ad_ref_listinstance.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ad_ref_listinstance.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="adRefListId" id="paramKeyParent"></Parameter>
<Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="seqno"></Parameter><Parameter name="isactive"></Parameter><Parameter name="adTabId"></Parameter><Parameter name="adRefListinstanceId"></Parameter><Parameter name="adWindowId"></Parameter><Parameter name="name"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="value"></Parameter><Parameter name="adReferenceId"></Parameter><Parameter name="isdefault"></Parameter><Parameter name="ishidden"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDefAF3D277F70304A38964CAE2A24C8EC44_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef57AA0E1D92A94D2EA1FF8A19A2F689C9_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT ad_ref_listinstance.AD_Ref_List_ID AS NAME
        FROM ad_ref_listinstance
        WHERE ad_ref_listinstance.AD_Ref_Listinstance_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM AD_Ref_List left join (select AD_Ref_List_ID, Name from AD_Ref_List) table1 on (AD_Ref_List.AD_Ref_List_ID = table1.AD_Ref_List_ID) left join (select AD_Ref_List_ID,AD_Language, Name from AD_Ref_List_TRL) tableTRL1 on (table1.AD_Ref_List_ID = tableTRL1.AD_Ref_List_ID and tableTRL1.AD_Language = ?)  WHERE AD_Ref_List.AD_Ref_List_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="adRefListId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM AD_Ref_List left join (select AD_Ref_List_ID, Name from AD_Ref_List) table1 on (AD_Ref_List.AD_Ref_List_ID = table1.AD_Ref_List_ID) left join (select AD_Ref_List_ID,AD_Language, Name from AD_Ref_List_TRL) tableTRL1 on (table1.AD_Ref_List_ID = tableTRL1.AD_Ref_List_ID and tableTRL1.AD_Language = ?)  WHERE AD_Ref_List.AD_Ref_List_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="adRefListId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE ad_ref_listinstance
        SET AD_Ref_Listinstance_ID = (?) , AD_Ref_List_ID = (?) , AD_Reference_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , Ishidden = (?) , Isactive = (?) , Value = (?) , Name = (?) , Seqno = TO_NUMBER(?) , Isdefault = (?) , AD_Window_ID = (?) , AD_Tab_ID = (?) , updated = now(), updatedby = ? 
        WHERE ad_ref_listinstance.AD_Ref_Listinstance_ID = ? 
                 AND ad_ref_listinstance.AD_Ref_List_ID = ? 
        AND ad_ref_listinstance.AD_Client_ID IN ('1') 
        AND ad_ref_listinstance.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adRefListinstanceId"></Parameter> <Parameter name="adRefListId"></Parameter> <Parameter name="adReferenceId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="ishidden"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="value"></Parameter> <Parameter name="name"></Parameter> <Parameter name="seqno"></Parameter> <Parameter name="isdefault"></Parameter> <Parameter name="adWindowId"></Parameter> <Parameter name="adTabId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="adRefListinstanceId"></Parameter>
    
    <Parameter name="adRefListId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ad_ref_listinstance.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ad_ref_listinstance.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO ad_ref_listinstance 
        (AD_Ref_Listinstance_ID, AD_Ref_List_ID, AD_Reference_ID, AD_Client_ID, AD_Org_ID, Ishidden, Isactive, Value, Name, Seqno, Isdefault, AD_Window_ID, AD_Tab_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adRefListinstanceId"></Parameter> <Parameter name="adRefListId"></Parameter> <Parameter name="adReferenceId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="ishidden"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="value"></Parameter> <Parameter name="name"></Parameter> <Parameter name="seqno"></Parameter> <Parameter name="isdefault"></Parameter> <Parameter name="adWindowId"></Parameter> <Parameter name="adTabId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM ad_ref_listinstance
        WHERE ad_ref_listinstance.AD_Ref_Listinstance_ID = ? 
                 AND ad_ref_listinstance.AD_Ref_List_ID = ? 
        AND ad_ref_listinstance.AD_Client_ID IN ('1') 
        AND ad_ref_listinstance.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adRefListId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ad_ref_listinstance.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ad_ref_listinstance.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM ad_ref_listinstance
        WHERE ad_ref_listinstance.AD_Ref_Listinstance_ID = ? 
                 AND ad_ref_listinstance.AD_Ref_List_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adRefListId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM ad_ref_listinstance
         WHERE ad_ref_listinstance.AD_Ref_Listinstance_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM ad_ref_listinstance
         WHERE ad_ref_listinstance.AD_Ref_Listinstance_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>