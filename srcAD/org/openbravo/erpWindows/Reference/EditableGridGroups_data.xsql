<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="EditableGridGroupsData" package="org.openbravo.erpWindows.Reference">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(ad_ref_group.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = ad_ref_group.CreatedBy) as CreatedByR, 
        to_char(ad_ref_group.Updated, ?) as updated, 
        to_char(ad_ref_group.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        ad_ref_group.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = ad_ref_group.UpdatedBy) as UpdatedByR,
        ad_ref_group.AD_Reference_ID, 
(CASE WHEN ad_ref_group.AD_Reference_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(list1.name),'') ) END) AS AD_Reference_IDR, 
ad_ref_group.AD_Ref_Group_ID, 
ad_ref_group.AD_Client_ID, 
ad_ref_group.Line, 
ad_ref_group.AD_Org_ID, 
COALESCE(ad_ref_group.Isautoheader, 'N') AS Isautoheader, 
ad_ref_group.Idcolumn, 
COALESCE(ad_ref_group.Hasselectline, 'N') AS Hasselectline, 
COALESCE(ad_ref_group.Hasselectallbelow, 'N') AS Hasselectallbelow, 
COALESCE(ad_ref_group.Hasevenodd, 'N') AS Hasevenodd, 
COALESCE(ad_ref_group.Hasexpander, 'N') AS Hasexpander, 
COALESCE(ad_ref_group.Headerformatbold, 'N') AS Headerformatbold, 
COALESCE(ad_ref_group.Colsvisibleoninit, 'N') AS Colsvisibleoninit, 
ad_ref_group.Leadingemptycols, 
ad_ref_group.Level, 
COALESCE(ad_ref_group.Isactive, 'N') AS Isactive, 
 
        ? AS LANGUAGE 
        FROM ad_ref_group left join (select AD_Reference_ID, Name, ValidationType from AD_Reference) table1 on (ad_ref_group.AD_Reference_ID = table1.AD_Reference_ID) left join (select AD_Reference_ID,AD_Language, Name from AD_Reference_TRL) tableTRL1 on (table1.AD_Reference_ID = tableTRL1.AD_Reference_ID and tableTRL1.AD_Language = ?)  left join ad_ref_list_v list1 on (table1.ValidationType = list1.value and list1.ad_reference_id = '2' and list1.ad_language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND ad_ref_group.AD_Ref_Group_ID = ? 
        AND ad_ref_group.AD_Client_ID IN ('1') 
           AND ad_ref_group.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="adReferenceId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND ad_ref_group.AD_Reference_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ad_ref_group.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ad_ref_group.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="adReferenceId" id="paramKeyParent"></Parameter>
<Parameter name="colsvisibleoninit"></Parameter><Parameter name="hasexpander"></Parameter><Parameter name="headerformatbold"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="level"></Parameter><Parameter name="isautoheader"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="idcolumn"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="leadingemptycols"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="adRefGroupId"></Parameter><Parameter name="hasevenodd"></Parameter><Parameter name="hasselectline"></Parameter><Parameter name="hasselectallbelow"></Parameter><Parameter name="line"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef3D040AC7B9D3407DB943BCDD9FDCC369_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefA1CBD281C1D7468EBA006C97C1BC467D_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef0DFA31B6C1874378A805AEF24123868C" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT COALESCE(MAX(LINE),0)+10 AS DefaultValue FROM AD_REF_GROUP WHERE ad_reference_id=? 
    ]]></Sql>

<Parameter name="ad_reference_id"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT ad_ref_group.AD_Reference_ID AS NAME
        FROM ad_ref_group
        WHERE ad_ref_group.AD_Ref_Group_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), '')) || ' - ' || list1.name) AS NAME FROM AD_Reference left join (select AD_Reference_ID, Name, ValidationType from AD_Reference) table1 on (AD_Reference.AD_Reference_ID = table1.AD_Reference_ID) left join (select AD_Reference_ID,AD_Language, Name from AD_Reference_TRL) tableTRL1 on (table1.AD_Reference_ID = tableTRL1.AD_Reference_ID and tableTRL1.AD_Language = ?)  left join ad_ref_list_v list1 on (table1.ValidationType = list1.value and list1.ad_reference_id = '2' and list1.ad_language = ?)  WHERE AD_Reference.AD_Reference_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="adReferenceId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), '')) || ' - ' || list1.name) AS NAME FROM AD_Reference left join (select AD_Reference_ID, Name, ValidationType from AD_Reference) table1 on (AD_Reference.AD_Reference_ID = table1.AD_Reference_ID) left join (select AD_Reference_ID,AD_Language, Name from AD_Reference_TRL) tableTRL1 on (table1.AD_Reference_ID = tableTRL1.AD_Reference_ID and tableTRL1.AD_Language = ?)  left join ad_ref_list_v list1 on (table1.ValidationType = list1.value and list1.ad_reference_id = '2' and list1.ad_language = ?)  WHERE AD_Reference.AD_Reference_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="adReferenceId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE ad_ref_group
        SET AD_Reference_ID = (?) , AD_Ref_Group_ID = (?) , AD_Client_ID = (?) , Line = TO_NUMBER(?) , AD_Org_ID = (?) , Isautoheader = (?) , Idcolumn = (?) , Hasselectline = (?) , Hasselectallbelow = (?) , Hasevenodd = (?) , Hasexpander = (?) , Headerformatbold = (?) , Colsvisibleoninit = (?) , Leadingemptycols = TO_NUMBER(?) , Level = TO_NUMBER(?) , Isactive = (?) , updated = now(), updatedby = ? 
        WHERE ad_ref_group.AD_Ref_Group_ID = ? 
                 AND ad_ref_group.AD_Reference_ID = ? 
        AND ad_ref_group.AD_Client_ID IN ('1') 
        AND ad_ref_group.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adReferenceId"></Parameter> <Parameter name="adRefGroupId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="line"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isautoheader"></Parameter> <Parameter name="idcolumn"></Parameter> <Parameter name="hasselectline"></Parameter> <Parameter name="hasselectallbelow"></Parameter> <Parameter name="hasevenodd"></Parameter> <Parameter name="hasexpander"></Parameter> <Parameter name="headerformatbold"></Parameter> <Parameter name="colsvisibleoninit"></Parameter> <Parameter name="leadingemptycols"></Parameter> <Parameter name="level"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="adRefGroupId"></Parameter>
    
    <Parameter name="adReferenceId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ad_ref_group.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ad_ref_group.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO ad_ref_group 
        (AD_Reference_ID, AD_Ref_Group_ID, AD_Client_ID, Line, AD_Org_ID, Isautoheader, Idcolumn, Hasselectline, Hasselectallbelow, Hasevenodd, Hasexpander, Headerformatbold, Colsvisibleoninit, Leadingemptycols, Level, Isactive, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adReferenceId"></Parameter> <Parameter name="adRefGroupId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="line"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isautoheader"></Parameter> <Parameter name="idcolumn"></Parameter> <Parameter name="hasselectline"></Parameter> <Parameter name="hasselectallbelow"></Parameter> <Parameter name="hasevenodd"></Parameter> <Parameter name="hasexpander"></Parameter> <Parameter name="headerformatbold"></Parameter> <Parameter name="colsvisibleoninit"></Parameter> <Parameter name="leadingemptycols"></Parameter> <Parameter name="level"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM ad_ref_group
        WHERE ad_ref_group.AD_Ref_Group_ID = ? 
                 AND ad_ref_group.AD_Reference_ID = ? 
        AND ad_ref_group.AD_Client_ID IN ('1') 
        AND ad_ref_group.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adReferenceId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ad_ref_group.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ad_ref_group.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM ad_ref_group
        WHERE ad_ref_group.AD_Ref_Group_ID = ? 
                 AND ad_ref_group.AD_Reference_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adReferenceId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM ad_ref_group
         WHERE ad_ref_group.AD_Ref_Group_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM ad_ref_group
         WHERE ad_ref_group.AD_Ref_Group_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>