<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="SerialnumbersC67DEF1CE743417D89F4024C7169232DData" package="org.openbravo.erpWindows.GoodsTransfer">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(snr_movementline.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = snr_movementline.CreatedBy) as CreatedByR, 
        to_char(snr_movementline.Updated, ?) as updated, 
        to_char(snr_movementline.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        snr_movementline.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = snr_movementline.UpdatedBy) as UpdatedByR,
        snr_movementline.M_Movementline_ID, 
(CASE WHEN snr_movementline.M_Movementline_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Line), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.MovementQty), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS M_Movementline_IDR, 
snr_movementline.SNR_Movementline_ID, 
snr_movementline.Serialnumber, 
snr_movementline.AD_Client_ID, 
snr_movementline.AD_Org_ID, 
COALESCE(snr_movementline.Isunavailable, 'N') AS Isunavailable, 
COALESCE(snr_movementline.Isactive, 'N') AS Isactive, 
snr_movementline.Lotnumber, 
snr_movementline.Quantity, 
snr_movementline.Guaranteedays, 
snr_movementline.Guaranteedate, 
snr_movementline.Rfidnumber, 
snr_movementline.Description, 
 
        ? AS LANGUAGE 
        FROM snr_movementline left join (select M_Movementline_ID, Line, MovementQty, M_Movement_ID from M_Movementline) table1 on (snr_movementline.M_Movementline_ID = table1.M_Movementline_ID) left join (select M_Movement_ID, DocumentNo, Name from M_Movement) table2 on (table1.M_Movement_ID = table2.M_Movement_ID)
        WHERE 2=2 

        AND 1=1 
        AND snr_movementline.SNR_Movementline_ID = ? 
        AND snr_movementline.AD_Client_ID IN ('1') 
           AND snr_movementline.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>

    <Parameter name="mMovementlineId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND snr_movementline.M_Movementline_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="snr_movementline.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="snr_movementline.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="mMovementlineId" id="paramKeyParent"></Parameter>
<Parameter name="snrMovementlineId"></Parameter><Parameter name="guaranteedate"></Parameter><Parameter name="quantity"></Parameter><Parameter name="lotnumber"></Parameter><Parameter name="description"></Parameter><Parameter name="isunavailable"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="guaranteedays"></Parameter><Parameter name="serialnumber"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="rfidnumber"></Parameter><Parameter name="isactive"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef97EAC1321ED1499B9F1C687CCD52DCED_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2B9B8D359DBE47FC940D735EE3E3A19B_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT snr_movementline.M_Movementline_ID AS NAME
        FROM snr_movementline
        WHERE snr_movementline.SNR_Movementline_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Line), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.MovementQty), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table2.DocumentNo), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))) AS NAME FROM M_MovementLine left join (select M_Movementline_ID, Line, MovementQty, M_Movement_ID from M_Movementline) table1 on (M_MovementLine.M_Movementline_ID = table1.M_Movementline_ID) left join (select M_Movement_ID, DocumentNo, Name from M_Movement) table2 on (table1.M_Movement_ID = table2.M_Movement_ID) WHERE M_MovementLine.M_Movementline_ID = ?  
    ]]></Sql>
<Parameter name="mMovementlineId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Line), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.MovementQty), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table2.DocumentNo), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))) AS NAME FROM M_MovementLine left join (select M_Movementline_ID, Line, MovementQty, M_Movement_ID from M_Movementline) table1 on (M_MovementLine.M_Movementline_ID = table1.M_Movementline_ID) left join (select M_Movement_ID, DocumentNo, Name from M_Movement) table2 on (table1.M_Movement_ID = table2.M_Movement_ID) WHERE M_MovementLine.M_Movementline_ID = ?  
    ]]></Sql>
<Parameter name="mMovementlineId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE snr_movementline
        SET M_Movementline_ID = (?) , SNR_Movementline_ID = (?) , Serialnumber = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , Isunavailable = (?) , Isactive = (?) , Lotnumber = (?) , Quantity = TO_NUMBER(?) , Guaranteedays = TO_NUMBER(?) , Guaranteedate = TO_DATE(?) , Rfidnumber = (?) , Description = (?) , updated = now(), updatedby = ? 
        WHERE snr_movementline.SNR_Movementline_ID = ? 
                 AND snr_movementline.M_Movementline_ID = ? 
        AND snr_movementline.AD_Client_ID IN ('1') 
        AND snr_movementline.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="mMovementlineId"></Parameter> <Parameter name="snrMovementlineId"></Parameter> <Parameter name="serialnumber"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isunavailable"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="lotnumber"></Parameter> <Parameter name="quantity"></Parameter> <Parameter name="guaranteedays"></Parameter> <Parameter name="guaranteedate"></Parameter> <Parameter name="rfidnumber"></Parameter> <Parameter name="description"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="snrMovementlineId"></Parameter>
    
    <Parameter name="mMovementlineId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="snr_movementline.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="snr_movementline.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO snr_movementline 
        (M_Movementline_ID, SNR_Movementline_ID, Serialnumber, AD_Client_ID, AD_Org_ID, Isunavailable, Isactive, Lotnumber, Quantity, Guaranteedays, Guaranteedate, Rfidnumber, Description, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_DATE(?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="mMovementlineId"></Parameter> <Parameter name="snrMovementlineId"></Parameter> <Parameter name="serialnumber"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isunavailable"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="lotnumber"></Parameter> <Parameter name="quantity"></Parameter> <Parameter name="guaranteedays"></Parameter> <Parameter name="guaranteedate"></Parameter> <Parameter name="rfidnumber"></Parameter> <Parameter name="description"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM snr_movementline
        WHERE snr_movementline.SNR_Movementline_ID = ? 
                 AND snr_movementline.M_Movementline_ID = ? 
        AND snr_movementline.AD_Client_ID IN ('1') 
        AND snr_movementline.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mMovementlineId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="snr_movementline.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="snr_movementline.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM snr_movementline
        WHERE snr_movementline.SNR_Movementline_ID = ? 
                 AND snr_movementline.M_Movementline_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mMovementlineId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM snr_movementline
         WHERE snr_movementline.SNR_Movementline_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM snr_movementline
         WHERE snr_movementline.SNR_Movementline_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>