<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="AlertData" package="org.openbravo.erpWindows.Alert">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(AD_Alert.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = AD_Alert.CreatedBy) as CreatedByR, 
        to_char(AD_Alert.Updated, ?) as updated, 
        to_char(AD_Alert.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        AD_Alert.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = AD_Alert.UpdatedBy) as UpdatedByR,
        AD_Alert.AD_Client_ID, 
(CASE WHEN AD_Alert.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
AD_Alert.AD_Alert_ID, 
AD_Alert.AD_Org_ID, 
(CASE WHEN AD_Alert.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
AD_Alert.AD_AlertRule_ID, 
(CASE WHEN AD_Alert.AD_AlertRule_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS AD_AlertRule_IDR, 
COALESCE(AD_Alert.IsActive, 'N') AS IsActive, 
AD_Alert.Description, 
COALESCE(AD_Alert.Isfixed, 'N') AS Isfixed, 
AD_Alert.Note, 
AD_Alert.Referencekey_ID, 
AD_Alert.Record_ID, 
AD_Alert.AD_Role_ID, 
(CASE WHEN AD_Alert.AD_Role_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS AD_Role_IDR, 
AD_Alert.AD_User_ID, 
(CASE WHEN AD_Alert.AD_User_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Name), ''))),'') ) END) AS AD_User_IDR, 
AD_Alert.M_Warehouse_ID, 
(CASE WHEN AD_Alert.M_Warehouse_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Name), ''))),'') ) END) AS M_Warehouse_IDR, 
 
        ? AS LANGUAGE 
        FROM AD_Alert left join (select AD_Client_ID, Name from AD_Client) table1 on (AD_Alert.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (AD_Alert.AD_Org_ID = table2.AD_Org_ID) left join (select AD_AlertRule_ID, Name from AD_AlertRule) table3 on (AD_Alert.AD_AlertRule_ID = table3.AD_AlertRule_ID) left join (select AD_AlertRule_ID,AD_Language, Name from AD_AlertRule_TRL) tableTRL3 on (table3.AD_AlertRule_ID = tableTRL3.AD_AlertRule_ID and tableTRL3.AD_Language = ?)  left join (select AD_Role_ID, Name from AD_Role) table4 on (AD_Alert.AD_Role_ID = table4.AD_Role_ID) left join (select AD_User_ID, Name from AD_User) table5 on (AD_Alert.AD_User_ID = table5.AD_User_ID) left join (select M_Warehouse_ID, Name from M_Warehouse) table6 on (AD_Alert.M_Warehouse_ID = table6.M_Warehouse_ID)
        WHERE 2=2 

        AND 1=1 
        AND AD_Alert.AD_Alert_ID = ? 
        AND AD_Alert.AD_Client_ID IN ('1') 
           AND AD_Alert.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="adAlertruleId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND AD_Alert.AD_AlertRule_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_Alert.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_Alert.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="adAlertruleId" id="paramKeyParent"></Parameter>
<Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="note"></Parameter><Parameter name="adRoleId"></Parameter><Parameter name="recordId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="isfixed"></Parameter><Parameter name="description"></Parameter><Parameter name="adUserId"></Parameter><Parameter name="referencekeyId"></Parameter><Parameter name="mWarehouseId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="adAlertId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef803828_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef803830_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT AD_Alert.AD_AlertRule_ID AS NAME
        FROM AD_Alert
        WHERE AD_Alert.AD_Alert_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM AD_AlertRule left join (select AD_AlertRule_ID, Name from AD_AlertRule) table1 on (AD_AlertRule.AD_AlertRule_ID = table1.AD_AlertRule_ID) left join (select AD_AlertRule_ID,AD_Language, Name from AD_AlertRule_TRL) tableTRL1 on (table1.AD_AlertRule_ID = tableTRL1.AD_AlertRule_ID and tableTRL1.AD_Language = ?)  WHERE AD_AlertRule.AD_AlertRule_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="adAlertruleId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM AD_AlertRule left join (select AD_AlertRule_ID, Name from AD_AlertRule) table1 on (AD_AlertRule.AD_AlertRule_ID = table1.AD_AlertRule_ID) left join (select AD_AlertRule_ID,AD_Language, Name from AD_AlertRule_TRL) tableTRL1 on (table1.AD_AlertRule_ID = tableTRL1.AD_AlertRule_ID and tableTRL1.AD_Language = ?)  WHERE AD_AlertRule.AD_AlertRule_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="adAlertruleId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE AD_Alert
        SET AD_Client_ID = (?) , AD_Alert_ID = (?) , AD_Org_ID = (?) , AD_AlertRule_ID = (?) , IsActive = (?) , Description = (?) , Isfixed = (?) , Note = (?) , Referencekey_ID = (?) , Record_ID = (?) , AD_Role_ID = (?) , AD_User_ID = (?) , M_Warehouse_ID = (?) , updated = now(), updatedby = ? 
        WHERE AD_Alert.AD_Alert_ID = ? 
                 AND AD_Alert.AD_AlertRule_ID = ? 
        AND AD_Alert.AD_Client_ID IN ('1') 
        AND AD_Alert.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adAlertId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adAlertruleId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isfixed"></Parameter> <Parameter name="note"></Parameter> <Parameter name="referencekeyId"></Parameter> <Parameter name="recordId"></Parameter> <Parameter name="adRoleId"></Parameter> <Parameter name="adUserId"></Parameter> <Parameter name="mWarehouseId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="adAlertId"></Parameter>
    
    <Parameter name="adAlertruleId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_Alert.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_Alert.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO AD_Alert 
        (AD_Client_ID, AD_Alert_ID, AD_Org_ID, AD_AlertRule_ID, IsActive, Description, Isfixed, Note, Referencekey_ID, Record_ID, AD_Role_ID, AD_User_ID, M_Warehouse_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adAlertId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adAlertruleId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isfixed"></Parameter> <Parameter name="note"></Parameter> <Parameter name="referencekeyId"></Parameter> <Parameter name="recordId"></Parameter> <Parameter name="adRoleId"></Parameter> <Parameter name="adUserId"></Parameter> <Parameter name="mWarehouseId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM AD_Alert
        WHERE AD_Alert.AD_Alert_ID = ? 
                 AND AD_Alert.AD_AlertRule_ID = ? 
        AND AD_Alert.AD_Client_ID IN ('1') 
        AND AD_Alert.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adAlertruleId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_Alert.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_Alert.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM AD_Alert
        WHERE AD_Alert.AD_Alert_ID = ? 
                 AND AD_Alert.AD_AlertRule_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adAlertruleId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM AD_Alert
         WHERE AD_Alert.AD_Alert_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM AD_Alert
         WHERE AD_Alert.AD_Alert_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>