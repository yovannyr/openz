<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="AccountingData" package="org.openbravo.erpWindows.Bank">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_BankAccount_Acct.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_BankAccount_Acct.CreatedBy) as CreatedByR, 
        to_char(C_BankAccount_Acct.Updated, ?) as updated, 
        to_char(C_BankAccount_Acct.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_BankAccount_Acct.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_BankAccount_Acct.UpdatedBy) as UpdatedByR,
        C_BankAccount_Acct.C_BankAccount_Acct_ID, 
C_BankAccount_Acct.AD_Client_ID, 
(CASE WHEN C_BankAccount_Acct.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_BankAccount_Acct.AD_Org_ID, 
(CASE WHEN C_BankAccount_Acct.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_BankAccount_Acct.C_BankAccount_ID, 
(CASE WHEN C_BankAccount_Acct.C_BankAccount_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.DisplayedAccount), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.ISO_Code), ''))),'') ) END) AS C_BankAccount_IDR, 
C_BankAccount_Acct.C_AcctSchema_ID, 
(CASE WHEN C_BankAccount_Acct.C_AcctSchema_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Name), ''))),'') ) END) AS C_AcctSchema_IDR, 
COALESCE(C_BankAccount_Acct.IsActive, 'N') AS IsActive, 
C_BankAccount_Acct.B_Asset_Acct, 
(CASE WHEN C_BankAccount_Acct.B_Asset_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Combination), ''))),'') ) END) AS B_Asset_AcctR, 
C_BankAccount_Acct.B_InTransit_Acct, 
(CASE WHEN C_BankAccount_Acct.B_InTransit_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Combination), ''))),'') ) END) AS B_InTransit_AcctR, 
C_BankAccount_Acct.B_UnallocatedCash_Acct, 
C_BankAccount_Acct.B_Unidentified_Acct, 
C_BankAccount_Acct.B_PaymentSelect_Acct, 
C_BankAccount_Acct.B_Expense_Acct, 
(CASE WHEN C_BankAccount_Acct.B_Expense_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Combination), ''))),'') ) END) AS B_Expense_AcctR, 
C_BankAccount_Acct.B_InterestExp_Acct, 
C_BankAccount_Acct.B_InterestRev_Acct, 
C_BankAccount_Acct.B_RevaluationGain_Acct, 
(CASE WHEN C_BankAccount_Acct.B_RevaluationGain_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Combination), ''))),'') ) END) AS B_RevaluationGain_AcctR, 
C_BankAccount_Acct.B_RevaluationLoss_Acct, 
(CASE WHEN C_BankAccount_Acct.B_RevaluationLoss_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table10.Combination), ''))),'') ) END) AS B_RevaluationLoss_AcctR, 
C_BankAccount_Acct.B_SettlementGain_Acct, 
C_BankAccount_Acct.B_SettlementLoss_Acct, 
 
        ? AS LANGUAGE 
        FROM C_BankAccount_Acct left join (select AD_Client_ID, Name from AD_Client) table1 on (C_BankAccount_Acct.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_BankAccount_Acct.AD_Org_ID = table2.AD_Org_ID) left join (select C_BankAccount_ID, DisplayedAccount, C_Currency_ID from C_BankAccount) table3 on (C_BankAccount_Acct.C_BankAccount_ID = table3.C_BankAccount_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table4 on (table3.C_Currency_ID = table4.C_Currency_ID) left join (select C_AcctSchema_ID, Name from C_AcctSchema) table5 on (C_BankAccount_Acct.C_AcctSchema_ID = table5.C_AcctSchema_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table6 on (C_BankAccount_Acct.B_Asset_Acct = table6.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table7 on (C_BankAccount_Acct.B_InTransit_Acct = table7.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table8 on (C_BankAccount_Acct.B_Expense_Acct = table8.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table9 on (C_BankAccount_Acct.B_RevaluationGain_Acct = table9.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table10 on (C_BankAccount_Acct.B_RevaluationLoss_Acct = table10.C_ValidCombination_ID)
        WHERE 2=2 

        AND 1=1 
        AND C_BankAccount_Acct.C_BankAccount_Acct_ID = ? 
        AND C_BankAccount_Acct.AD_Client_ID IN ('1') 
           AND C_BankAccount_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>

    <Parameter name="cBankaccountId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_BankAccount_Acct.C_BankAccount_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BankAccount_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BankAccount_Acct.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cBankaccountId" id="paramKeyParent"></Parameter>
<Parameter name="bSettlementlossAcct"></Parameter><Parameter name="bSettlementlossAcctr"></Parameter><Parameter name="cAcctschemaId"></Parameter><Parameter name="bRevaluationgainAcct"></Parameter><Parameter name="bRevaluationgainAcctr"></Parameter><Parameter name="bInterestrevAcct"></Parameter><Parameter name="bInterestrevAcctr"></Parameter><Parameter name="bUnallocatedcashAcct"></Parameter><Parameter name="bUnallocatedcashAcctr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="bUnidentifiedAcct"></Parameter><Parameter name="bUnidentifiedAcctr"></Parameter><Parameter name="bRevaluationlossAcct"></Parameter><Parameter name="bRevaluationlossAcctr"></Parameter><Parameter name="cBankaccountAcctId"></Parameter><Parameter name="bPaymentselectAcct"></Parameter><Parameter name="bPaymentselectAcctr"></Parameter><Parameter name="bExpenseAcct"></Parameter><Parameter name="bExpenseAcctr"></Parameter><Parameter name="bSettlementgainAcct"></Parameter><Parameter name="bSettlementgainAcctr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="bAssetAcct"></Parameter><Parameter name="bAssetAcctr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="bInterestexpAcct"></Parameter><Parameter name="bInterestexpAcctr"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="bIntransitAcct"></Parameter><Parameter name="bIntransitAcctr"></Parameter><Parameter name="isactive"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef4906_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_SettlementLoss_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_SettlementLoss_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4907_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_RevaluationGain_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_RevaluationGain_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4902_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_InterestRev_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_InterestRev_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef6495_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_UnallocatedCash_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_UnallocatedCash_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4904_4" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_Unidentified_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_Unidentified_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4908_5" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_RevaluationLoss_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_RevaluationLoss_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef6494_6" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_PaymentSelect_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_PaymentSelect_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4901_7" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_Expense_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_Expense_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4905_8" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_SettlementGain_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_SettlementGain_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4898_9" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4900_10" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_Asset_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_Asset_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4903_11" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_InterestExp_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_InterestExp_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4896_12" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4899_13" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as B_InTransit_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="B_InTransit_AcctR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_BankAccount_Acct.C_BankAccount_ID AS NAME
        FROM C_BankAccount_Acct
        WHERE C_BankAccount_Acct.C_BankAccount_Acct_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DisplayedAccount), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table2.ISO_Code), ''))) AS NAME FROM C_BankAccount left join (select C_BankAccount_ID, DisplayedAccount, C_Currency_ID from C_BankAccount) table1 on (C_BankAccount.C_BankAccount_ID = table1.C_BankAccount_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table2 on (table1.C_Currency_ID = table2.C_Currency_ID) WHERE C_BankAccount.C_BankAccount_ID = ?  
    ]]></Sql>
<Parameter name="cBankaccountId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DisplayedAccount), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table2.ISO_Code), ''))) AS NAME FROM C_BankAccount left join (select C_BankAccount_ID, DisplayedAccount, C_Currency_ID from C_BankAccount) table1 on (C_BankAccount.C_BankAccount_ID = table1.C_BankAccount_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table2 on (table1.C_Currency_ID = table2.C_Currency_ID) WHERE C_BankAccount.C_BankAccount_ID = ?  
    ]]></Sql>
<Parameter name="cBankaccountId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_BankAccount_Acct
        SET C_BankAccount_Acct_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , C_BankAccount_ID = (?) , C_AcctSchema_ID = (?) , IsActive = (?) , B_Asset_Acct = (?) , B_InTransit_Acct = (?) , B_UnallocatedCash_Acct = (?) , B_Unidentified_Acct = (?) , B_PaymentSelect_Acct = (?) , B_Expense_Acct = (?) , B_InterestExp_Acct = (?) , B_InterestRev_Acct = (?) , B_RevaluationGain_Acct = (?) , B_RevaluationLoss_Acct = (?) , B_SettlementGain_Acct = (?) , B_SettlementLoss_Acct = (?) , updated = now(), updatedby = ? 
        WHERE C_BankAccount_Acct.C_BankAccount_Acct_ID = ? 
                 AND C_BankAccount_Acct.C_BankAccount_ID = ? 
        AND C_BankAccount_Acct.AD_Client_ID IN ('1') 
        AND C_BankAccount_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cBankaccountAcctId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cBankaccountId"></Parameter> <Parameter name="cAcctschemaId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="bAssetAcct"></Parameter> <Parameter name="bIntransitAcct"></Parameter> <Parameter name="bUnallocatedcashAcct"></Parameter> <Parameter name="bUnidentifiedAcct"></Parameter> <Parameter name="bPaymentselectAcct"></Parameter> <Parameter name="bExpenseAcct"></Parameter> <Parameter name="bInterestexpAcct"></Parameter> <Parameter name="bInterestrevAcct"></Parameter> <Parameter name="bRevaluationgainAcct"></Parameter> <Parameter name="bRevaluationlossAcct"></Parameter> <Parameter name="bSettlementgainAcct"></Parameter> <Parameter name="bSettlementlossAcct"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cBankaccountAcctId"></Parameter>
    
    <Parameter name="cBankaccountId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BankAccount_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BankAccount_Acct.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_BankAccount_Acct 
        (C_BankAccount_Acct_ID, AD_Client_ID, AD_Org_ID, C_BankAccount_ID, C_AcctSchema_ID, IsActive, B_Asset_Acct, B_InTransit_Acct, B_UnallocatedCash_Acct, B_Unidentified_Acct, B_PaymentSelect_Acct, B_Expense_Acct, B_InterestExp_Acct, B_InterestRev_Acct, B_RevaluationGain_Acct, B_RevaluationLoss_Acct, B_SettlementGain_Acct, B_SettlementLoss_Acct, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cBankaccountAcctId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cBankaccountId"></Parameter> <Parameter name="cAcctschemaId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="bAssetAcct"></Parameter> <Parameter name="bIntransitAcct"></Parameter> <Parameter name="bUnallocatedcashAcct"></Parameter> <Parameter name="bUnidentifiedAcct"></Parameter> <Parameter name="bPaymentselectAcct"></Parameter> <Parameter name="bExpenseAcct"></Parameter> <Parameter name="bInterestexpAcct"></Parameter> <Parameter name="bInterestrevAcct"></Parameter> <Parameter name="bRevaluationgainAcct"></Parameter> <Parameter name="bRevaluationlossAcct"></Parameter> <Parameter name="bSettlementgainAcct"></Parameter> <Parameter name="bSettlementlossAcct"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_BankAccount_Acct
        WHERE C_BankAccount_Acct.C_BankAccount_Acct_ID = ? 
                 AND C_BankAccount_Acct.C_BankAccount_ID = ? 
        AND C_BankAccount_Acct.AD_Client_ID IN ('1') 
        AND C_BankAccount_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBankaccountId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BankAccount_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BankAccount_Acct.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_BankAccount_Acct
        WHERE C_BankAccount_Acct.C_BankAccount_Acct_ID = ? 
                 AND C_BankAccount_Acct.C_BankAccount_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBankaccountId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_BankAccount_Acct
         WHERE C_BankAccount_Acct.C_BankAccount_Acct_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_BankAccount_Acct
         WHERE C_BankAccount_Acct.C_BankAccount_Acct_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>