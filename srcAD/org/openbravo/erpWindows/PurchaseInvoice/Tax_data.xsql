<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="TaxData" package="org.openbravo.erpWindows.PurchaseInvoice">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_InvoiceTax.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_InvoiceTax.CreatedBy) as CreatedByR, 
        to_char(C_InvoiceTax.Updated, ?) as updated, 
        to_char(C_InvoiceTax.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_InvoiceTax.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_InvoiceTax.UpdatedBy) as UpdatedByR,
        C_InvoiceTax.AD_Client_ID, 
(CASE WHEN C_InvoiceTax.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_InvoiceTax.AD_Org_ID, 
(CASE WHEN C_InvoiceTax.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_InvoiceTax.C_Invoice_ID, 
(CASE WHEN C_InvoiceTax.C_Invoice_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table3.DateInvoiced, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.GrandTotal), ''))),'') ) END) AS C_Invoice_IDR, 
C_InvoiceTax.C_InvoiceTax_ID, 
C_InvoiceTax.C_Tax_ID, 
(CASE WHEN C_InvoiceTax.C_Tax_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL4.Name IS NULL THEN TO_CHAR(table4.Name) ELSE TO_CHAR(tableTRL4.Name) END)), ''))),'') ) END) AS C_Tax_IDR, 
C_InvoiceTax.TaxAmt, 
C_InvoiceTax.TaxBaseAmt, 
C_InvoiceTax.Reversetaxamt, 
COALESCE(C_InvoiceTax.Recalculate, 'N') AS Recalculate, 
C_InvoiceTax.Line, 
COALESCE(C_InvoiceTax.IsActive, 'N') AS IsActive, 
 
        ? AS LANGUAGE 
        FROM C_InvoiceTax left join (select AD_Client_ID, Name from AD_Client) table1 on (C_InvoiceTax.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_InvoiceTax.AD_Org_ID = table2.AD_Org_ID) left join (select C_Invoice_ID, DocumentNo, DateInvoiced, GrandTotal from C_Invoice) table3 on (C_InvoiceTax.C_Invoice_ID = table3.C_Invoice_ID) left join (select C_Tax_ID, Name from C_Tax) table4 on (C_InvoiceTax.C_Tax_ID = table4.C_Tax_ID) left join (select C_Tax_ID,AD_Language, Name from C_Tax_TRL) tableTRL4 on (table4.C_Tax_ID = tableTRL4.C_Tax_ID and tableTRL4.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND C_InvoiceTax.C_InvoiceTax_ID = ? 
        AND C_InvoiceTax.AD_Client_ID IN ('1') 
           AND C_InvoiceTax.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="cInvoiceId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_InvoiceTax.C_Invoice_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_InvoiceTax.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_InvoiceTax.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cInvoiceId" id="paramKeyParent"></Parameter>
<Parameter name="taxbaseamt"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="cInvoicetaxId"></Parameter><Parameter name="reversetaxamt"></Parameter><Parameter name="line"></Parameter><Parameter name="recalculate"></Parameter><Parameter name="cInvoiceIdr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="taxamt"></Parameter><Parameter name="isactive"></Parameter><Parameter name="cTaxId"></Parameter><Parameter name="adClientId"></Parameter>
   </SqlMethod>


   <SqlMethod name="selectAux9B8DEEF369014E938A73D766890AE941" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT PROCESSED FROM C_INVOICE WHERE C_INVOICE_ID = ? 
    ]]></Sql>

<Parameter name="C_INVOICE_ID"/>
  </SqlMethod>





   <SqlMethod name="selectDef3856_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef803240" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT COALESCE(MAX(LINE),0)+10 AS DefaultValue FROM C_INVOICETAX WHERE C_Invoice_ID=? 
    ]]></Sql>

<Parameter name="C_Invoice_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef3851_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.DocumentNo), '')  || ' - ' || COALESCE(TO_CHAR(table1.DateInvoiced), '')  || ' - ' || COALESCE(TO_CHAR(table1.GrandTotal), '') ) as C_Invoice_ID FROM C_Invoice table1 WHERE table1.isActive='Y' AND table1.C_Invoice_ID = ?  
    ]]></Sql>
<Parameter name="C_Invoice_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3858_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_InvoiceTax.C_Invoice_ID AS NAME
        FROM C_InvoiceTax
        WHERE C_InvoiceTax.C_InvoiceTax_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DocumentNo), '')) || ' - ' || TO_CHAR(table1.DateInvoiced, 'DD-MM-YYYY') || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.GrandTotal), ''))) AS NAME FROM C_Invoice left join (select C_Invoice_ID, DocumentNo, DateInvoiced, GrandTotal from C_Invoice) table1 on (C_Invoice.C_Invoice_ID = table1.C_Invoice_ID) WHERE C_Invoice.C_Invoice_ID = ?  
    ]]></Sql>
<Parameter name="cInvoiceId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DocumentNo), '')) || ' - ' || TO_CHAR(table1.DateInvoiced, 'DD-MM-YYYY') || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.GrandTotal), ''))) AS NAME FROM C_Invoice left join (select C_Invoice_ID, DocumentNo, DateInvoiced, GrandTotal from C_Invoice) table1 on (C_Invoice.C_Invoice_ID = table1.C_Invoice_ID) WHERE C_Invoice.C_Invoice_ID = ?  
    ]]></Sql>
<Parameter name="cInvoiceId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_InvoiceTax
        SET AD_Client_ID = (?) , AD_Org_ID = (?) , C_Invoice_ID = (?) , C_InvoiceTax_ID = (?) , C_Tax_ID = (?) , TaxAmt = TO_NUMBER(?) , TaxBaseAmt = TO_NUMBER(?) , Reversetaxamt = TO_NUMBER(?) , Recalculate = (?) , Line = TO_NUMBER(?) , IsActive = (?) , updated = now(), updatedby = ? 
        WHERE C_InvoiceTax.C_InvoiceTax_ID = ? 
                 AND C_InvoiceTax.C_Invoice_ID = ? 
        AND C_InvoiceTax.AD_Client_ID IN ('1') 
        AND C_InvoiceTax.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cInvoiceId"></Parameter> <Parameter name="cInvoicetaxId"></Parameter> <Parameter name="cTaxId"></Parameter> <Parameter name="taxamt"></Parameter> <Parameter name="taxbaseamt"></Parameter> <Parameter name="reversetaxamt"></Parameter> <Parameter name="recalculate"></Parameter> <Parameter name="line"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cInvoicetaxId"></Parameter>
    
    <Parameter name="cInvoiceId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_InvoiceTax.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_InvoiceTax.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_InvoiceTax 
        (AD_Client_ID, AD_Org_ID, C_Invoice_ID, C_InvoiceTax_ID, C_Tax_ID, TaxAmt, TaxBaseAmt, Reversetaxamt, Recalculate, Line, IsActive, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), TO_NUMBER(?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cInvoiceId"></Parameter> <Parameter name="cInvoicetaxId"></Parameter> <Parameter name="cTaxId"></Parameter> <Parameter name="taxamt"></Parameter> <Parameter name="taxbaseamt"></Parameter> <Parameter name="reversetaxamt"></Parameter> <Parameter name="recalculate"></Parameter> <Parameter name="line"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_InvoiceTax
        WHERE C_InvoiceTax.C_InvoiceTax_ID = ? 
                 AND C_InvoiceTax.C_Invoice_ID = ? 
        AND C_InvoiceTax.AD_Client_ID IN ('1') 
        AND C_InvoiceTax.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cInvoiceId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_InvoiceTax.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_InvoiceTax.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_InvoiceTax
        WHERE C_InvoiceTax.C_InvoiceTax_ID = ? 
                 AND C_InvoiceTax.C_Invoice_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cInvoiceId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_InvoiceTax
         WHERE C_InvoiceTax.C_InvoiceTax_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_InvoiceTax
         WHERE C_InvoiceTax.C_InvoiceTax_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>