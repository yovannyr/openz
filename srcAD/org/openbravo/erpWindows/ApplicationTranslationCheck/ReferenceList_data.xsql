<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="ReferenceListData" package="org.openbravo.erpWindows.ApplicationTranslationCheck">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(AD_Ref_List_Trl.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = AD_Ref_List_Trl.CreatedBy) as CreatedByR, 
        to_char(AD_Ref_List_Trl.Updated, ?) as updated, 
        to_char(AD_Ref_List_Trl.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        AD_Ref_List_Trl.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = AD_Ref_List_Trl.UpdatedBy) as UpdatedByR,
        AD_Ref_List_Trl.AD_Ref_List_Trl_ID, 
AD_Ref_List_Trl.AD_Client_ID, 
(CASE WHEN AD_Ref_List_Trl.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
AD_Ref_List_Trl.AD_Org_ID, 
(CASE WHEN AD_Ref_List_Trl.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
AD_Ref_List_Trl.AD_Ref_List_ID, 
(CASE WHEN AD_Ref_List_Trl.AD_Ref_List_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS AD_Ref_List_IDR, 
AD_Ref_List_Trl.AD_Language, 
(CASE WHEN AD_Ref_List_Trl.AD_Language IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS AD_LanguageR, 
COALESCE(AD_Ref_List_Trl.IsActive, 'N') AS IsActive, 
COALESCE(AD_Ref_List_Trl.IsTranslated, 'N') AS IsTranslated, 
AD_Ref_List_Trl.Name, 
AD_Ref_List_Trl.Description, 
 
        ? AS LANGUAGE 
        FROM AD_Ref_List_Trl left join (select AD_Client_ID, Name from AD_Client) table1 on (AD_Ref_List_Trl.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (AD_Ref_List_Trl.AD_Org_ID = table2.AD_Org_ID) left join (select AD_Ref_List_ID, Name from AD_Ref_List) table3 on (AD_Ref_List_Trl.AD_Ref_List_ID = table3.AD_Ref_List_ID) left join (select AD_Ref_List_ID,AD_Language, Name from AD_Ref_List_TRL) tableTRL3 on (table3.AD_Ref_List_ID = tableTRL3.AD_Ref_List_ID and tableTRL3.AD_Language = ?)  left join (select AD_Language, Name from AD_Language) table4 on (AD_Ref_List_Trl.AD_Language =  table4.AD_Language)
        WHERE 2=2 

        AND 1=1 
        AND AD_Ref_List_Trl.AD_Ref_List_Trl_ID = ? 
        AND AD_Ref_List_Trl.AD_Client_ID IN ('1') 
           AND AD_Ref_List_Trl.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="adLanguage" optional="true" after="AND 1=1 " id="paramKeyParent"> AND AD_Ref_List_Trl.AD_Language = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_Ref_List_Trl.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_Ref_List_Trl.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="adLanguage" id="paramKeyParent"></Parameter>
<Parameter name="name"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="description"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="adRefListTrlId"></Parameter><Parameter name="istranslated"></Parameter><Parameter name="adRefListId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="adOrgId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef710_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef708_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT AD_Ref_List_Trl.AD_Language AS NAME
        FROM AD_Ref_List_Trl
        WHERE AD_Ref_List_Trl.AD_Ref_List_Trl_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM AD_Language left join (select AD_Language, Name from AD_Language) table1 on (AD_Language.AD_Language =  table1.AD_Language) WHERE AD_Language.AD_Language = ?  
    ]]></Sql>
<Parameter name="adLanguage"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM AD_Language left join (select AD_Language, Name from AD_Language) table1 on (AD_Language.AD_Language =  table1.AD_Language) WHERE AD_Language.AD_Language = ?  
    ]]></Sql>
<Parameter name="adLanguage"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE AD_Ref_List_Trl
        SET AD_Ref_List_Trl_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , AD_Ref_List_ID = (?) , AD_Language = (?) , IsActive = (?) , IsTranslated = (?) , Name = (?) , Description = (?) , updated = now(), updatedby = ? 
        WHERE AD_Ref_List_Trl.AD_Ref_List_Trl_ID = ? 
                 AND AD_Ref_List_Trl.AD_Language = ? 
        AND AD_Ref_List_Trl.AD_Client_ID IN ('1') 
        AND AD_Ref_List_Trl.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adRefListTrlId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adRefListId"></Parameter> <Parameter name="adLanguage"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="istranslated"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="adRefListTrlId"></Parameter>
    
    <Parameter name="adLanguage" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_Ref_List_Trl.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_Ref_List_Trl.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO AD_Ref_List_Trl 
        (AD_Ref_List_Trl_ID, AD_Client_ID, AD_Org_ID, AD_Ref_List_ID, AD_Language, IsActive, IsTranslated, Name, Description, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adRefListTrlId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adRefListId"></Parameter> <Parameter name="adLanguage"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="istranslated"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM AD_Ref_List_Trl
        WHERE AD_Ref_List_Trl.AD_Ref_List_Trl_ID = ? 
                 AND AD_Ref_List_Trl.AD_Language = ? 
        AND AD_Ref_List_Trl.AD_Client_ID IN ('1') 
        AND AD_Ref_List_Trl.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adLanguage" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_Ref_List_Trl.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_Ref_List_Trl.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM AD_Ref_List_Trl
        WHERE AD_Ref_List_Trl.AD_Ref_List_Trl_ID = ? 
                 AND AD_Ref_List_Trl.AD_Language = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adLanguage" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM AD_Ref_List_Trl
         WHERE AD_Ref_List_Trl.AD_Ref_List_Trl_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM AD_Ref_List_Trl
         WHERE AD_Ref_List_Trl.AD_Ref_List_Trl_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>