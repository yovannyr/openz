<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="GeneralLedgerData" package="org.openbravo.erpWindows.AccountingSchema">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_AcctSchema_GL.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_AcctSchema_GL.CreatedBy) as CreatedByR, 
        to_char(C_AcctSchema_GL.Updated, ?) as updated, 
        to_char(C_AcctSchema_GL.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_AcctSchema_GL.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_AcctSchema_GL.UpdatedBy) as UpdatedByR,
        C_AcctSchema_GL.PPVOffset_Acct, 
C_AcctSchema_GL.AD_Client_ID, 
(CASE WHEN C_AcctSchema_GL.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_AcctSchema_GL.CFS_Order_Acct, 
C_AcctSchema_GL.AD_Org_ID, 
(CASE WHEN C_AcctSchema_GL.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_AcctSchema_GL.C_Acctschema_Gl_ID, 
C_AcctSchema_GL.C_AcctSchema_ID, 
(CASE WHEN C_AcctSchema_GL.C_AcctSchema_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS C_AcctSchema_IDR, 
COALESCE(C_AcctSchema_GL.IsActive, 'N') AS IsActive, 
COALESCE(C_AcctSchema_GL.UseSuspenseBalancing, 'N') AS UseSuspenseBalancing, 
C_AcctSchema_GL.SuspenseBalancing_Acct, 
(CASE WHEN C_AcctSchema_GL.SuspenseBalancing_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Combination), ''))),'') ) END) AS SuspenseBalancing_AcctR, 
COALESCE(C_AcctSchema_GL.UseSuspenseError, 'N') AS UseSuspenseError, 
C_AcctSchema_GL.SuspenseError_Acct, 
(CASE WHEN C_AcctSchema_GL.SuspenseError_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Combination), ''))),'') ) END) AS SuspenseError_AcctR, 
COALESCE(C_AcctSchema_GL.UseCurrencyBalancing, 'N') AS UseCurrencyBalancing, 
C_AcctSchema_GL.CurrencyBalancing_Acct, 
(CASE WHEN C_AcctSchema_GL.CurrencyBalancing_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Combination), ''))),'') ) END) AS CurrencyBalancing_AcctR, 
C_AcctSchema_GL.RetainedEarning_Acct, 
(CASE WHEN C_AcctSchema_GL.RetainedEarning_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Combination), ''))),'') ) END) AS RetainedEarning_AcctR, 
C_AcctSchema_GL.IncomeSummary_Acct, 
(CASE WHEN C_AcctSchema_GL.IncomeSummary_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Combination), ''))),'') ) END) AS IncomeSummary_AcctR, 
C_AcctSchema_GL.IntercompanyDueFrom_Acct, 
C_AcctSchema_GL.IntercompanyDueTo_Acct, 
 
        ? AS LANGUAGE 
        FROM C_AcctSchema_GL left join (select AD_Client_ID, Name from AD_Client) table1 on (C_AcctSchema_GL.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_AcctSchema_GL.AD_Org_ID = table2.AD_Org_ID) left join (select C_AcctSchema_ID, Name from C_AcctSchema) table3 on (C_AcctSchema_GL.C_AcctSchema_ID = table3.C_AcctSchema_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table4 on (C_AcctSchema_GL.SuspenseBalancing_Acct = table4.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table5 on (C_AcctSchema_GL.SuspenseError_Acct = table5.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table6 on (C_AcctSchema_GL.CurrencyBalancing_Acct = table6.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table7 on (C_AcctSchema_GL.RetainedEarning_Acct = table7.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table8 on (C_AcctSchema_GL.IncomeSummary_Acct = table8.C_ValidCombination_ID)
        WHERE 2=2 

        AND 1=1 
        AND C_AcctSchema_GL.C_Acctschema_Gl_ID = ? 
        AND C_AcctSchema_GL.AD_Client_ID IN ('1') 
           AND C_AcctSchema_GL.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>

    <Parameter name="cAcctschemaId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_AcctSchema_GL.C_AcctSchema_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_AcctSchema_GL.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_AcctSchema_GL.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cAcctschemaId" id="paramKeyParent"></Parameter>
<Parameter name="suspenseerrorAcct"></Parameter><Parameter name="suspenseerrorAcctr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="retainedearningAcct"></Parameter><Parameter name="retainedearningAcctr"></Parameter><Parameter name="intercompanyduetoAcct"></Parameter><Parameter name="cAcctschemaGlId"></Parameter><Parameter name="usesuspensebalancing"></Parameter><Parameter name="suspensebalancingAcct"></Parameter><Parameter name="suspensebalancingAcctr"></Parameter><Parameter name="usesuspenseerror"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="currencybalancingAcct"></Parameter><Parameter name="currencybalancingAcctr"></Parameter><Parameter name="usecurrencybalancing"></Parameter><Parameter name="cfsOrderAcct"></Parameter><Parameter name="intercompanyduefromAcct"></Parameter><Parameter name="incomesummaryAcct"></Parameter><Parameter name="incomesummaryAcctr"></Parameter><Parameter name="ppvoffsetAcct"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef2493_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as SuspenseError_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="SuspenseError_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2489_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2487_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2500_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as RetainedEarning_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="RetainedEarning_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2491_4" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as SuspenseBalancing_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="SuspenseBalancing_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2495_5" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as CurrencyBalancing_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="CurrencyBalancing_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2501_6" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as IncomeSummary_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="IncomeSummary_AcctR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_AcctSchema_GL.C_AcctSchema_ID AS NAME
        FROM C_AcctSchema_GL
        WHERE C_AcctSchema_GL.C_Acctschema_Gl_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_AcctSchema left join (select C_AcctSchema_ID, Name from C_AcctSchema) table1 on (C_AcctSchema.C_AcctSchema_ID = table1.C_AcctSchema_ID) WHERE C_AcctSchema.C_AcctSchema_ID = ?  
    ]]></Sql>
<Parameter name="cAcctschemaId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_AcctSchema left join (select C_AcctSchema_ID, Name from C_AcctSchema) table1 on (C_AcctSchema.C_AcctSchema_ID = table1.C_AcctSchema_ID) WHERE C_AcctSchema.C_AcctSchema_ID = ?  
    ]]></Sql>
<Parameter name="cAcctschemaId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_AcctSchema_GL
        SET PPVOffset_Acct = (?) , AD_Client_ID = (?) , CFS_Order_Acct = (?) , AD_Org_ID = (?) , C_Acctschema_Gl_ID = (?) , C_AcctSchema_ID = (?) , IsActive = (?) , UseSuspenseBalancing = (?) , SuspenseBalancing_Acct = (?) , UseSuspenseError = (?) , SuspenseError_Acct = (?) , UseCurrencyBalancing = (?) , CurrencyBalancing_Acct = (?) , RetainedEarning_Acct = (?) , IncomeSummary_Acct = (?) , IntercompanyDueFrom_Acct = (?) , IntercompanyDueTo_Acct = (?) , updated = now(), updatedby = ? 
        WHERE C_AcctSchema_GL.C_Acctschema_Gl_ID = ? 
                 AND C_AcctSchema_GL.C_AcctSchema_ID = ? 
        AND C_AcctSchema_GL.AD_Client_ID IN ('1') 
        AND C_AcctSchema_GL.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="ppvoffsetAcct"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="cfsOrderAcct"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cAcctschemaGlId"></Parameter> <Parameter name="cAcctschemaId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="usesuspensebalancing"></Parameter> <Parameter name="suspensebalancingAcct"></Parameter> <Parameter name="usesuspenseerror"></Parameter> <Parameter name="suspenseerrorAcct"></Parameter> <Parameter name="usecurrencybalancing"></Parameter> <Parameter name="currencybalancingAcct"></Parameter> <Parameter name="retainedearningAcct"></Parameter> <Parameter name="incomesummaryAcct"></Parameter> <Parameter name="intercompanyduefromAcct"></Parameter> <Parameter name="intercompanyduetoAcct"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cAcctschemaGlId"></Parameter>
    
    <Parameter name="cAcctschemaId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_AcctSchema_GL.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_AcctSchema_GL.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_AcctSchema_GL 
        (PPVOffset_Acct, AD_Client_ID, CFS_Order_Acct, AD_Org_ID, C_Acctschema_Gl_ID, C_AcctSchema_ID, IsActive, UseSuspenseBalancing, SuspenseBalancing_Acct, UseSuspenseError, SuspenseError_Acct, UseCurrencyBalancing, CurrencyBalancing_Acct, RetainedEarning_Acct, IncomeSummary_Acct, IntercompanyDueFrom_Acct, IntercompanyDueTo_Acct, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="ppvoffsetAcct"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="cfsOrderAcct"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cAcctschemaGlId"></Parameter> <Parameter name="cAcctschemaId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="usesuspensebalancing"></Parameter> <Parameter name="suspensebalancingAcct"></Parameter> <Parameter name="usesuspenseerror"></Parameter> <Parameter name="suspenseerrorAcct"></Parameter> <Parameter name="usecurrencybalancing"></Parameter> <Parameter name="currencybalancingAcct"></Parameter> <Parameter name="retainedearningAcct"></Parameter> <Parameter name="incomesummaryAcct"></Parameter> <Parameter name="intercompanyduefromAcct"></Parameter> <Parameter name="intercompanyduetoAcct"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_AcctSchema_GL
        WHERE C_AcctSchema_GL.C_Acctschema_Gl_ID = ? 
                 AND C_AcctSchema_GL.C_AcctSchema_ID = ? 
        AND C_AcctSchema_GL.AD_Client_ID IN ('1') 
        AND C_AcctSchema_GL.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cAcctschemaId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_AcctSchema_GL.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_AcctSchema_GL.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_AcctSchema_GL
        WHERE C_AcctSchema_GL.C_Acctschema_Gl_ID = ? 
                 AND C_AcctSchema_GL.C_AcctSchema_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cAcctschemaId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_AcctSchema_GL
         WHERE C_AcctSchema_GL.C_Acctschema_Gl_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_AcctSchema_GL
         WHERE C_AcctSchema_GL.C_Acctschema_Gl_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>