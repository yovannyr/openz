<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="PriceHistoryData" package="org.openbravo.erpWindows.VendorDetails">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(m_product_po_history.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = m_product_po_history.CreatedBy) as CreatedByR, 
        to_char(m_product_po_history.Updated, ?) as updated, 
        to_char(m_product_po_history.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        m_product_po_history.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = m_product_po_history.UpdatedBy) as UpdatedByR,
        m_product_po_history.C_Bpartner_ID, 
(CASE WHEN m_product_po_history.C_Bpartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
m_product_po_history.M_Product_ID, 
(CASE WHEN m_product_po_history.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
m_product_po_history.Pricelist, 
m_product_po_history.Pricepo, 
m_product_po_history.Validfrom, 
m_product_po_history.M_Product_Po_ID, 
m_product_po_history.AD_Client_ID, 
m_product_po_history.M_Product_Po_History_ID, 
COALESCE(m_product_po_history.Isactive, 'N') AS Isactive, 
m_product_po_history.AD_Org_ID, 
 
        ? AS LANGUAGE 
        FROM m_product_po_history left join (select C_BPartner_ID, Name from C_BPartner) table1 on (m_product_po_history.C_Bpartner_ID = table1.C_BPartner_ID) left join (select M_Product_ID, Value, Name from M_Product) table2 on (m_product_po_history.M_Product_ID = table2.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL2 on (table2.M_Product_ID = tableTRL2.M_Product_ID and tableTRL2.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND m_product_po_history.M_Product_Po_History_ID = ? 
        AND m_product_po_history.AD_Client_ID IN ('1') 
           AND m_product_po_history.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="cBpartnerId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND m_product_po_history.C_Bpartner_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="m_product_po_history.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m_product_po_history.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
<Parameter name="validfrom"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="mProductId"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="pricelist"></Parameter><Parameter name="mProductPoId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="pricepo"></Parameter><Parameter name="mProductPoHistoryId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="isactive"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef7E75B50B662B4C628C5960F16D3DEC22_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefD7DE14B66A934CE7BA7CCECA17E747AE_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef0159BAE1C67F4700B8AF3F96579AB04C_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5406A6D042A34DB99BEE217581B7D16B_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as C_Bpartner_ID FROM C_BPartner table1 WHERE table1.isActive='Y' AND table1.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_Bpartner_IDR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT m_product_po_history.C_Bpartner_ID AS NAME
        FROM m_product_po_history
        WHERE m_product_po_history.M_Product_Po_History_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table1 on (C_BPartner.C_Bpartner_ID = table1.C_BPartner_ID) WHERE C_BPartner.C_Bpartner_ID = ?  
    ]]></Sql>
<Parameter name="cBpartnerId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table1 on (C_BPartner.C_Bpartner_ID = table1.C_BPartner_ID) WHERE C_BPartner.C_Bpartner_ID = ?  
    ]]></Sql>
<Parameter name="cBpartnerId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE m_product_po_history
        SET C_Bpartner_ID = (?) , M_Product_ID = (?) , Pricelist = TO_NUMBER(?) , Pricepo = TO_NUMBER(?) , Validfrom = TO_DATE(?) , M_Product_Po_ID = (?) , AD_Client_ID = (?) , M_Product_Po_History_ID = (?) , Isactive = (?) , AD_Org_ID = (?) , updated = now(), updatedby = ? 
        WHERE m_product_po_history.M_Product_Po_History_ID = ? 
                 AND m_product_po_history.C_Bpartner_ID = ? 
        AND m_product_po_history.AD_Client_ID IN ('1') 
        AND m_product_po_history.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cBpartnerId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="pricelist"></Parameter> <Parameter name="pricepo"></Parameter> <Parameter name="validfrom"></Parameter> <Parameter name="mProductPoId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="mProductPoHistoryId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mProductPoHistoryId"></Parameter>
    
    <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="m_product_po_history.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m_product_po_history.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO m_product_po_history 
        (C_Bpartner_ID, M_Product_ID, Pricelist, Pricepo, Validfrom, M_Product_Po_ID, AD_Client_ID, M_Product_Po_History_ID, Isactive, AD_Org_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_DATE(?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cBpartnerId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="pricelist"></Parameter> <Parameter name="pricepo"></Parameter> <Parameter name="validfrom"></Parameter> <Parameter name="mProductPoId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="mProductPoHistoryId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM m_product_po_history
        WHERE m_product_po_history.M_Product_Po_History_ID = ? 
                 AND m_product_po_history.C_Bpartner_ID = ? 
        AND m_product_po_history.AD_Client_ID IN ('1') 
        AND m_product_po_history.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="m_product_po_history.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m_product_po_history.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM m_product_po_history
        WHERE m_product_po_history.M_Product_Po_History_ID = ? 
                 AND m_product_po_history.C_Bpartner_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM m_product_po_history
         WHERE m_product_po_history.M_Product_Po_History_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM m_product_po_history
         WHERE m_product_po_history.M_Product_Po_History_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>