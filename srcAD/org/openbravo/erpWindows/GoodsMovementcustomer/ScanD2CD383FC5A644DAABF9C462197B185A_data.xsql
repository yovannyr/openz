<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="ScanD2CD383FC5A644DAABF9C462197B185AData" package="org.openbravo.erpWindows.GoodsMovementcustomer">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(M_InOutLine.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_InOutLine.CreatedBy) as CreatedByR, 
        to_char(M_InOutLine.Updated, ?) as updated, 
        to_char(M_InOutLine.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        M_InOutLine.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_InOutLine.UpdatedBy) as UpdatedByR,
        M_InOutLine.QuantityOrder, 
M_InOutLine.M_Product_Uom_Id, 
M_InOutLine.M_AttributeSetInstance_ID, 
COALESCE(M_InOutLine.IsDescription, 'N') AS IsDescription, 
M_InOutLine.Line, 
M_InOutLine.M_InOut_ID, 
M_InOutLine.Upc, 
M_InOutLine.MovementQty, 
M_InOutLine.C_UOM_ID, 
(CASE WHEN M_InOutLine.C_UOM_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'') ) END) AS C_UOM_IDR, 
M_InOutLine.M_Locator_ID, 
(CASE WHEN M_InOutLine.M_Locator_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Value), ''))),'') ) END) AS M_Locator_IDR, 
M_InOutLine.M_Product_ID, 
(CASE WHEN M_InOutLine.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
M_InOutLine.M_InOutLine_ID, 
M_InOutLine.Description, 
COALESCE(M_InOutLine.IsInvoiced, 'N') AS IsInvoiced, 
M_InOutLine.C_OrderLine_ID, 
M_InOutLine.AD_Client_ID, 
M_InOutLine.AD_Org_ID, 
COALESCE(M_InOutLine.IsActive, 'N') AS IsActive, 
 
        ? AS LANGUAGE 
        FROM M_InOutLine left join (select C_UOM_ID, Name from C_UOM) table1 on (M_InOutLine.C_UOM_ID = table1.C_UOM_ID) left join (select C_UOM_ID,AD_Language, Name from C_UOM_TRL) tableTRL1 on (table1.C_UOM_ID = tableTRL1.C_UOM_ID and tableTRL1.AD_Language = ?)  left join (select M_Locator_ID, Value from M_Locator) table2 on (M_InOutLine.M_Locator_ID = table2.M_Locator_ID) left join (select M_Product_ID, Value, Name from M_Product) table3 on (M_InOutLine.M_Product_ID = table3.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL3 on (table3.M_Product_ID = tableTRL3.M_Product_ID and tableTRL3.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND M_InOutLine.M_InOutLine_ID = ? 
        AND M_InOutLine.AD_Client_ID IN ('1') 
           AND M_InOutLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="mInoutId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND M_InOutLine.M_InOut_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_InOutLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_InOutLine.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="mInoutId" id="paramKeyParent"></Parameter>
<Parameter name="movementqty"></Parameter><Parameter name="description"></Parameter><Parameter name="mLocatorId"></Parameter><Parameter name="mLocatorIdr"></Parameter><Parameter name="cUomId"></Parameter><Parameter name="line"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="upc"></Parameter><Parameter name="mInoutlineId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="quantityorder"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="isinvoiced"></Parameter><Parameter name="cOrderlineId"></Parameter><Parameter name="mProductId"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="mAttributesetinstanceId"></Parameter><Parameter name="isdescription"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="mProductUomId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef3537_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '') ) as M_Locator_ID FROM M_Locator table1 WHERE table1.isActive='Y' AND table1.M_Locator_ID = ?  
    ]]></Sql>
<Parameter name="M_Locator_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3810" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM M_InOutLine WHERE M_InOut_ID=? 
    ]]></Sql>

<Parameter name="M_InOut_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef3536_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3539_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3534_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_InOutLine.M_InOut_ID AS NAME
        FROM M_InOutLine
        WHERE M_InOutLine.M_InOutLine_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DocumentNo), '')) || ' - ' || TO_CHAR(table1.MovementDate, 'DD-MM-YYYY')) AS NAME FROM M_InOut left join (select M_InOut_ID, DocumentNo, MovementDate from M_InOut) table1 on (M_InOut.M_InOut_ID = table1.M_InOut_ID) WHERE M_InOut.M_InOut_ID = ?  
    ]]></Sql>
<Parameter name="mInoutId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DocumentNo), '')) || ' - ' || TO_CHAR(table1.MovementDate, 'DD-MM-YYYY')) AS NAME FROM M_InOut left join (select M_InOut_ID, DocumentNo, MovementDate from M_InOut) table1 on (M_InOut.M_InOut_ID = table1.M_InOut_ID) WHERE M_InOut.M_InOut_ID = ?  
    ]]></Sql>
<Parameter name="mInoutId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE M_InOutLine
        SET QuantityOrder = TO_NUMBER(?) , M_Product_Uom_Id = (?) , M_AttributeSetInstance_ID = (?) , IsDescription = (?) , Line = TO_NUMBER(?) , M_InOut_ID = (?) , Upc = (?) , MovementQty = TO_NUMBER(?) , C_UOM_ID = (?) , M_Locator_ID = (?) , M_Product_ID = (?) , M_InOutLine_ID = (?) , Description = (?) , IsInvoiced = (?) , C_OrderLine_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , IsActive = (?) , updated = now(), updatedby = ? 
        WHERE M_InOutLine.M_InOutLine_ID = ? 
                 AND M_InOutLine.M_InOut_ID = ? 
        AND M_InOutLine.AD_Client_ID IN ('1') 
        AND M_InOutLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="quantityorder"></Parameter> <Parameter name="mProductUomId"></Parameter> <Parameter name="mAttributesetinstanceId"></Parameter> <Parameter name="isdescription"></Parameter> <Parameter name="line"></Parameter> <Parameter name="mInoutId"></Parameter> <Parameter name="upc"></Parameter> <Parameter name="movementqty"></Parameter> <Parameter name="cUomId"></Parameter> <Parameter name="mLocatorId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="mInoutlineId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isinvoiced"></Parameter> <Parameter name="cOrderlineId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mInoutlineId"></Parameter>
    
    <Parameter name="mInoutId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_InOutLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_InOutLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO M_InOutLine 
        (QuantityOrder, M_Product_Uom_Id, M_AttributeSetInstance_ID, IsDescription, Line, M_InOut_ID, Upc, MovementQty, C_UOM_ID, M_Locator_ID, M_Product_ID, M_InOutLine_ID, Description, IsInvoiced, C_OrderLine_ID, AD_Client_ID, AD_Org_ID, IsActive, created, createdby, updated, updatedBy)
        VALUES (TO_NUMBER(?), (?), (?), (?), TO_NUMBER(?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="quantityorder"></Parameter> <Parameter name="mProductUomId"></Parameter> <Parameter name="mAttributesetinstanceId"></Parameter> <Parameter name="isdescription"></Parameter> <Parameter name="line"></Parameter> <Parameter name="mInoutId"></Parameter> <Parameter name="upc"></Parameter> <Parameter name="movementqty"></Parameter> <Parameter name="cUomId"></Parameter> <Parameter name="mLocatorId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="mInoutlineId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isinvoiced"></Parameter> <Parameter name="cOrderlineId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_InOutLine
        WHERE M_InOutLine.M_InOutLine_ID = ? 
                 AND M_InOutLine.M_InOut_ID = ? 
        AND M_InOutLine.AD_Client_ID IN ('1') 
        AND M_InOutLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mInoutId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_InOutLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_InOutLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_InOutLine
        WHERE M_InOutLine.M_InOutLine_ID = ? 
                 AND M_InOutLine.M_InOut_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mInoutId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM M_InOutLine
         WHERE M_InOutLine.M_InOutLine_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM M_InOutLine
         WHERE M_InOutLine.M_InOutLine_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>