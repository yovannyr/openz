<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="PriceData" package="org.openbravo.erpWindows.Product">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(M_ProductPrice.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_ProductPrice.CreatedBy) as CreatedByR, 
        to_char(M_ProductPrice.Updated, ?) as updated, 
        to_char(M_ProductPrice.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        M_ProductPrice.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_ProductPrice.UpdatedBy) as UpdatedByR,
        M_ProductPrice.AD_Client_ID, 
(CASE WHEN M_ProductPrice.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
M_ProductPrice.AD_Org_ID, 
(CASE WHEN M_ProductPrice.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
M_ProductPrice.M_Product_ID, 
(CASE WHEN M_ProductPrice.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
M_ProductPrice.M_PriceList_Version_ID, 
(CASE WHEN M_ProductPrice.M_PriceList_Version_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS M_PriceList_Version_IDR, 
COALESCE(M_ProductPrice.IsActive, 'N') AS IsActive, 
M_ProductPrice.PriceList, 
M_ProductPrice.PriceStd, 
M_ProductPrice.PriceLimit, 
M_ProductPrice.C_Uom_ID, 
(CASE WHEN M_ProductPrice.C_Uom_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'') ) END) AS C_Uom_IDR, 
M_ProductPrice.M_ProductPrice_ID, 
 
        ? AS LANGUAGE 
        FROM M_ProductPrice left join (select AD_Client_ID, Name from AD_Client) table1 on (M_ProductPrice.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (M_ProductPrice.AD_Org_ID = table2.AD_Org_ID) left join (select M_Product_ID, Value, Name from M_Product) table3 on (M_ProductPrice.M_Product_ID = table3.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL3 on (table3.M_Product_ID = tableTRL3.M_Product_ID and tableTRL3.AD_Language = ?)  left join (select M_PriceList_Version_ID, Name from M_PriceList_Version) table4 on (M_ProductPrice.M_PriceList_Version_ID = table4.M_PriceList_Version_ID) left join (select C_Uom_ID, Name from C_Uom) table5 on (M_ProductPrice.C_Uom_ID = table5.C_Uom_ID) left join (select C_UOM_ID,AD_Language, Name from C_UOM_TRL) tableTRL5 on (table5.C_UOM_ID = tableTRL5.C_UOM_ID and tableTRL5.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND M_ProductPrice.M_ProductPrice_ID = ? 
        AND M_ProductPrice.AD_Client_ID IN ('1') 
           AND M_ProductPrice.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="mProductId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND M_ProductPrice.M_Product_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_ProductPrice.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_ProductPrice.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="mProductId" id="paramKeyParent"></Parameter>
<Parameter name="pricelist"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="cUomId"></Parameter><Parameter name="pricestd"></Parameter><Parameter name="isactive"></Parameter><Parameter name="pricelimit"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="mProductpriceId"></Parameter><Parameter name="mPricelistVersionId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef2064_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2060_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2062_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_ProductPrice.M_Product_ID AS NAME
        FROM M_ProductPrice
        WHERE M_ProductPrice.M_ProductPrice_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM M_Product left join (select M_Product_ID, Value, Name from M_Product) table1 on (M_Product.M_Product_ID = table1.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL1 on (table1.M_Product_ID = tableTRL1.M_Product_ID and tableTRL1.AD_Language = ?)  WHERE M_Product.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="mProductId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM M_Product left join (select M_Product_ID, Value, Name from M_Product) table1 on (M_Product.M_Product_ID = table1.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL1 on (table1.M_Product_ID = tableTRL1.M_Product_ID and tableTRL1.AD_Language = ?)  WHERE M_Product.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="mProductId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE M_ProductPrice
        SET AD_Client_ID = (?) , AD_Org_ID = (?) , M_Product_ID = (?) , M_PriceList_Version_ID = (?) , IsActive = (?) , PriceList = TO_NUMBER(?) , PriceStd = TO_NUMBER(?) , PriceLimit = TO_NUMBER(?) , C_Uom_ID = (?) , M_ProductPrice_ID = (?) , updated = now(), updatedby = ? 
        WHERE M_ProductPrice.M_ProductPrice_ID = ? 
                 AND M_ProductPrice.M_Product_ID = ? 
        AND M_ProductPrice.AD_Client_ID IN ('1') 
        AND M_ProductPrice.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="mPricelistVersionId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="pricelist"></Parameter> <Parameter name="pricestd"></Parameter> <Parameter name="pricelimit"></Parameter> <Parameter name="cUomId"></Parameter> <Parameter name="mProductpriceId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mProductpriceId"></Parameter>
    
    <Parameter name="mProductId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_ProductPrice.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_ProductPrice.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO M_ProductPrice 
        (AD_Client_ID, AD_Org_ID, M_Product_ID, M_PriceList_Version_ID, IsActive, PriceList, PriceStd, PriceLimit, C_Uom_ID, M_ProductPrice_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="mPricelistVersionId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="pricelist"></Parameter> <Parameter name="pricestd"></Parameter> <Parameter name="pricelimit"></Parameter> <Parameter name="cUomId"></Parameter> <Parameter name="mProductpriceId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_ProductPrice
        WHERE M_ProductPrice.M_ProductPrice_ID = ? 
                 AND M_ProductPrice.M_Product_ID = ? 
        AND M_ProductPrice.AD_Client_ID IN ('1') 
        AND M_ProductPrice.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mProductId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_ProductPrice.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_ProductPrice.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_ProductPrice
        WHERE M_ProductPrice.M_ProductPrice_ID = ? 
                 AND M_ProductPrice.M_Product_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mProductId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM M_ProductPrice
         WHERE M_ProductPrice.M_ProductPrice_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM M_ProductPrice
         WHERE M_ProductPrice.M_ProductPrice_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>