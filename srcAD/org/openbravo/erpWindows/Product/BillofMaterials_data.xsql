<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="BillofMaterialsData" package="org.openbravo.erpWindows.Product">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(M_Product_BOM.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_Product_BOM.CreatedBy) as CreatedByR, 
        to_char(M_Product_BOM.Updated, ?) as updated, 
        to_char(M_Product_BOM.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        M_Product_BOM.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_Product_BOM.UpdatedBy) as UpdatedByR,
        M_Product_BOM.BOMType, 
M_Product_BOM.M_Product_ID, 
(CASE WHEN M_Product_BOM.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
COALESCE(M_Product_BOM.IsActive, 'N') AS IsActive, 
M_Product_BOM.Line, 
M_Product_BOM.Product_Value, 
M_Product_BOM.M_ProductBOM_ID, 
(CASE WHEN M_Product_BOM.M_ProductBOM_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), ''))),'') ) END) AS M_ProductBOM_IDR, 
M_Product_BOM.BOMQty, 
M_Product_BOM.Description, 
M_Product_BOM.Constuctivemeasure, 
M_Product_BOM.Rawmaterial, 
M_Product_BOM.C_Bpartner_ID, 
(CASE WHEN M_Product_BOM.C_Bpartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
M_Product_BOM.AD_Org_ID, 
M_Product_BOM.AD_Client_ID, 
M_Product_BOM.M_Product_BOM_ID, 
 
        ? AS LANGUAGE 
        FROM M_Product_BOM left join (select M_Product_ID, Value, Name from M_Product) table1 on (M_Product_BOM.M_Product_ID = table1.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL1 on (table1.M_Product_ID = tableTRL1.M_Product_ID and tableTRL1.AD_Language = ?)  left join (select M_Product_ID, Value, Name from M_Product) table2 on (M_Product_BOM.M_ProductBOM_ID = table2.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL2 on (table2.M_Product_ID = tableTRL2.M_Product_ID and tableTRL2.AD_Language = ?)  left join (select C_BPartner_ID, Name from C_BPartner) table3 on (M_Product_BOM.C_Bpartner_ID = table3.C_BPartner_ID)
        WHERE 2=2 

        AND 1=1 
        AND M_Product_BOM.M_Product_BOM_ID = ? 
        AND M_Product_BOM.AD_Client_ID IN ('1') 
           AND M_Product_BOM.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="mProductId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND M_Product_BOM.M_Product_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_Product_BOM.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_Product_BOM.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="mProductId" id="paramKeyParent"></Parameter>
<Parameter name="productValue"></Parameter><Parameter name="bomtype"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="line"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="description"></Parameter><Parameter name="bomqty"></Parameter><Parameter name="constuctivemeasure"></Parameter><Parameter name="mProductbomId"></Parameter><Parameter name="mProductbomIdr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="rawmaterial"></Parameter><Parameter name="mProductBomId"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef4721_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4770" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM M_Product_BOM WHERE M_Product_ID=? 
    ]]></Sql>

<Parameter name="M_Product_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef4718_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4722_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_ProductBOM_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_ProductBOM_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef03A847352F8A4518A7C5BDB31644E23D_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as C_Bpartner_ID FROM C_BPartner table1 WHERE table1.isActive='Y' AND table1.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_Bpartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4720_4" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_Product_BOM.M_Product_ID AS NAME
        FROM M_Product_BOM
        WHERE M_Product_BOM.M_Product_BOM_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM M_Product left join (select M_Product_ID, Value, Name from M_Product) table1 on (M_Product.M_Product_ID = table1.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL1 on (table1.M_Product_ID = tableTRL1.M_Product_ID and tableTRL1.AD_Language = ?)  WHERE M_Product.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="mProductId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM M_Product left join (select M_Product_ID, Value, Name from M_Product) table1 on (M_Product.M_Product_ID = table1.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL1 on (table1.M_Product_ID = tableTRL1.M_Product_ID and tableTRL1.AD_Language = ?)  WHERE M_Product.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="mProductId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE M_Product_BOM
        SET BOMType = (?) , M_Product_ID = (?) , IsActive = (?) , Line = TO_NUMBER(?) , Product_Value = (?) , M_ProductBOM_ID = (?) , BOMQty = TO_NUMBER(?) , Description = (?) , Constuctivemeasure = (?) , Rawmaterial = (?) , C_Bpartner_ID = (?) , AD_Org_ID = (?) , AD_Client_ID = (?) , M_Product_BOM_ID = (?) , updated = now(), updatedby = ? 
        WHERE M_Product_BOM.M_Product_BOM_ID = ? 
                 AND M_Product_BOM.M_Product_ID = ? 
        AND M_Product_BOM.AD_Client_ID IN ('1') 
        AND M_Product_BOM.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="bomtype"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="line"></Parameter> <Parameter name="productValue"></Parameter> <Parameter name="mProductbomId"></Parameter> <Parameter name="bomqty"></Parameter> <Parameter name="description"></Parameter> <Parameter name="constuctivemeasure"></Parameter> <Parameter name="rawmaterial"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="mProductBomId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mProductBomId"></Parameter>
    
    <Parameter name="mProductId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_Product_BOM.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_Product_BOM.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO M_Product_BOM 
        (BOMType, M_Product_ID, IsActive, Line, Product_Value, M_ProductBOM_ID, BOMQty, Description, Constuctivemeasure, Rawmaterial, C_Bpartner_ID, AD_Org_ID, AD_Client_ID, M_Product_BOM_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), TO_NUMBER(?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="bomtype"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="line"></Parameter> <Parameter name="productValue"></Parameter> <Parameter name="mProductbomId"></Parameter> <Parameter name="bomqty"></Parameter> <Parameter name="description"></Parameter> <Parameter name="constuctivemeasure"></Parameter> <Parameter name="rawmaterial"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="mProductBomId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_Product_BOM
        WHERE M_Product_BOM.M_Product_BOM_ID = ? 
                 AND M_Product_BOM.M_Product_ID = ? 
        AND M_Product_BOM.AD_Client_ID IN ('1') 
        AND M_Product_BOM.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mProductId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_Product_BOM.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_Product_BOM.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_Product_BOM
        WHERE M_Product_BOM.M_Product_BOM_ID = ? 
                 AND M_Product_BOM.M_Product_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mProductId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM M_Product_BOM
         WHERE M_Product_BOM.M_Product_BOM_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM M_Product_BOM
         WHERE M_Product_BOM.M_Product_BOM_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>