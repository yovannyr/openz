<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="BatchNumberTransactionsData" package="org.openbravo.erpWindows.Product">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(snr_serialnumbertracking.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = snr_serialnumbertracking.CreatedBy) as CreatedByR, 
        to_char(snr_serialnumbertracking.Updated, ?) as updated, 
        to_char(snr_serialnumbertracking.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        snr_serialnumbertracking.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = snr_serialnumbertracking.UpdatedBy) as UpdatedByR,
        snr_serialnumbertracking.M_Product_ID, 
(CASE WHEN snr_serialnumbertracking.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
snr_serialnumbertracking.AD_Client_ID, 
snr_serialnumbertracking.Lotnumber, 
snr_serialnumbertracking.Quantity, 
snr_serialnumbertracking.AD_Org_ID, 
snr_serialnumbertracking.Serialnumber, 
COALESCE(snr_serialnumbertracking.Isactive, 'N') AS Isactive, 
snr_serialnumbertracking.Movementdate, 
snr_serialnumbertracking.M_Attributesetinstance_ID, 
(CASE WHEN snr_serialnumbertracking.M_Attributesetinstance_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Description), ''))),'') ) END) AS M_Attributesetinstance_IDR, 
snr_serialnumbertracking.M_Locator_ID, 
(CASE WHEN snr_serialnumbertracking.M_Locator_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Value), ''))),'') ) END) AS M_Locator_IDR, 
snr_serialnumbertracking.C_Bpartner_ID, 
(CASE WHEN snr_serialnumbertracking.C_Bpartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
snr_serialnumbertracking.C_Orderline_ID, 
(CASE WHEN snr_serialnumbertracking.C_Orderline_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table6.DateOrdered, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.GrandTotal), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Line), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.LineNetAmt), ''))),'') ) END) AS C_Orderline_IDR, 
snr_serialnumbertracking.Movementtype, 
(CASE WHEN snr_serialnumbertracking.Movementtype IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS MovementtypeR, 
snr_serialnumbertracking.M_Movement_ID, 
(CASE WHEN snr_serialnumbertracking.M_Movement_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Name), ''))),'') ) END) AS M_Movement_IDR, 
snr_serialnumbertracking.M_Inventory_ID, 
(CASE WHEN snr_serialnumbertracking.M_Inventory_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Name), ''))),'') ) END) AS M_Inventory_IDR, 
snr_serialnumbertracking.M_Inout_ID, 
(CASE WHEN snr_serialnumbertracking.M_Inout_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table9.MovementDate, 'DD-MM-YYYY')),'') ) END) AS M_Inout_IDR, 
snr_serialnumbertracking.Guaranteedays, 
snr_serialnumbertracking.M_Internal_Consumption_ID, 
(CASE WHEN snr_serialnumbertracking.M_Internal_Consumption_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table10.Name), ''))),'') ) END) AS M_Internal_Consumption_IDR, 
snr_serialnumbertracking.M_Inoutline_ID, 
(CASE WHEN snr_serialnumbertracking.M_Inoutline_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table12.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table12.MovementDate, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table13.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL13.Name IS NULL THEN TO_CHAR(table13.Name) ELSE TO_CHAR(tableTRL13.Name) END)), ''))),'') ) END) AS M_Inoutline_IDR, 
snr_serialnumbertracking.M_Movementline_ID, 
(CASE WHEN snr_serialnumbertracking.M_Movementline_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table14.Line), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table14.MovementQty), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table15.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table15.Name), ''))),'') ) END) AS M_Movementline_IDR, 
snr_serialnumbertracking.Rfidnumber, 
snr_serialnumbertracking.M_Internal_Consumptionline_ID, 
(CASE WHEN snr_serialnumbertracking.M_Internal_Consumptionline_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table17.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table18.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL18.Name IS NULL THEN TO_CHAR(table18.Name) ELSE TO_CHAR(tableTRL18.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table16.MovementQty), ''))),'') ) END) AS M_Internal_Consumptionline_IDR, 
snr_serialnumbertracking.M_Inventoryline_ID, 
(CASE WHEN snr_serialnumbertracking.M_Inventoryline_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table19.Line), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table19.QtyCount), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table20.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table19.Name), ''))),'') ) END) AS M_Inventoryline_IDR, 
snr_serialnumbertracking.C_Project_ID, 
(CASE WHEN snr_serialnumbertracking.C_Project_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table21.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table21.Name), ''))),'') ) END) AS C_Project_IDR, 
snr_serialnumbertracking.SNR_Serialnumbertracking_ID, 
snr_serialnumbertracking.C_Projecttask_ID, 
(CASE WHEN snr_serialnumbertracking.C_Projecttask_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table22.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table23.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table23.Name), ''))),'') ) END) AS C_Projecttask_IDR, 
snr_serialnumbertracking.A_Asset_ID, 
(CASE WHEN snr_serialnumbertracking.A_Asset_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table24.Name), ''))),'') ) END) AS A_Asset_IDR, 
snr_serialnumbertracking.Assembly_Productid, 
(CASE WHEN snr_serialnumbertracking.Assembly_Productid IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table25.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL25.Name IS NULL THEN TO_CHAR(table25.Name) ELSE TO_CHAR(tableTRL25.Name) END)), ''))),'') ) END) AS Assembly_ProductidR, 
snr_serialnumbertracking.Assembly_Snr, 
snr_serialnumbertracking.Guaranteedate, 
snr_serialnumbertracking.Description, 
snr_serialnumbertracking.Docstatus, 
snr_serialnumbertracking.SNR_Batchmasterdata_ID, 
 
        ? AS LANGUAGE 
        FROM snr_serialnumbertracking left join (select M_Product_ID, Value, Name from M_Product) table1 on (snr_serialnumbertracking.M_Product_ID = table1.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL1 on (table1.M_Product_ID = tableTRL1.M_Product_ID and tableTRL1.AD_Language = ?)  left join (select M_AttributeSetInstance_ID, Description from M_AttributeSetInstance) table2 on (snr_serialnumbertracking.M_Attributesetinstance_ID = table2.M_AttributeSetInstance_ID) left join (select M_Locator_ID, Value from M_Locator) table3 on (snr_serialnumbertracking.M_Locator_ID = table3.M_Locator_ID) left join (select C_BPartner_ID, Name from C_BPartner) table4 on (snr_serialnumbertracking.C_Bpartner_ID = table4.C_BPartner_ID) left join (select C_OrderLine_ID, C_Order_ID, Line, LineNetAmt from C_OrderLine) table5 on (snr_serialnumbertracking.C_Orderline_ID = table5.C_OrderLine_ID) left join (select C_Order_ID, DocumentNo, Name, DateOrdered, GrandTotal from C_Order) table6 on (table5.C_Order_ID = table6.C_Order_ID) left join ad_ref_list_v list1 on (snr_serialnumbertracking.Movementtype = list1.value and list1.ad_reference_id = '189' and list1.ad_language = ?)  left join (select M_Movement_ID, DocumentNo, Name from M_Movement) table7 on (snr_serialnumbertracking.M_Movement_ID = table7.M_Movement_ID) left join (select M_Inventory_ID, Name from M_Inventory) table8 on (snr_serialnumbertracking.M_Inventory_ID = table8.M_Inventory_ID) left join (select M_InOut_ID, DocumentNo, MovementDate from M_InOut) table9 on (snr_serialnumbertracking.M_Inout_ID = table9.M_InOut_ID) left join (select M_Internal_Consumption_ID, Name from M_Internal_Consumption) table10 on (snr_serialnumbertracking.M_Internal_Consumption_ID = table10.M_Internal_Consumption_ID) left join (select M_InOutLine_ID, M_InOut_ID, M_Product_ID from M_InOutLine) table11 on (snr_serialnumbertracking.M_Inoutline_ID = table11.M_InOutLine_ID) left join (select M_InOut_ID, DocumentNo, MovementDate from M_InOut) table12 on (table11.M_InOut_ID = table12.M_InOut_ID) left join (select M_Product_ID, Value, Name from M_Product) table13 on (table11.M_Product_ID = table13.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL13 on (table13.M_Product_ID = tableTRL13.M_Product_ID and tableTRL13.AD_Language = ?)  left join (select M_Movementline_ID, Line, MovementQty, M_Movement_ID from M_Movementline) table14 on (snr_serialnumbertracking.M_Movementline_ID = table14.M_Movementline_ID) left join (select M_Movement_ID, DocumentNo, Name from M_Movement) table15 on (table14.M_Movement_ID = table15.M_Movement_ID) left join (select M_Internal_Consumptionline_ID, M_Internal_Consumption_ID, M_Product_ID, MovementQty from M_Internal_Consumptionline) table16 on (snr_serialnumbertracking.M_Internal_Consumptionline_ID = table16.M_Internal_Consumptionline_ID) left join (select M_Internal_Consumption_ID, Name from M_Internal_Consumption) table17 on (table16.M_Internal_Consumption_ID = table17.M_Internal_Consumption_ID) left join (select M_Product_ID, Value, Name from M_Product) table18 on (table16.M_Product_ID = table18.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL18 on (table18.M_Product_ID = tableTRL18.M_Product_ID and tableTRL18.AD_Language = ?)  left join (select M_Inventoryline_ID, Line, QtyCount, M_Inventory_ID, Name from M_Inventoryline) table19 on (snr_serialnumbertracking.M_Inventoryline_ID = table19.M_Inventoryline_ID) left join (select M_Inventory_ID, Name from M_Inventory) table20 on (table19.M_Inventory_ID = table20.M_Inventory_ID) left join (select C_Project_ID, Value, Name from C_Project) table21 on (snr_serialnumbertracking.C_Project_ID = table21.C_Project_ID) left join (select C_Projecttask_ID, Name, C_Project_ID from C_Projecttask) table22 on (snr_serialnumbertracking.C_Projecttask_ID = table22.C_Projecttask_ID) left join (select C_Project_ID, Value, Name from C_Project) table23 on (table22.C_Project_ID = table23.C_Project_ID) left join (select A_Asset_ID, Name from A_Asset) table24 on (snr_serialnumbertracking.A_Asset_ID = table24.A_Asset_ID) left join (select M_Product_ID, Value, Name from M_Product) table25 on (snr_serialnumbertracking.Assembly_Productid = table25.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL25 on (table25.M_Product_ID = tableTRL25.M_Product_ID and tableTRL25.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND snr_serialnumbertracking.SNR_Serialnumbertracking_ID = ? 
        AND snr_serialnumbertracking.AD_Client_ID IN ('1') 
           AND snr_serialnumbertracking.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="snrBatchmasterdataId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND snr_serialnumbertracking.SNR_Batchmasterdata_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="snr_serialnumbertracking.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="snr_serialnumbertracking.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="snrBatchmasterdataId" id="paramKeyParent"></Parameter>
<Parameter name="mInoutlineId"></Parameter><Parameter name="mInoutlineIdr"></Parameter><Parameter name="assemblyProductid"></Parameter><Parameter name="assemblyProductidr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="cProjecttaskId"></Parameter><Parameter name="snrSerialnumbertrackingId"></Parameter><Parameter name="mMovementId"></Parameter><Parameter name="description"></Parameter><Parameter name="mInventorylineId"></Parameter><Parameter name="quantity"></Parameter><Parameter name="movementdate"></Parameter><Parameter name="mInternalConsumptionlineId"></Parameter><Parameter name="guaranteedate"></Parameter><Parameter name="lotnumber"></Parameter><Parameter name="mMovementlineId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="movementtype"></Parameter><Parameter name="mInternalConsumptionId"></Parameter><Parameter name="assemblySnr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="mInventoryId"></Parameter><Parameter name="guaranteedays"></Parameter><Parameter name="mAttributesetinstanceId"></Parameter><Parameter name="mAttributesetinstanceIdr"></Parameter><Parameter name="mInoutId"></Parameter><Parameter name="mInoutIdr"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="rfidnumber"></Parameter><Parameter name="docstatus"></Parameter><Parameter name="serialnumber"></Parameter><Parameter name="mLocatorId"></Parameter><Parameter name="mLocatorIdr"></Parameter><Parameter name="cProjectId"></Parameter><Parameter name="cProjectIdr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="cOrderlineId"></Parameter><Parameter name="cOrderlineIdr"></Parameter><Parameter name="mProductId"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="aAssetId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef90CAE05DF99641938BECABEA651659F3_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table2.DocumentNo), '')  || ' - ' || COALESCE(TO_CHAR(table2.MovementDate), '')  || ' - ' || COALESCE(TO_CHAR(table3.Value), '')  || ' - ' || COALESCE(TO_CHAR(table3.Name), '') ) as M_Inoutline_ID FROM M_InOutLine table1 left join M_InOut table2 on (table1.M_InOut_ID = table2.M_InOut_ID) left join M_Product table3 on (table1.M_Product_ID = table3.M_Product_ID) WHERE table1.isActive='Y' AND table1.M_InOutLine_ID = ?  
    ]]></Sql>
<Parameter name="M_Inoutline_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefA71F774962944D41B980C9C2D5B34669_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as Assembly_Productid FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="Assembly_ProductidR"/>
  </SqlMethod>

   <SqlMethod name="selectDef775B3326D4104402A931CEDBFEA06933_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefABA0AE095068430AAF34BB38C525657A_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefD6E8C36F2B8F4CC7AB52999AB9D274DA_4" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Description), '') ) as M_Attributesetinstance_ID FROM M_AttributeSetInstance table1 WHERE table1.isActive='Y' AND table1.M_AttributeSetInstance_ID = ?  
    ]]></Sql>
<Parameter name="M_Attributesetinstance_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefB78C46BB7000448EA0E2B35DF351ADC6_5" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.DocumentNo), '')  || ' - ' || COALESCE(TO_CHAR(table1.MovementDate), '') ) as M_Inout_ID FROM M_InOut table1 WHERE table1.isActive='Y' AND table1.M_InOut_ID = ?  
    ]]></Sql>
<Parameter name="M_Inout_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefFE03AA8BA4B7448088819DDAB664189F_6" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as C_Bpartner_ID FROM C_BPartner table1 WHERE table1.isActive='Y' AND table1.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_Bpartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefC25C3D6A592D47C8B084245749AD006C_7" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '') ) as M_Locator_ID FROM M_Locator table1 WHERE table1.isActive='Y' AND table1.M_Locator_ID = ?  
    ]]></Sql>
<Parameter name="M_Locator_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4F68001A1827490B8E25617CCFE9A835_8" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as C_Project_ID FROM C_Project table1 WHERE table1.isActive='Y' AND table1.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="C_Project_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef8E2C92CCC5F547E998DC56323ADBAB8F_9" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table2.DocumentNo), '')  || ' - ' || COALESCE(TO_CHAR(table2.Name), '')  || ' - ' || COALESCE(TO_CHAR(table2.DateOrdered), '')  || ' - ' || COALESCE(TO_CHAR(table2.GrandTotal), '')  || ' - ' || COALESCE(TO_CHAR(table1.Line), '')  || ' - ' || COALESCE(TO_CHAR(table1.LineNetAmt), '') ) as C_Orderline_ID FROM C_OrderLine table1 left join C_Order table2 on (table1.C_Order_ID = table2.C_Order_ID) WHERE table1.isActive='Y' AND table1.C_OrderLine_ID = ?  
    ]]></Sql>
<Parameter name="C_Orderline_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefED4444A033624267A14E465923306FF7_10" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT snr_serialnumbertracking.SNR_Batchmasterdata_ID AS NAME
        FROM snr_serialnumbertracking
        WHERE snr_serialnumbertracking.SNR_Serialnumbertracking_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Batchnumber), ''))) AS NAME FROM snr_batchmasterdata left join (select SNR_Batchmasterdata_ID, Batchnumber from SNR_Batchmasterdata) table1 on (snr_batchmasterdata.SNR_Batchmasterdata_ID = table1.SNR_Batchmasterdata_ID) WHERE snr_batchmasterdata.SNR_Batchmasterdata_ID = ?  
    ]]></Sql>
<Parameter name="snrBatchmasterdataId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Batchnumber), ''))) AS NAME FROM snr_batchmasterdata left join (select SNR_Batchmasterdata_ID, Batchnumber from SNR_Batchmasterdata) table1 on (snr_batchmasterdata.SNR_Batchmasterdata_ID = table1.SNR_Batchmasterdata_ID) WHERE snr_batchmasterdata.SNR_Batchmasterdata_ID = ?  
    ]]></Sql>
<Parameter name="snrBatchmasterdataId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE snr_serialnumbertracking
        SET M_Product_ID = (?) , AD_Client_ID = (?) , Lotnumber = (?) , Quantity = TO_NUMBER(?) , AD_Org_ID = (?) , Serialnumber = (?) , Isactive = (?) , Movementdate = TO_DATE(?) , M_Attributesetinstance_ID = (?) , M_Locator_ID = (?) , C_Bpartner_ID = (?) , C_Orderline_ID = (?) , Movementtype = (?) , M_Movement_ID = (?) , M_Inventory_ID = (?) , M_Inout_ID = (?) , Guaranteedays = TO_NUMBER(?) , M_Internal_Consumption_ID = (?) , M_Inoutline_ID = (?) , M_Movementline_ID = (?) , Rfidnumber = (?) , M_Internal_Consumptionline_ID = (?) , M_Inventoryline_ID = (?) , C_Project_ID = (?) , SNR_Serialnumbertracking_ID = (?) , C_Projecttask_ID = (?) , A_Asset_ID = (?) , Assembly_Productid = (?) , Assembly_Snr = (?) , Guaranteedate = TO_DATE(?) , Description = (?) , Docstatus = (?) , SNR_Batchmasterdata_ID = (?) , updated = now(), updatedby = ? 
        WHERE snr_serialnumbertracking.SNR_Serialnumbertracking_ID = ? 
                 AND snr_serialnumbertracking.SNR_Batchmasterdata_ID = ? 
        AND snr_serialnumbertracking.AD_Client_ID IN ('1') 
        AND snr_serialnumbertracking.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="mProductId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="lotnumber"></Parameter> <Parameter name="quantity"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="serialnumber"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="movementdate"></Parameter> <Parameter name="mAttributesetinstanceId"></Parameter> <Parameter name="mLocatorId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="cOrderlineId"></Parameter> <Parameter name="movementtype"></Parameter> <Parameter name="mMovementId"></Parameter> <Parameter name="mInventoryId"></Parameter> <Parameter name="mInoutId"></Parameter> <Parameter name="guaranteedays"></Parameter> <Parameter name="mInternalConsumptionId"></Parameter> <Parameter name="mInoutlineId"></Parameter> <Parameter name="mMovementlineId"></Parameter> <Parameter name="rfidnumber"></Parameter> <Parameter name="mInternalConsumptionlineId"></Parameter> <Parameter name="mInventorylineId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="snrSerialnumbertrackingId"></Parameter> <Parameter name="cProjecttaskId"></Parameter> <Parameter name="aAssetId"></Parameter> <Parameter name="assemblyProductid"></Parameter> <Parameter name="assemblySnr"></Parameter> <Parameter name="guaranteedate"></Parameter> <Parameter name="description"></Parameter> <Parameter name="docstatus"></Parameter> <Parameter name="snrBatchmasterdataId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="snrSerialnumbertrackingId"></Parameter>
    
    <Parameter name="snrBatchmasterdataId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="snr_serialnumbertracking.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="snr_serialnumbertracking.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO snr_serialnumbertracking 
        (M_Product_ID, AD_Client_ID, Lotnumber, Quantity, AD_Org_ID, Serialnumber, Isactive, Movementdate, M_Attributesetinstance_ID, M_Locator_ID, C_Bpartner_ID, C_Orderline_ID, Movementtype, M_Movement_ID, M_Inventory_ID, M_Inout_ID, Guaranteedays, M_Internal_Consumption_ID, M_Inoutline_ID, M_Movementline_ID, Rfidnumber, M_Internal_Consumptionline_ID, M_Inventoryline_ID, C_Project_ID, SNR_Serialnumbertracking_ID, C_Projecttask_ID, A_Asset_ID, Assembly_Productid, Assembly_Snr, Guaranteedate, Description, Docstatus, SNR_Batchmasterdata_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), TO_NUMBER(?), (?), (?), (?), TO_DATE(?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), TO_DATE(?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="mProductId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="lotnumber"></Parameter> <Parameter name="quantity"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="serialnumber"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="movementdate"></Parameter> <Parameter name="mAttributesetinstanceId"></Parameter> <Parameter name="mLocatorId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="cOrderlineId"></Parameter> <Parameter name="movementtype"></Parameter> <Parameter name="mMovementId"></Parameter> <Parameter name="mInventoryId"></Parameter> <Parameter name="mInoutId"></Parameter> <Parameter name="guaranteedays"></Parameter> <Parameter name="mInternalConsumptionId"></Parameter> <Parameter name="mInoutlineId"></Parameter> <Parameter name="mMovementlineId"></Parameter> <Parameter name="rfidnumber"></Parameter> <Parameter name="mInternalConsumptionlineId"></Parameter> <Parameter name="mInventorylineId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="snrSerialnumbertrackingId"></Parameter> <Parameter name="cProjecttaskId"></Parameter> <Parameter name="aAssetId"></Parameter> <Parameter name="assemblyProductid"></Parameter> <Parameter name="assemblySnr"></Parameter> <Parameter name="guaranteedate"></Parameter> <Parameter name="description"></Parameter> <Parameter name="docstatus"></Parameter> <Parameter name="snrBatchmasterdataId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM snr_serialnumbertracking
        WHERE snr_serialnumbertracking.SNR_Serialnumbertracking_ID = ? 
                 AND snr_serialnumbertracking.SNR_Batchmasterdata_ID = ? 
        AND snr_serialnumbertracking.AD_Client_ID IN ('1') 
        AND snr_serialnumbertracking.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="snrBatchmasterdataId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="snr_serialnumbertracking.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="snr_serialnumbertracking.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM snr_serialnumbertracking
        WHERE snr_serialnumbertracking.SNR_Serialnumbertracking_ID = ? 
                 AND snr_serialnumbertracking.SNR_Batchmasterdata_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="snrBatchmasterdataId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM snr_serialnumbertracking
         WHERE snr_serialnumbertracking.SNR_Serialnumbertracking_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM snr_serialnumbertracking
         WHERE snr_serialnumbertracking.SNR_Serialnumbertracking_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>