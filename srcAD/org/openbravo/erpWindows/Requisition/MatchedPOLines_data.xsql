<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="MatchedPOLinesData" package="org.openbravo.erpWindows.Requisition">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(M_RequisitionOrder.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_RequisitionOrder.CreatedBy) as CreatedByR, 
        to_char(M_RequisitionOrder.Updated, ?) as updated, 
        to_char(M_RequisitionOrder.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        M_RequisitionOrder.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_RequisitionOrder.UpdatedBy) as UpdatedByR,
        M_RequisitionOrder.M_Requisitionorder_ID, 
M_RequisitionOrder.AD_Client_ID, 
(CASE WHEN M_RequisitionOrder.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
M_RequisitionOrder.AD_Org_ID, 
(CASE WHEN M_RequisitionOrder.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
M_RequisitionOrder.M_Requisitionline_ID, 
(CASE WHEN M_RequisitionOrder.M_Requisitionline_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Qty), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table3.Needbydate, 'DD-MM-YYYY')),'') ) END) AS M_Requisitionline_IDR, 
COALESCE(M_RequisitionOrder.IsActive, 'N') AS IsActive, 
M_RequisitionOrder.C_OrderLine_ID, 
(CASE WHEN M_RequisitionOrder.C_OrderLine_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table7.DateOrdered, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.GrandTotal), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Line), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.LineNetAmt), ''))),'') ) END) AS C_OrderLine_IDR, 
M_RequisitionOrder.Qty, 
 
        ? AS LANGUAGE 
        FROM M_RequisitionOrder left join (select AD_Client_ID, Name from AD_Client) table1 on (M_RequisitionOrder.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (M_RequisitionOrder.AD_Org_ID = table2.AD_Org_ID) left join (select M_Requisitionline_ID, M_Requisition_ID, M_Product_ID, Qty, Needbydate from M_Requisitionline) table3 on (M_RequisitionOrder.M_Requisitionline_ID = table3.M_Requisitionline_ID) left join (select M_Requisition_ID, DocumentNo from M_Requisition) table4 on (table3.M_Requisition_ID = table4.M_Requisition_ID) left join (select M_Product_ID, Value, Name from M_Product) table5 on (table3.M_Product_ID = table5.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL5 on (table5.M_Product_ID = tableTRL5.M_Product_ID and tableTRL5.AD_Language = ?)  left join (select C_OrderLine_ID, C_Order_ID, Line, LineNetAmt from C_OrderLine) table6 on (M_RequisitionOrder.C_OrderLine_ID = table6.C_OrderLine_ID) left join (select C_Order_ID, DocumentNo, Name, DateOrdered, GrandTotal from C_Order) table7 on (table6.C_Order_ID = table7.C_Order_ID)
        WHERE 2=2 

        AND 1=1 
        AND M_RequisitionOrder.M_Requisitionorder_ID = ? 
        AND M_RequisitionOrder.AD_Client_ID IN ('1') 
           AND M_RequisitionOrder.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="mRequisitionlineId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND M_RequisitionOrder.M_Requisitionline_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_RequisitionOrder.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_RequisitionOrder.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="mRequisitionlineId" id="paramKeyParent"></Parameter>
<Parameter name="cOrderlineId"></Parameter><Parameter name="cOrderlineIdr"></Parameter><Parameter name="qty"></Parameter><Parameter name="isactive"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="mRequisitionorderId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="adClientId"></Parameter>
   </SqlMethod>


   <SqlMethod name="selectAux1004400002" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT COALESCE(M_RequisitionLine.C_BPartner_ID, M_Requisition.C_BPartner_ID) AS C_BPartner_ID FROM M_RequisitionLine, M_Requisition WHERE M_Requisition.M_Requisition_ID = M_RequisitionLine.M_Requisition_ID AND M_RequisitionLine.M_RequisitionLine_ID = ? 
    ]]></Sql>

<Parameter name="M_REQUISITIONLINE_ID"/>
  </SqlMethod>





   <SqlMethod name="selectDef1004400015_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table2.DocumentNo), '')  || ' - ' || COALESCE(TO_CHAR(table2.Name), '')  || ' - ' || COALESCE(TO_CHAR(table2.DateOrdered), '')  || ' - ' || COALESCE(TO_CHAR(table2.GrandTotal), '')  || ' - ' || COALESCE(TO_CHAR(table1.Line), '')  || ' - ' || COALESCE(TO_CHAR(table1.LineNetAmt), '') ) as C_OrderLine_ID FROM C_OrderLine table1 left join C_Order table2 on (table1.C_Order_ID = table2.C_Order_ID) WHERE table1.isActive='Y' AND table1.C_OrderLine_ID = ?  
    ]]></Sql>
<Parameter name="C_OrderLine_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef1004400012_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef1004400010_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_RequisitionOrder.M_Requisitionline_ID AS NAME
        FROM M_RequisitionOrder
        WHERE M_RequisitionOrder.M_Requisitionorder_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table2.DocumentNo), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table3.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Qty), '')) || ' - ' || TO_CHAR(table1.Needbydate, 'DD-MM-YYYY')) AS NAME FROM M_RequisitionLine left join (select M_Requisitionline_ID, M_Requisition_ID, M_Product_ID, Qty, Needbydate from M_Requisitionline) table1 on (M_RequisitionLine.M_Requisitionline_ID = table1.M_Requisitionline_ID) left join (select M_Requisition_ID, DocumentNo from M_Requisition) table2 on (table1.M_Requisition_ID = table2.M_Requisition_ID) left join (select M_Product_ID, Value, Name from M_Product) table3 on (table1.M_Product_ID = table3.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL3 on (table3.M_Product_ID = tableTRL3.M_Product_ID and tableTRL3.AD_Language = ?)  WHERE M_RequisitionLine.M_Requisitionline_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="mRequisitionlineId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table2.DocumentNo), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table3.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Qty), '')) || ' - ' || TO_CHAR(table1.Needbydate, 'DD-MM-YYYY')) AS NAME FROM M_RequisitionLine left join (select M_Requisitionline_ID, M_Requisition_ID, M_Product_ID, Qty, Needbydate from M_Requisitionline) table1 on (M_RequisitionLine.M_Requisitionline_ID = table1.M_Requisitionline_ID) left join (select M_Requisition_ID, DocumentNo from M_Requisition) table2 on (table1.M_Requisition_ID = table2.M_Requisition_ID) left join (select M_Product_ID, Value, Name from M_Product) table3 on (table1.M_Product_ID = table3.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL3 on (table3.M_Product_ID = tableTRL3.M_Product_ID and tableTRL3.AD_Language = ?)  WHERE M_RequisitionLine.M_Requisitionline_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="mRequisitionlineId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE M_RequisitionOrder
        SET M_Requisitionorder_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , M_Requisitionline_ID = (?) , IsActive = (?) , C_OrderLine_ID = (?) , Qty = TO_NUMBER(?) , updated = now(), updatedby = ? 
        WHERE M_RequisitionOrder.M_Requisitionorder_ID = ? 
                 AND M_RequisitionOrder.M_Requisitionline_ID = ? 
        AND M_RequisitionOrder.AD_Client_ID IN ('1') 
        AND M_RequisitionOrder.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="mRequisitionorderId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="mRequisitionlineId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cOrderlineId"></Parameter> <Parameter name="qty"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mRequisitionorderId"></Parameter>
    
    <Parameter name="mRequisitionlineId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_RequisitionOrder.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_RequisitionOrder.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO M_RequisitionOrder 
        (M_Requisitionorder_ID, AD_Client_ID, AD_Org_ID, M_Requisitionline_ID, IsActive, C_OrderLine_ID, Qty, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), TO_NUMBER(?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="mRequisitionorderId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="mRequisitionlineId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cOrderlineId"></Parameter> <Parameter name="qty"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_RequisitionOrder
        WHERE M_RequisitionOrder.M_Requisitionorder_ID = ? 
                 AND M_RequisitionOrder.M_Requisitionline_ID = ? 
        AND M_RequisitionOrder.AD_Client_ID IN ('1') 
        AND M_RequisitionOrder.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mRequisitionlineId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_RequisitionOrder.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_RequisitionOrder.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_RequisitionOrder
        WHERE M_RequisitionOrder.M_Requisitionorder_ID = ? 
                 AND M_RequisitionOrder.M_Requisitionline_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mRequisitionlineId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM M_RequisitionOrder
         WHERE M_RequisitionOrder.M_Requisitionorder_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM M_RequisitionOrder
         WHERE M_RequisitionOrder.M_Requisitionorder_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>