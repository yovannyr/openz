<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="HeaderData" package="org.openbravo.erpWindows.Requisition">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(M_Requisition.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_Requisition.CreatedBy) as CreatedByR, 
        to_char(M_Requisition.Updated, ?) as updated, 
        to_char(M_Requisition.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        M_Requisition.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_Requisition.UpdatedBy) as UpdatedByR,
        M_Requisition.AD_Client_ID, 
(CASE WHEN M_Requisition.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
M_Requisition.AD_Org_ID, 
(CASE WHEN M_Requisition.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
M_Requisition.DocumentNo, 
COALESCE(M_Requisition.IsActive, 'N') AS IsActive, 
M_Requisition.C_BPartner_ID, 
(CASE WHEN M_Requisition.C_BPartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS C_BPartner_IDR, 
M_Requisition.M_PriceList_ID, 
(CASE WHEN M_Requisition.M_PriceList_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS M_PriceList_IDR, 
M_Requisition.Description, 
M_Requisition.AD_User_ID, 
(CASE WHEN M_Requisition.AD_User_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Name), ''))),'') ) END) AS AD_User_IDR, 
M_Requisition.A_Asset_ID, 
(CASE WHEN M_Requisition.A_Asset_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Name), ''))),'') ) END) AS A_Asset_IDR, 
M_Requisition.C_Project_ID, 
(CASE WHEN M_Requisition.C_Project_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Name), ''))),'') ) END) AS C_Project_IDR, 
M_Requisition.C_Projecttask_ID, 
(CASE WHEN M_Requisition.C_Projecttask_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Name), ''))),'') ) END) AS C_Projecttask_IDR, 
M_Requisition.DocStatus, 
(CASE WHEN M_Requisition.DocStatus IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS DocStatusR, 
M_Requisition.Totallines, 
M_Requisition.DocAction, 
list2.name as DocAction_BTN, 
M_Requisition.Createpo, 
COALESCE(M_Requisition.Processing, 'N') AS Processing, 
COALESCE(M_Requisition.Allowdirectpo, 'N') AS Allowdirectpo, 
M_Requisition.M_Requisition_ID, 
COALESCE(M_Requisition.Processed, 'N') AS Processed, 
M_Requisition.C_Projectphase_ID, 
M_Requisition.C_Currency_ID, 
 
        ? AS LANGUAGE 
        FROM M_Requisition left join (select AD_Client_ID, Name from AD_Client) table1 on (M_Requisition.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (M_Requisition.AD_Org_ID = table2.AD_Org_ID) left join (select C_BPartner_ID, Name from C_BPartner) table3 on (M_Requisition.C_BPartner_ID = table3.C_BPartner_ID) left join (select M_PriceList_ID, Name from M_PriceList) table4 on (M_Requisition.M_PriceList_ID = table4.M_PriceList_ID) left join (select AD_User_ID, Name from AD_User) table5 on (M_Requisition.AD_User_ID =  table5.AD_User_ID) left join (select A_Asset_ID, Name from A_Asset) table6 on (M_Requisition.A_Asset_ID = table6.A_Asset_ID) left join (select C_Project_ID, Value, Name from C_Project) table7 on (M_Requisition.C_Project_ID = table7.C_Project_ID) left join (select C_Projecttask_ID, Name, C_Project_ID from C_Projecttask) table8 on (M_Requisition.C_Projecttask_ID = table8.C_Projecttask_ID) left join (select C_Project_ID, Value, Name from C_Project) table9 on (table8.C_Project_ID = table9.C_Project_ID) left join ad_ref_list_v list1 on (M_Requisition.DocStatus = list1.value and list1.ad_reference_id = '131' and list1.ad_language = ?)  left join ad_ref_list_v list2 on (list2.ad_reference_id = '135' and list2.ad_language = ?  AND (CASE M_Requisition.DocAction WHEN '--' THEN 'CL' ELSE TO_CHAR(M_Requisition.DocAction) END) = list2.value)
        WHERE 2=2 

        AND 1=1 
        AND M_Requisition.M_Requisition_ID = ? 
        AND M_Requisition.AD_Client_ID IN ('1') 
           AND M_Requisition.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_Requisition.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_Requisition.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="isactive"></Parameter><Parameter name="processed"></Parameter><Parameter name="docaction"></Parameter><Parameter name="docactionBtn"></Parameter><Parameter name="aAssetId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="mPricelistId"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="docstatus"></Parameter><Parameter name="totallines"></Parameter><Parameter name="documentno"></Parameter><Parameter name="mRequisitionId"></Parameter><Parameter name="cProjecttaskId"></Parameter><Parameter name="cCurrencyId"></Parameter><Parameter name="createpo"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="allowdirectpo"></Parameter><Parameter name="description"></Parameter><Parameter name="cProjectId"></Parameter><Parameter name="cProjectIdr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="processing"></Parameter><Parameter name="cProjectphaseId"></Parameter><Parameter name="adUserId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef803540" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        select m_pricelist_id from m_pricelist where issopricelist='N' and isdefault='Y' and ad_org_id=? 
    ]]></Sql>

<Parameter name="ad_org_id"/>
  </SqlMethod>

   <SqlMethod name="selectDef803539_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as C_BPartner_ID FROM C_BPartner table1 WHERE table1.isActive='Y' AND table1.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_BPartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef803534_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef57FB487DAC4C4E209F648AB9C583191D_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as C_Project_ID FROM C_Project table1 WHERE table1.isActive='Y' AND table1.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="C_Project_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef803536_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>





  <SqlMethod name="updateDocAction" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        UPDATE M_Requisition
        SET docaction = ? 
        WHERE M_Requisition.M_Requisition_ID = ?
    ]]></Sql>
    <Parameter name="docaction"></Parameter>
    <Parameter id="paramKey" name="mRequisitionId"></Parameter>
  </SqlMethod>






  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE M_Requisition
        SET AD_Client_ID = (?) , AD_Org_ID = (?) , DocumentNo = (?) , IsActive = (?) , C_BPartner_ID = (?) , M_PriceList_ID = (?) , Description = (?) , AD_User_ID = (?) , A_Asset_ID = (?) , C_Project_ID = (?) , C_Projecttask_ID = (?) , DocStatus = (?) , Totallines = TO_NUMBER(?) , DocAction = (?) , Createpo = (?) , Processing = (?) , Allowdirectpo = (?) , M_Requisition_ID = (?) , Processed = (?) , C_Projectphase_ID = (?) , C_Currency_ID = (?) , updated = now(), updatedby = ? 
        WHERE M_Requisition.M_Requisition_ID = ? 
        
        AND M_Requisition.AD_Client_ID IN ('1') 
        AND M_Requisition.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="documentno"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="adUserId"></Parameter> <Parameter name="aAssetId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="cProjecttaskId"></Parameter> <Parameter name="docstatus"></Parameter> <Parameter name="totallines"></Parameter> <Parameter name="docaction"></Parameter> <Parameter name="createpo"></Parameter> <Parameter name="processing"></Parameter> <Parameter name="allowdirectpo"></Parameter> <Parameter name="mRequisitionId"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="cProjectphaseId"></Parameter> <Parameter name="cCurrencyId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mRequisitionId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="M_Requisition.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_Requisition.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO M_Requisition 
        (AD_Client_ID, AD_Org_ID, DocumentNo, IsActive, C_BPartner_ID, M_PriceList_ID, Description, AD_User_ID, A_Asset_ID, C_Project_ID, C_Projecttask_ID, DocStatus, Totallines, DocAction, Createpo, Processing, Allowdirectpo, M_Requisition_ID, Processed, C_Projectphase_ID, C_Currency_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="documentno"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="adUserId"></Parameter> <Parameter name="aAssetId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="cProjecttaskId"></Parameter> <Parameter name="docstatus"></Parameter> <Parameter name="totallines"></Parameter> <Parameter name="docaction"></Parameter> <Parameter name="createpo"></Parameter> <Parameter name="processing"></Parameter> <Parameter name="allowdirectpo"></Parameter> <Parameter name="mRequisitionId"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="cProjectphaseId"></Parameter> <Parameter name="cCurrencyId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_Requisition
        WHERE M_Requisition.M_Requisition_ID = ? 
        
        AND M_Requisition.AD_Client_ID IN ('1') 
        AND M_Requisition.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="M_Requisition.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_Requisition.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_Requisition
        WHERE M_Requisition.M_Requisition_ID = ? 
        
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM M_Requisition
         WHERE M_Requisition.M_Requisition_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM M_Requisition
         WHERE M_Requisition.M_Requisition_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>