<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="AccountingData" package="org.openbravo.erpWindows.Cashbook">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_CashBook_Acct.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_CashBook_Acct.CreatedBy) as CreatedByR, 
        to_char(C_CashBook_Acct.Updated, ?) as updated, 
        to_char(C_CashBook_Acct.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_CashBook_Acct.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_CashBook_Acct.UpdatedBy) as UpdatedByR,
        C_CashBook_Acct.C_CashBook_Acct_ID, 
C_CashBook_Acct.AD_Client_ID, 
(CASE WHEN C_CashBook_Acct.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_CashBook_Acct.AD_Org_ID, 
(CASE WHEN C_CashBook_Acct.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_CashBook_Acct.C_CashBook_ID, 
(CASE WHEN C_CashBook_Acct.C_CashBook_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS C_CashBook_IDR, 
C_CashBook_Acct.C_AcctSchema_ID, 
(CASE WHEN C_CashBook_Acct.C_AcctSchema_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS C_AcctSchema_IDR, 
COALESCE(C_CashBook_Acct.IsActive, 'N') AS IsActive, 
C_CashBook_Acct.CB_Asset_Acct, 
(CASE WHEN C_CashBook_Acct.CB_Asset_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Combination), ''))),'') ) END) AS CB_Asset_AcctR, 
C_CashBook_Acct.CB_Differences_Acct, 
(CASE WHEN C_CashBook_Acct.CB_Differences_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Combination), ''))),'') ) END) AS CB_Differences_AcctR, 
C_CashBook_Acct.CB_CashTransfer_Acct, 
(CASE WHEN C_CashBook_Acct.CB_CashTransfer_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Combination), ''))),'') ) END) AS CB_CashTransfer_AcctR, 
C_CashBook_Acct.CB_Expense_Acct, 
(CASE WHEN C_CashBook_Acct.CB_Expense_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Combination), ''))),'') ) END) AS CB_Expense_AcctR, 
C_CashBook_Acct.CB_Receipt_Acct, 
(CASE WHEN C_CashBook_Acct.CB_Receipt_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Combination), ''))),'') ) END) AS CB_Receipt_AcctR, 
 
        ? AS LANGUAGE 
        FROM C_CashBook_Acct left join (select AD_Client_ID, Name from AD_Client) table1 on (C_CashBook_Acct.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_CashBook_Acct.AD_Org_ID = table2.AD_Org_ID) left join (select C_CashBook_ID, Name from C_CashBook) table3 on (C_CashBook_Acct.C_CashBook_ID = table3.C_CashBook_ID) left join (select C_AcctSchema_ID, Name from C_AcctSchema) table4 on (C_CashBook_Acct.C_AcctSchema_ID = table4.C_AcctSchema_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table5 on (C_CashBook_Acct.CB_Asset_Acct = table5.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table6 on (C_CashBook_Acct.CB_Differences_Acct = table6.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table7 on (C_CashBook_Acct.CB_CashTransfer_Acct = table7.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table8 on (C_CashBook_Acct.CB_Expense_Acct = table8.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table9 on (C_CashBook_Acct.CB_Receipt_Acct = table9.C_ValidCombination_ID)
        WHERE 2=2 

        AND 1=1 
        AND C_CashBook_Acct.C_CashBook_Acct_ID = ? 
        AND C_CashBook_Acct.AD_Client_ID IN ('1') 
           AND C_CashBook_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>

    <Parameter name="cCashbookId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_CashBook_Acct.C_CashBook_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_CashBook_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_CashBook_Acct.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cCashbookId" id="paramKeyParent"></Parameter>
<Parameter name="cbDifferencesAcct"></Parameter><Parameter name="cbDifferencesAcctr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="cbReceiptAcct"></Parameter><Parameter name="cbReceiptAcctr"></Parameter><Parameter name="cbExpenseAcct"></Parameter><Parameter name="cbExpenseAcctr"></Parameter><Parameter name="cbAssetAcct"></Parameter><Parameter name="cbAssetAcctr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="cbCashtransferAcct"></Parameter><Parameter name="cbCashtransferAcctr"></Parameter><Parameter name="cAcctschemaId"></Parameter><Parameter name="cCashbookAcctId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef5280_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as CB_Differences_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="CB_Differences_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5282_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as CB_Receipt_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="CB_Receipt_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5281_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as CB_Expense_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="CB_Expense_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5279_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as CB_Asset_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="CB_Asset_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5276_4" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef6496_5" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as CB_CashTransfer_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="CB_CashTransfer_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5278_6" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_CashBook_Acct.C_CashBook_ID AS NAME
        FROM C_CashBook_Acct
        WHERE C_CashBook_Acct.C_CashBook_Acct_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_CashBook left join (select C_CashBook_ID, Name from C_CashBook) table1 on (C_CashBook.C_CashBook_ID = table1.C_CashBook_ID) WHERE C_CashBook.C_CashBook_ID = ?  
    ]]></Sql>
<Parameter name="cCashbookId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_CashBook left join (select C_CashBook_ID, Name from C_CashBook) table1 on (C_CashBook.C_CashBook_ID = table1.C_CashBook_ID) WHERE C_CashBook.C_CashBook_ID = ?  
    ]]></Sql>
<Parameter name="cCashbookId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_CashBook_Acct
        SET C_CashBook_Acct_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , C_CashBook_ID = (?) , C_AcctSchema_ID = (?) , IsActive = (?) , CB_Asset_Acct = (?) , CB_Differences_Acct = (?) , CB_CashTransfer_Acct = (?) , CB_Expense_Acct = (?) , CB_Receipt_Acct = (?) , updated = now(), updatedby = ? 
        WHERE C_CashBook_Acct.C_CashBook_Acct_ID = ? 
                 AND C_CashBook_Acct.C_CashBook_ID = ? 
        AND C_CashBook_Acct.AD_Client_ID IN ('1') 
        AND C_CashBook_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cCashbookAcctId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cCashbookId"></Parameter> <Parameter name="cAcctschemaId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cbAssetAcct"></Parameter> <Parameter name="cbDifferencesAcct"></Parameter> <Parameter name="cbCashtransferAcct"></Parameter> <Parameter name="cbExpenseAcct"></Parameter> <Parameter name="cbReceiptAcct"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cCashbookAcctId"></Parameter>
    
    <Parameter name="cCashbookId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_CashBook_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_CashBook_Acct.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_CashBook_Acct 
        (C_CashBook_Acct_ID, AD_Client_ID, AD_Org_ID, C_CashBook_ID, C_AcctSchema_ID, IsActive, CB_Asset_Acct, CB_Differences_Acct, CB_CashTransfer_Acct, CB_Expense_Acct, CB_Receipt_Acct, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cCashbookAcctId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cCashbookId"></Parameter> <Parameter name="cAcctschemaId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cbAssetAcct"></Parameter> <Parameter name="cbDifferencesAcct"></Parameter> <Parameter name="cbCashtransferAcct"></Parameter> <Parameter name="cbExpenseAcct"></Parameter> <Parameter name="cbReceiptAcct"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_CashBook_Acct
        WHERE C_CashBook_Acct.C_CashBook_Acct_ID = ? 
                 AND C_CashBook_Acct.C_CashBook_ID = ? 
        AND C_CashBook_Acct.AD_Client_ID IN ('1') 
        AND C_CashBook_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cCashbookId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_CashBook_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_CashBook_Acct.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_CashBook_Acct
        WHERE C_CashBook_Acct.C_CashBook_Acct_ID = ? 
                 AND C_CashBook_Acct.C_CashBook_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cCashbookId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_CashBook_Acct
         WHERE C_CashBook_Acct.C_CashBook_Acct_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_CashBook_Acct
         WHERE C_CashBook_Acct.C_CashBook_Acct_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>