<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="AccountingData" package="org.openbravo.erpWindows.TaxRate">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_Tax_Acct.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_Tax_Acct.CreatedBy) as CreatedByR, 
        to_char(C_Tax_Acct.Updated, ?) as updated, 
        to_char(C_Tax_Acct.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_Tax_Acct.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_Tax_Acct.UpdatedBy) as UpdatedByR,
        C_Tax_Acct.AD_Client_ID, 
(CASE WHEN C_Tax_Acct.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_Tax_Acct.AD_Org_ID, 
(CASE WHEN C_Tax_Acct.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_Tax_Acct.C_Tax_ID, 
(CASE WHEN C_Tax_Acct.C_Tax_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS C_Tax_IDR, 
C_Tax_Acct.C_AcctSchema_ID, 
(CASE WHEN C_Tax_Acct.C_AcctSchema_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS C_AcctSchema_IDR, 
COALESCE(C_Tax_Acct.IsActive, 'N') AS IsActive, 
C_Tax_Acct.T_Due_Acct, 
(CASE WHEN C_Tax_Acct.T_Due_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Combination), ''))),'') ) END) AS T_Due_AcctR, 
C_Tax_Acct.T_Liability_Acct, 
C_Tax_Acct.T_Credit_Acct, 
(CASE WHEN C_Tax_Acct.T_Credit_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Combination), ''))),'') ) END) AS T_Credit_AcctR, 
C_Tax_Acct.T_Receivables_Acct, 
C_Tax_Acct.T_Expense_Acct, 
C_Tax_Acct.T_P_Expense_Acct, 
(CASE WHEN C_Tax_Acct.T_P_Expense_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Combination), ''))),'') ) END) AS T_P_Expense_AcctR, 
C_Tax_Acct.T_P_Revenue_Acct, 
(CASE WHEN C_Tax_Acct.T_P_Revenue_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Combination), ''))),'') ) END) AS T_P_Revenue_AcctR, 
C_Tax_Acct.T_Ar_Discount_Acct, 
(CASE WHEN C_Tax_Acct.T_Ar_Discount_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Combination), ''))),'') ) END) AS T_Ar_Discount_AcctR, 
C_Tax_Acct.T_Ap_Discount_Acct, 
(CASE WHEN C_Tax_Acct.T_Ap_Discount_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table10.Combination), ''))),'') ) END) AS T_Ap_Discount_AcctR, 
C_Tax_Acct.T_Writeoff_Acct, 
(CASE WHEN C_Tax_Acct.T_Writeoff_Acct IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table11.Combination), ''))),'') ) END) AS T_Writeoff_AcctR, 
C_Tax_Acct.C_Tax_Acct_ID, 
 
        ? AS LANGUAGE 
        FROM C_Tax_Acct left join (select AD_Client_ID, Name from AD_Client) table1 on (C_Tax_Acct.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_Tax_Acct.AD_Org_ID = table2.AD_Org_ID) left join (select C_Tax_ID, Name from C_Tax) table3 on (C_Tax_Acct.C_Tax_ID = table3.C_Tax_ID) left join (select C_Tax_ID,AD_Language, Name from C_Tax_TRL) tableTRL3 on (table3.C_Tax_ID = tableTRL3.C_Tax_ID and tableTRL3.AD_Language = ?)  left join (select C_AcctSchema_ID, Name from C_AcctSchema) table4 on (C_Tax_Acct.C_AcctSchema_ID = table4.C_AcctSchema_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table5 on (C_Tax_Acct.T_Due_Acct = table5.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table6 on (C_Tax_Acct.T_Credit_Acct = table6.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table7 on (C_Tax_Acct.T_P_Expense_Acct = table7.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table8 on (C_Tax_Acct.T_P_Revenue_Acct = table8.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table9 on (C_Tax_Acct.T_Ar_Discount_Acct = table9.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table10 on (C_Tax_Acct.T_Ap_Discount_Acct = table10.C_ValidCombination_ID) left join (select C_ValidCombination_ID, Combination from C_ValidCombination) table11 on (C_Tax_Acct.T_Writeoff_Acct = table11.C_ValidCombination_ID)
        WHERE 2=2 

        AND 1=1 
        AND C_Tax_Acct.C_Tax_Acct_ID = ? 
        AND C_Tax_Acct.AD_Client_ID IN ('1') 
           AND C_Tax_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="cTaxId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_Tax_Acct.C_Tax_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_Tax_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_Tax_Acct.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cTaxId" id="paramKeyParent"></Parameter>
<Parameter name="tDueAcct"></Parameter><Parameter name="tDueAcctr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="tPRevenueAcct"></Parameter><Parameter name="tPRevenueAcctr"></Parameter><Parameter name="tArDiscountAcct"></Parameter><Parameter name="tArDiscountAcctr"></Parameter><Parameter name="tReceivablesAcct"></Parameter><Parameter name="tReceivablesAcctr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="tWriteoffAcct"></Parameter><Parameter name="tWriteoffAcctr"></Parameter><Parameter name="tLiabilityAcct"></Parameter><Parameter name="tLiabilityAcctr"></Parameter><Parameter name="tCreditAcct"></Parameter><Parameter name="tCreditAcctr"></Parameter><Parameter name="tExpenseAcct"></Parameter><Parameter name="tExpenseAcctr"></Parameter><Parameter name="cTaxAcctId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="cAcctschemaId"></Parameter><Parameter name="tApDiscountAcct"></Parameter><Parameter name="tApDiscountAcctr"></Parameter><Parameter name="tPExpenseAcct"></Parameter><Parameter name="tPExpenseAcctr"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef5084_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as T_Due_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="T_Due_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5081_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef8BBE9224CA5B4AEFA117E8A44A10D991_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as T_P_Revenue_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="T_P_Revenue_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDefB5899B5DB85A400097FA7DD54E00FEC9_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as T_Ar_Discount_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="T_Ar_Discount_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5087_4" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as T_Receivables_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="T_Receivables_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5083_5" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef7123AE2D2BDA4143B8AD2345AD331B73_6" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as T_Writeoff_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="T_Writeoff_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5085_7" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as T_Liability_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="T_Liability_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5086_8" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as T_Credit_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="T_Credit_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5088_9" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as T_Expense_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="T_Expense_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDefDD2AA7A0BFA7409E80D1FF166AFA6B29_10" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as T_Ap_Discount_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="T_Ap_Discount_AcctR"/>
  </SqlMethod>

   <SqlMethod name="selectDef6DB0FD99E7F14B238CA180BDD0222045_11" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Combination), '') ) as T_P_Expense_Acct FROM C_ValidCombination table1 WHERE table1.isActive='Y' AND table1.C_ValidCombination_ID = ?  
    ]]></Sql>
<Parameter name="T_P_Expense_AcctR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_Tax_Acct.C_Tax_ID AS NAME
        FROM C_Tax_Acct
        WHERE C_Tax_Acct.C_Tax_Acct_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM C_Tax left join (select C_Tax_ID, Name from C_Tax) table1 on (C_Tax.C_Tax_ID = table1.C_Tax_ID) left join (select C_Tax_ID,AD_Language, Name from C_Tax_TRL) tableTRL1 on (table1.C_Tax_ID = tableTRL1.C_Tax_ID and tableTRL1.AD_Language = ?)  WHERE C_Tax.C_Tax_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="cTaxId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM C_Tax left join (select C_Tax_ID, Name from C_Tax) table1 on (C_Tax.C_Tax_ID = table1.C_Tax_ID) left join (select C_Tax_ID,AD_Language, Name from C_Tax_TRL) tableTRL1 on (table1.C_Tax_ID = tableTRL1.C_Tax_ID and tableTRL1.AD_Language = ?)  WHERE C_Tax.C_Tax_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="cTaxId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_Tax_Acct
        SET AD_Client_ID = (?) , AD_Org_ID = (?) , C_Tax_ID = (?) , C_AcctSchema_ID = (?) , IsActive = (?) , T_Due_Acct = (?) , T_Liability_Acct = (?) , T_Credit_Acct = (?) , T_Receivables_Acct = (?) , T_Expense_Acct = (?) , T_P_Expense_Acct = (?) , T_P_Revenue_Acct = (?) , T_Ar_Discount_Acct = (?) , T_Ap_Discount_Acct = (?) , T_Writeoff_Acct = (?) , C_Tax_Acct_ID = (?) , updated = now(), updatedby = ? 
        WHERE C_Tax_Acct.C_Tax_Acct_ID = ? 
                 AND C_Tax_Acct.C_Tax_ID = ? 
        AND C_Tax_Acct.AD_Client_ID IN ('1') 
        AND C_Tax_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cTaxId"></Parameter> <Parameter name="cAcctschemaId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="tDueAcct"></Parameter> <Parameter name="tLiabilityAcct"></Parameter> <Parameter name="tCreditAcct"></Parameter> <Parameter name="tReceivablesAcct"></Parameter> <Parameter name="tExpenseAcct"></Parameter> <Parameter name="tPExpenseAcct"></Parameter> <Parameter name="tPRevenueAcct"></Parameter> <Parameter name="tArDiscountAcct"></Parameter> <Parameter name="tApDiscountAcct"></Parameter> <Parameter name="tWriteoffAcct"></Parameter> <Parameter name="cTaxAcctId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cTaxAcctId"></Parameter>
    
    <Parameter name="cTaxId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_Tax_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_Tax_Acct.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_Tax_Acct 
        (AD_Client_ID, AD_Org_ID, C_Tax_ID, C_AcctSchema_ID, IsActive, T_Due_Acct, T_Liability_Acct, T_Credit_Acct, T_Receivables_Acct, T_Expense_Acct, T_P_Expense_Acct, T_P_Revenue_Acct, T_Ar_Discount_Acct, T_Ap_Discount_Acct, T_Writeoff_Acct, C_Tax_Acct_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cTaxId"></Parameter> <Parameter name="cAcctschemaId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="tDueAcct"></Parameter> <Parameter name="tLiabilityAcct"></Parameter> <Parameter name="tCreditAcct"></Parameter> <Parameter name="tReceivablesAcct"></Parameter> <Parameter name="tExpenseAcct"></Parameter> <Parameter name="tPExpenseAcct"></Parameter> <Parameter name="tPRevenueAcct"></Parameter> <Parameter name="tArDiscountAcct"></Parameter> <Parameter name="tApDiscountAcct"></Parameter> <Parameter name="tWriteoffAcct"></Parameter> <Parameter name="cTaxAcctId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_Tax_Acct
        WHERE C_Tax_Acct.C_Tax_Acct_ID = ? 
                 AND C_Tax_Acct.C_Tax_ID = ? 
        AND C_Tax_Acct.AD_Client_ID IN ('1') 
        AND C_Tax_Acct.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cTaxId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_Tax_Acct.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_Tax_Acct.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_Tax_Acct
        WHERE C_Tax_Acct.C_Tax_Acct_ID = ? 
                 AND C_Tax_Acct.C_Tax_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cTaxId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_Tax_Acct
         WHERE C_Tax_Acct.C_Tax_Acct_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_Tax_Acct
         WHERE C_Tax_Acct.C_Tax_Acct_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>