<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="NodeData" package="org.openbravo.erpWindows.Workflow">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(AD_WF_Node.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = AD_WF_Node.CreatedBy) as CreatedByR, 
        to_char(AD_WF_Node.Updated, ?) as updated, 
        to_char(AD_WF_Node.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        AD_WF_Node.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = AD_WF_Node.UpdatedBy) as UpdatedByR,
        AD_WF_Node.AD_WF_Node_ID, 
AD_WF_Node.Yposition, 
AD_WF_Node.Xposition, 
AD_WF_Node.AD_Client_ID, 
(CASE WHEN AD_WF_Node.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
AD_WF_Node.AD_Org_ID, 
(CASE WHEN AD_WF_Node.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
AD_WF_Node.AD_Workflow_ID, 
(CASE WHEN AD_WF_Node.AD_Workflow_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS AD_Workflow_IDR, 
AD_WF_Node.Name, 
AD_WF_Node.Description, 
AD_WF_Node.Help, 
COALESCE(AD_WF_Node.IsActive, 'N') AS IsActive, 
COALESCE(AD_WF_Node.IsCentrallyMaintained, 'N') AS IsCentrallyMaintained, 
AD_WF_Node.Action, 
(CASE WHEN AD_WF_Node.Action IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS ActionR, 
AD_WF_Node.AD_Window_ID, 
(CASE WHEN AD_WF_Node.AD_Window_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL4.Name IS NULL THEN TO_CHAR(table4.Name) ELSE TO_CHAR(tableTRL4.Name) END)), ''))),'') ) END) AS AD_Window_IDR, 
AD_WF_Node.Workflow_ID, 
(CASE WHEN AD_WF_Node.Workflow_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'') ) END) AS Workflow_IDR, 
AD_WF_Node.AD_Process_ID, 
(CASE WHEN AD_WF_Node.AD_Process_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL6.Name IS NULL THEN TO_CHAR(table6.Name) ELSE TO_CHAR(tableTRL6.Name) END)), ''))),'') ) END) AS AD_Process_IDR, 
AD_WF_Node.AD_Task_ID, 
(CASE WHEN AD_WF_Node.AD_Task_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL7.Name IS NULL THEN TO_CHAR(table7.Name) ELSE TO_CHAR(tableTRL7.Name) END)), ''))),'') ) END) AS AD_Task_IDR, 
AD_WF_Node.AD_Form_ID, 
(CASE WHEN AD_WF_Node.AD_Form_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Name), ''))),'') ) END) AS AD_Form_IDR, 
 
        ? AS LANGUAGE 
        FROM AD_WF_Node left join (select AD_Client_ID, Name from AD_Client) table1 on (AD_WF_Node.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (AD_WF_Node.AD_Org_ID = table2.AD_Org_ID) left join (select AD_Workflow_ID, Name from AD_Workflow) table3 on (AD_WF_Node.AD_Workflow_ID = table3.AD_Workflow_ID) left join (select AD_Workflow_ID,AD_Language, Name from AD_Workflow_TRL) tableTRL3 on (table3.AD_Workflow_ID = tableTRL3.AD_Workflow_ID and tableTRL3.AD_Language = ?)  left join ad_ref_list_v list1 on (AD_WF_Node.Action = list1.value and list1.ad_reference_id = '104' and list1.ad_language = ?)  left join (select AD_Window_ID, Name from AD_Window) table4 on (AD_WF_Node.AD_Window_ID = table4.AD_Window_ID) left join (select AD_Window_ID,AD_Language, Name from AD_Window_TRL) tableTRL4 on (table4.AD_Window_ID = tableTRL4.AD_Window_ID and tableTRL4.AD_Language = ?)  left join (select AD_Workflow_ID, Name from AD_Workflow) table5 on (AD_WF_Node.Workflow_ID =  table5.AD_Workflow_ID) left join (select AD_Workflow_ID,AD_Language, Name from AD_Workflow_TRL) tableTRL5 on (table5.AD_Workflow_ID = tableTRL5.AD_Workflow_ID and tableTRL5.AD_Language = ?)  left join (select AD_Process_ID, Name from AD_Process) table6 on (AD_WF_Node.AD_Process_ID = table6.AD_Process_ID) left join (select AD_Process_ID,AD_Language, Name from AD_Process_TRL) tableTRL6 on (table6.AD_Process_ID = tableTRL6.AD_Process_ID and tableTRL6.AD_Language = ?)  left join (select AD_Task_ID, Name from AD_Task) table7 on (AD_WF_Node.AD_Task_ID = table7.AD_Task_ID) left join (select AD_Task_ID,AD_Language, Name from AD_Task_TRL) tableTRL7 on (table7.AD_Task_ID = tableTRL7.AD_Task_ID and tableTRL7.AD_Language = ?)  left join (select AD_Form_ID, Name from AD_Form) table8 on (AD_WF_Node.AD_Form_ID = table8.AD_Form_ID)
        WHERE 2=2 

        AND 1=1 
        AND AD_WF_Node.AD_WF_Node_ID = ? 
        AND AD_WF_Node.AD_Client_ID IN ('1') 
           AND AD_WF_Node.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="adWorkflowId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND AD_WF_Node.AD_Workflow_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_WF_Node.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_WF_Node.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="adWorkflowId" id="paramKeyParent"></Parameter>
<Parameter name="help"></Parameter><Parameter name="description"></Parameter><Parameter name="adProcessId"></Parameter><Parameter name="workflowId"></Parameter><Parameter name="action"></Parameter><Parameter name="iscentrallymaintained"></Parameter><Parameter name="xposition"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adWfNodeId"></Parameter><Parameter name="adWindowId"></Parameter><Parameter name="yposition"></Parameter><Parameter name="isactive"></Parameter><Parameter name="adFormId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="name"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="adTaskId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef685_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef683_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT AD_WF_Node.AD_Workflow_ID AS NAME
        FROM AD_WF_Node
        WHERE AD_WF_Node.AD_WF_Node_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM AD_Workflow left join (select AD_Workflow_ID, Name from AD_Workflow) table1 on (AD_Workflow.AD_Workflow_ID = table1.AD_Workflow_ID) left join (select AD_Workflow_ID,AD_Language, Name from AD_Workflow_TRL) tableTRL1 on (table1.AD_Workflow_ID = tableTRL1.AD_Workflow_ID and tableTRL1.AD_Language = ?)  WHERE AD_Workflow.AD_Workflow_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="adWorkflowId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM AD_Workflow left join (select AD_Workflow_ID, Name from AD_Workflow) table1 on (AD_Workflow.AD_Workflow_ID = table1.AD_Workflow_ID) left join (select AD_Workflow_ID,AD_Language, Name from AD_Workflow_TRL) tableTRL1 on (table1.AD_Workflow_ID = tableTRL1.AD_Workflow_ID and tableTRL1.AD_Language = ?)  WHERE AD_Workflow.AD_Workflow_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="adWorkflowId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE AD_WF_Node
        SET AD_WF_Node_ID = (?) , Yposition = TO_NUMBER(?) , Xposition = TO_NUMBER(?) , AD_Client_ID = (?) , AD_Org_ID = (?) , AD_Workflow_ID = (?) , Name = (?) , Description = (?) , Help = (?) , IsActive = (?) , IsCentrallyMaintained = (?) , Action = (?) , AD_Window_ID = (?) , Workflow_ID = (?) , AD_Process_ID = (?) , AD_Task_ID = (?) , AD_Form_ID = (?) , updated = now(), updatedby = ? 
        WHERE AD_WF_Node.AD_WF_Node_ID = ? 
                 AND AD_WF_Node.AD_Workflow_ID = ? 
        AND AD_WF_Node.AD_Client_ID IN ('1') 
        AND AD_WF_Node.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adWfNodeId"></Parameter> <Parameter name="yposition"></Parameter> <Parameter name="xposition"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adWorkflowId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> <Parameter name="help"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="iscentrallymaintained"></Parameter> <Parameter name="action"></Parameter> <Parameter name="adWindowId"></Parameter> <Parameter name="workflowId"></Parameter> <Parameter name="adProcessId"></Parameter> <Parameter name="adTaskId"></Parameter> <Parameter name="adFormId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="adWfNodeId"></Parameter>
    
    <Parameter name="adWorkflowId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_WF_Node.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_WF_Node.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO AD_WF_Node 
        (AD_WF_Node_ID, Yposition, Xposition, AD_Client_ID, AD_Org_ID, AD_Workflow_ID, Name, Description, Help, IsActive, IsCentrallyMaintained, Action, AD_Window_ID, Workflow_ID, AD_Process_ID, AD_Task_ID, AD_Form_ID, created, createdby, updated, updatedBy)
        VALUES ((?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adWfNodeId"></Parameter> <Parameter name="yposition"></Parameter> <Parameter name="xposition"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adWorkflowId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> <Parameter name="help"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="iscentrallymaintained"></Parameter> <Parameter name="action"></Parameter> <Parameter name="adWindowId"></Parameter> <Parameter name="workflowId"></Parameter> <Parameter name="adProcessId"></Parameter> <Parameter name="adTaskId"></Parameter> <Parameter name="adFormId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM AD_WF_Node
        WHERE AD_WF_Node.AD_WF_Node_ID = ? 
                 AND AD_WF_Node.AD_Workflow_ID = ? 
        AND AD_WF_Node.AD_Client_ID IN ('1') 
        AND AD_WF_Node.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adWorkflowId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="AD_WF_Node.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="AD_WF_Node.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM AD_WF_Node
        WHERE AD_WF_Node.AD_WF_Node_ID = ? 
                 AND AD_WF_Node.AD_Workflow_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="adWorkflowId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM AD_WF_Node
         WHERE AD_WF_Node.AD_WF_Node_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM AD_WF_Node
         WHERE AD_WF_Node.AD_WF_Node_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>