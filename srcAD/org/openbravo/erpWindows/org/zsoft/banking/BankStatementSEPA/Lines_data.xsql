<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="LinesData" package="org.openbravo.erpWindows.org.zsoft.banking.BankStatementSEPA">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_BankStatementLine.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_BankStatementLine.CreatedBy) as CreatedByR, 
        to_char(C_BankStatementLine.Updated, ?) as updated, 
        to_char(C_BankStatementLine.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_BankStatementLine.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_BankStatementLine.UpdatedBy) as UpdatedByR,
        C_BankStatementLine.AD_Client_ID, 
(CASE WHEN C_BankStatementLine.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_BankStatementLine.AD_Org_ID, 
(CASE WHEN C_BankStatementLine.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_BankStatementLine.C_BankStatement_ID, 
(CASE WHEN C_BankStatementLine.C_BankStatement_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS C_BankStatement_IDR, 
C_BankStatementLine.Line, 
C_BankStatementLine.Description, 
C_BankStatementLine.ValutaDate, 
C_BankStatementLine.DateAcct, 
C_BankStatementLine.C_Debt_Payment_ID, 
(CASE WHEN C_BankStatementLine.C_Debt_Payment_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(list1.name),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table4.Dateplanned, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Amount), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.IsReceipt), ''))),'') ) END) AS C_Debt_Payment_IDR, 
C_BankStatementLine.TrxAmt, 
C_BankStatementLine.Memo, 
COALESCE(C_BankStatementLine.Sepaexportenabled, 'N') AS Sepaexportenabled, 
C_BankStatementLine.Foreigncurrency, 
C_BankStatementLine.C_Dp_Management_ID, 
COALESCE(C_BankStatementLine.Isvoided, 'N') AS Isvoided, 
C_BankStatementLine.C_Charge_ID, 
C_BankStatementLine.Foreigncurrencyrate, 
COALESCE(C_BankStatementLine.IsActive, 'N') AS IsActive, 
C_BankStatementLine.C_Glitem_ID, 
C_BankStatementLine.Foreigncurrencyamt, 
C_BankStatementLine.StmtAmt, 
C_BankStatementLine.Discountamt, 
C_BankStatementLine.C_Currency_ID, 
C_BankStatementLine.ReferenceNo, 
C_BankStatementLine.Voidline, 
C_BankStatementLine.ConvertChargeAmt, 
C_BankStatementLine.C_BankStatementLine_ID, 
C_BankStatementLine.C_Debt_Payment_Create, 
C_BankStatementLine.ChargeAmt, 
 
        ? AS LANGUAGE 
        FROM C_BankStatementLine left join (select AD_Client_ID, Name from AD_Client) table1 on (C_BankStatementLine.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_BankStatementLine.AD_Org_ID = table2.AD_Org_ID) left join (select C_BankStatement_ID, Name from C_BankStatement) table3 on (C_BankStatementLine.C_BankStatement_ID = table3.C_BankStatement_ID) left join (select C_Debt_Payment_ID, C_BPartner_ID, PaymentRule, Dateplanned, Amount, IsReceipt from C_Debt_Payment) table4 on (C_BankStatementLine.C_Debt_Payment_ID = table4.C_Debt_Payment_ID) left join (select C_BPartner_ID, Name from C_BPartner) table5 on (table4.C_BPartner_ID = table5.C_BPartner_ID) left join ad_ref_list_v list1 on (table4.PaymentRule = list1.value and list1.ad_reference_id = '195' and list1.ad_language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND C_BankStatementLine.C_BankStatementLine_ID = ? 
        AND C_BankStatementLine.AD_Client_ID IN ('1') 
           AND C_BankStatementLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="cBankstatementId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_BankStatementLine.C_BankStatement_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BankStatementLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BankStatementLine.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cBankstatementId" id="paramKeyParent"></Parameter>
<Parameter name="cBankstatementlineId"></Parameter><Parameter name="trxamt"></Parameter><Parameter name="isvoided"></Parameter><Parameter name="referenceno"></Parameter><Parameter name="cCurrencyId"></Parameter><Parameter name="foreigncurrency"></Parameter><Parameter name="voidline"></Parameter><Parameter name="foreigncurrencyamt"></Parameter><Parameter name="isactive"></Parameter><Parameter name="valutadate"></Parameter><Parameter name="foreigncurrencyrate"></Parameter><Parameter name="cGlitemId"></Parameter><Parameter name="chargeamt"></Parameter><Parameter name="memo"></Parameter><Parameter name="cDpManagementId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="stmtamt"></Parameter><Parameter name="dateacct"></Parameter><Parameter name="cDebtPaymentId"></Parameter><Parameter name="cDebtPaymentIdr"></Parameter><Parameter name="cChargeId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="discountamt"></Parameter><Parameter name="description"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="sepaexportenabled"></Parameter><Parameter name="cDebtPaymentCreate"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="line"></Parameter><Parameter name="convertchargeamt"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef5217" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_CURRENCY_ID FROM C_BANKACCOUNT WHERE C_BANKACCOUNT_ID = ? 
    ]]></Sql>

<Parameter name="C_BankAccount_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef4931_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef800404_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table2.Name), '')  || ' - ' || COALESCE(TO_CHAR(table1.PaymentRule), '')  || ' - ' || COALESCE(TO_CHAR(table1.Dateplanned), '')  || ' - ' || COALESCE(TO_CHAR(table1.Amount), '')  || ' - ' || COALESCE(TO_CHAR(table1.IsReceipt), '') ) as C_Debt_Payment_ID FROM C_Debt_Payment table1 left join C_BPartner table2 on (table1.C_BPartner_ID = table2.C_BPartner_ID) WHERE table1.isActive='Y' AND table1.C_Debt_Payment_ID = ?  
    ]]></Sql>
<Parameter name="C_Debt_Payment_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4933_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5219" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM C_BankStatementLine WHERE C_BankStatement_ID=? 
    ]]></Sql>

<Parameter name="C_BankStatement_ID"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_BankStatementLine.C_BankStatement_ID AS NAME
        FROM C_BankStatementLine
        WHERE C_BankStatementLine.C_BankStatementLine_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_BankStatement left join (select C_BankStatement_ID, Name from C_BankStatement) table1 on (C_BankStatement.C_BankStatement_ID = table1.C_BankStatement_ID) WHERE C_BankStatement.C_BankStatement_ID = ?  
    ]]></Sql>
<Parameter name="cBankstatementId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_BankStatement left join (select C_BankStatement_ID, Name from C_BankStatement) table1 on (C_BankStatement.C_BankStatement_ID = table1.C_BankStatement_ID) WHERE C_BankStatement.C_BankStatement_ID = ?  
    ]]></Sql>
<Parameter name="cBankstatementId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_BankStatementLine
        SET AD_Client_ID = (?) , AD_Org_ID = (?) , C_BankStatement_ID = (?) , Line = TO_NUMBER(?) , Description = (?) , ValutaDate = TO_DATE(?) , DateAcct = TO_DATE(?) , C_Debt_Payment_ID = (?) , TrxAmt = TO_NUMBER(?) , Memo = (?) , Sepaexportenabled = (?) , Foreigncurrency = (?) , C_Dp_Management_ID = (?) , Isvoided = (?) , C_Charge_ID = (?) , Foreigncurrencyrate = TO_NUMBER(?) , IsActive = (?) , C_Glitem_ID = (?) , Foreigncurrencyamt = TO_NUMBER(?) , StmtAmt = TO_NUMBER(?) , Discountamt = TO_NUMBER(?) , C_Currency_ID = (?) , ReferenceNo = (?) , Voidline = (?) , ConvertChargeAmt = TO_NUMBER(?) , C_BankStatementLine_ID = (?) , C_Debt_Payment_Create = (?) , ChargeAmt = TO_NUMBER(?) , updated = now(), updatedby = ? 
        WHERE C_BankStatementLine.C_BankStatementLine_ID = ? 
                 AND C_BankStatementLine.C_BankStatement_ID = ? 
        AND C_BankStatementLine.AD_Client_ID IN ('1') 
        AND C_BankStatementLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cBankstatementId"></Parameter> <Parameter name="line"></Parameter> <Parameter name="description"></Parameter> <Parameter name="valutadate"></Parameter> <Parameter name="dateacct"></Parameter> <Parameter name="cDebtPaymentId"></Parameter> <Parameter name="trxamt"></Parameter> <Parameter name="memo"></Parameter> <Parameter name="sepaexportenabled"></Parameter> <Parameter name="foreigncurrency"></Parameter> <Parameter name="cDpManagementId"></Parameter> <Parameter name="isvoided"></Parameter> <Parameter name="cChargeId"></Parameter> <Parameter name="foreigncurrencyrate"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cGlitemId"></Parameter> <Parameter name="foreigncurrencyamt"></Parameter> <Parameter name="stmtamt"></Parameter> <Parameter name="discountamt"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="referenceno"></Parameter> <Parameter name="voidline"></Parameter> <Parameter name="convertchargeamt"></Parameter> <Parameter name="cBankstatementlineId"></Parameter> <Parameter name="cDebtPaymentCreate"></Parameter> <Parameter name="chargeamt"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cBankstatementlineId"></Parameter>
    
    <Parameter name="cBankstatementId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BankStatementLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BankStatementLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_BankStatementLine 
        (AD_Client_ID, AD_Org_ID, C_BankStatement_ID, Line, Description, ValutaDate, DateAcct, C_Debt_Payment_ID, TrxAmt, Memo, Sepaexportenabled, Foreigncurrency, C_Dp_Management_ID, Isvoided, C_Charge_ID, Foreigncurrencyrate, IsActive, C_Glitem_ID, Foreigncurrencyamt, StmtAmt, Discountamt, C_Currency_ID, ReferenceNo, Voidline, ConvertChargeAmt, C_BankStatementLine_ID, C_Debt_Payment_Create, ChargeAmt, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), TO_NUMBER(?), (?), TO_DATE(?), TO_DATE(?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), TO_NUMBER(?), (?), (?), TO_NUMBER(?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cBankstatementId"></Parameter> <Parameter name="line"></Parameter> <Parameter name="description"></Parameter> <Parameter name="valutadate"></Parameter> <Parameter name="dateacct"></Parameter> <Parameter name="cDebtPaymentId"></Parameter> <Parameter name="trxamt"></Parameter> <Parameter name="memo"></Parameter> <Parameter name="sepaexportenabled"></Parameter> <Parameter name="foreigncurrency"></Parameter> <Parameter name="cDpManagementId"></Parameter> <Parameter name="isvoided"></Parameter> <Parameter name="cChargeId"></Parameter> <Parameter name="foreigncurrencyrate"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cGlitemId"></Parameter> <Parameter name="foreigncurrencyamt"></Parameter> <Parameter name="stmtamt"></Parameter> <Parameter name="discountamt"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="referenceno"></Parameter> <Parameter name="voidline"></Parameter> <Parameter name="convertchargeamt"></Parameter> <Parameter name="cBankstatementlineId"></Parameter> <Parameter name="cDebtPaymentCreate"></Parameter> <Parameter name="chargeamt"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_BankStatementLine
        WHERE C_BankStatementLine.C_BankStatementLine_ID = ? 
                 AND C_BankStatementLine.C_BankStatement_ID = ? 
        AND C_BankStatementLine.AD_Client_ID IN ('1') 
        AND C_BankStatementLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBankstatementId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BankStatementLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BankStatementLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_BankStatementLine
        WHERE C_BankStatementLine.C_BankStatementLine_ID = ? 
                 AND C_BankStatementLine.C_BankStatement_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBankstatementId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_BankStatementLine
         WHERE C_BankStatementLine.C_BankStatementLine_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_BankStatementLine
         WHERE C_BankStatementLine.C_BankStatementLine_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>