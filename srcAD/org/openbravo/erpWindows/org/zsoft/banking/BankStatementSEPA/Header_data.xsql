<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="HeaderData" package="org.openbravo.erpWindows.org.zsoft.banking.BankStatementSEPA">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_BankStatement.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_BankStatement.CreatedBy) as CreatedByR, 
        to_char(C_BankStatement.Updated, ?) as updated, 
        to_char(C_BankStatement.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_BankStatement.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_BankStatement.UpdatedBy) as UpdatedByR,
        C_BankStatement.AD_Client_ID, 
(CASE WHEN C_BankStatement.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_BankStatement.AD_Org_ID, 
(CASE WHEN C_BankStatement.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_BankStatement.C_BankAccount_ID, 
(CASE WHEN C_BankStatement.C_BankAccount_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.DisplayedAccount), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.ISO_Code), ''))),'') ) END) AS C_BankAccount_IDR, 
C_BankStatement.SepaPainType, 
(CASE WHEN C_BankStatement.SepaPainType IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS SepaPainTypeR, 
C_BankStatement.Name, 
C_BankStatement.Sepabankdate, 
C_BankStatement.CreateFrom, 
C_BankStatement.EndingBalance, 
C_BankStatement.StatementDate, 
C_BankStatement.SepaExport, 
C_BankStatement.Processed, 
list2.name as Processed_BTN, 
C_BankStatement.SepaCollectSetProcessed, 
C_BankStatement.Posted, 
list3.name as Posted_BTN, 
C_BankStatement.SepaCollectSetReversed, 
C_BankStatement.SepaReqCollDate, 
COALESCE(C_BankStatement.Processing, 'N') AS Processing, 
COALESCE(C_BankStatement.IsActive, 'N') AS IsActive, 
COALESCE(C_BankStatement.IsManual, 'N') AS IsManual, 
C_BankStatement.Docstatus, 
COALESCE(C_BankStatement.SepaCollectionIsCreated, 'N') AS SepaCollectionIsCreated, 
C_BankStatement.BeginningBalance, 
C_BankStatement.Description, 
C_BankStatement.StatementDifference, 
C_BankStatement.C_BankStatement_ID, 
 
        ? AS LANGUAGE 
        FROM C_BankStatement left join (select AD_Client_ID, Name from AD_Client) table1 on (C_BankStatement.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_BankStatement.AD_Org_ID = table2.AD_Org_ID) left join (select C_BankAccount_ID, DisplayedAccount, C_Currency_ID from C_BankAccount) table3 on (C_BankStatement.C_BankAccount_ID = table3.C_BankAccount_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table4 on (table3.C_Currency_ID = table4.C_Currency_ID) left join ad_ref_list_v list1 on (C_BankStatement.SepaPainType = list1.value and list1.ad_reference_id = '882DF06516274574954CC06A08317B13' and list1.ad_language = ?)  left join ad_ref_list_v list2 on (list2.ad_reference_id = '800024' and list2.ad_language = ?  AND C_BankStatement.Processed = TO_CHAR(list2.value)) left join ad_ref_list_v list3 on (list3.ad_reference_id = '234' and list3.ad_language = ?  AND C_BankStatement.Posted = TO_CHAR(list3.value))
        WHERE 2=2 
 AND SepaPainType IS NOT NULL
        AND 1=1 
        AND C_BankStatement.C_BankStatement_ID = ? 
        AND C_BankStatement.AD_Client_ID IN ('1') 
           AND C_BankStatement.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BankStatement.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BankStatement.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="posted"></Parameter><Parameter name="postedBtn"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="processed"></Parameter><Parameter name="processedBtn"></Parameter><Parameter name="endingbalance"></Parameter><Parameter name="cBankaccountId"></Parameter><Parameter name="statementdifference"></Parameter><Parameter name="sepacollectsetreversed"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="ismanual"></Parameter><Parameter name="sepacollectioniscreated"></Parameter><Parameter name="description"></Parameter><Parameter name="separeqcolldate"></Parameter><Parameter name="createfrom"></Parameter><Parameter name="beginningbalance"></Parameter><Parameter name="sepacollectsetprocessed"></Parameter><Parameter name="docstatus"></Parameter><Parameter name="statementdate"></Parameter><Parameter name="isactive"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="processing"></Parameter><Parameter name="sepaexport"></Parameter><Parameter name="name"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="cBankstatementId"></Parameter><Parameter name="sepapaintype"></Parameter><Parameter name="sepabankdate"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef4916_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5214" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        select to_char(now(),'YYYY-MM-DD')||'-'||count(*)+1 as retval from c_bankstatement where statementdate=trunc(now()); 
    ]]></Sql>

  </SqlMethod>

   <SqlMethod name="selectDef4914_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_BankStatement
        SET AD_Client_ID = (?) , AD_Org_ID = (?) , C_BankAccount_ID = (?) , SepaPainType = (?) , Name = (?) , Sepabankdate = TO_DATE(?) , CreateFrom = (?) , EndingBalance = TO_NUMBER(?) , StatementDate = TO_DATE(?) , SepaExport = (?) , Processed = (?) , SepaCollectSetProcessed = (?) , Posted = (?) , SepaCollectSetReversed = (?) , SepaReqCollDate = TO_DATE(?) , Processing = (?) , IsActive = (?) , IsManual = (?) , Docstatus = (?) , SepaCollectionIsCreated = (?) , BeginningBalance = TO_NUMBER(?) , Description = (?) , StatementDifference = TO_NUMBER(?) , C_BankStatement_ID = (?) , updated = now(), updatedby = ? 
        WHERE C_BankStatement.C_BankStatement_ID = ? 
        
        AND C_BankStatement.AD_Client_ID IN ('1') 
        AND C_BankStatement.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cBankaccountId"></Parameter> <Parameter name="sepapaintype"></Parameter> <Parameter name="name"></Parameter> <Parameter name="sepabankdate"></Parameter> <Parameter name="createfrom"></Parameter> <Parameter name="endingbalance"></Parameter> <Parameter name="statementdate"></Parameter> <Parameter name="sepaexport"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="sepacollectsetprocessed"></Parameter> <Parameter name="posted"></Parameter> <Parameter name="sepacollectsetreversed"></Parameter> <Parameter name="separeqcolldate"></Parameter> <Parameter name="processing"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="ismanual"></Parameter> <Parameter name="docstatus"></Parameter> <Parameter name="sepacollectioniscreated"></Parameter> <Parameter name="beginningbalance"></Parameter> <Parameter name="description"></Parameter> <Parameter name="statementdifference"></Parameter> <Parameter name="cBankstatementId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cBankstatementId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BankStatement.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BankStatement.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_BankStatement 
        (AD_Client_ID, AD_Org_ID, C_BankAccount_ID, SepaPainType, Name, Sepabankdate, CreateFrom, EndingBalance, StatementDate, SepaExport, Processed, SepaCollectSetProcessed, Posted, SepaCollectSetReversed, SepaReqCollDate, Processing, IsActive, IsManual, Docstatus, SepaCollectionIsCreated, BeginningBalance, Description, StatementDifference, C_BankStatement_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), TO_DATE(?), (?), TO_NUMBER(?), TO_DATE(?), (?), (?), (?), (?), (?), TO_DATE(?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), TO_NUMBER(?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cBankaccountId"></Parameter> <Parameter name="sepapaintype"></Parameter> <Parameter name="name"></Parameter> <Parameter name="sepabankdate"></Parameter> <Parameter name="createfrom"></Parameter> <Parameter name="endingbalance"></Parameter> <Parameter name="statementdate"></Parameter> <Parameter name="sepaexport"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="sepacollectsetprocessed"></Parameter> <Parameter name="posted"></Parameter> <Parameter name="sepacollectsetreversed"></Parameter> <Parameter name="separeqcolldate"></Parameter> <Parameter name="processing"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="ismanual"></Parameter> <Parameter name="docstatus"></Parameter> <Parameter name="sepacollectioniscreated"></Parameter> <Parameter name="beginningbalance"></Parameter> <Parameter name="description"></Parameter> <Parameter name="statementdifference"></Parameter> <Parameter name="cBankstatementId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_BankStatement
        WHERE C_BankStatement.C_BankStatement_ID = ? 
        
        AND C_BankStatement.AD_Client_ID IN ('1') 
        AND C_BankStatement.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BankStatement.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BankStatement.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_BankStatement
        WHERE C_BankStatement.C_BankStatement_ID = ? 
        
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_BankStatement
         WHERE C_BankStatement.C_BankStatement_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_BankStatement
         WHERE C_BankStatement.C_BankStatement_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>