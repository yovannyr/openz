<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="InvoiceOverwiewE9F25C823CA141169A9D6E668D263406Data" package="org.openbravo.erpWindows.org.openbravo.zsoft.project.Projects">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(c_project_invoice_overview.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = c_project_invoice_overview.CreatedBy) as CreatedByR, 
        to_char(c_project_invoice_overview.Updated, ?) as updated, 
        to_char(c_project_invoice_overview.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        c_project_invoice_overview.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = c_project_invoice_overview.UpdatedBy) as UpdatedByR,
        c_project_invoice_overview.C_Project_ID, 
(CASE WHEN c_project_invoice_overview.C_Project_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS C_Project_IDR, 
c_project_invoice_overview.Salestotallines, 
c_project_invoice_overview.Purchasetotallines, 
COALESCE(c_project_invoice_overview.Ispaid, 'N') AS Ispaid, 
c_project_invoice_overview.Salestotalpaid, 
c_project_invoice_overview.Purchasetotalpaid, 
c_project_invoice_overview.Documentnote, 
c_project_invoice_overview.C_Invoice_ID, 
(CASE WHEN c_project_invoice_overview.C_Invoice_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table2.DateInvoiced, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.GrandTotal), ''))),'') ) END) AS C_Invoice_IDR, 
c_project_invoice_overview.Zsfi_Macctline_ID, 
(CASE WHEN c_project_invoice_overview.Zsfi_Macctline_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Description), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Line), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Amt), ''))),'') ) END) AS Zsfi_Macctline_IDR, 
c_project_invoice_overview.C_Doctype_ID, 
(CASE WHEN c_project_invoice_overview.C_Doctype_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'') ) END) AS C_Doctype_IDR, 
c_project_invoice_overview.C_Bpartner_ID, 
(CASE WHEN c_project_invoice_overview.C_Bpartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
c_project_invoice_overview.C_Bpartner_Location_ID, 
(CASE WHEN c_project_invoice_overview.C_Bpartner_Location_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Name), ''))),'') ) END) AS C_Bpartner_Location_IDR, 
c_project_invoice_overview.Description, 
c_project_invoice_overview.M_Pricelist_ID, 
(CASE WHEN c_project_invoice_overview.M_Pricelist_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Name), ''))),'') ) END) AS M_Pricelist_IDR, 
c_project_invoice_overview.AD_Org_ID, 
(CASE WHEN c_project_invoice_overview.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Name), ''))),'') ) END) AS AD_Org_IDR, 
c_project_invoice_overview.Bpname, 
c_project_invoice_overview.AD_Client_ID, 
COALESCE(c_project_invoice_overview.Issotrx, 'N') AS Issotrx, 
c_project_invoice_overview.C_Project_Invoice_Overview_ID, 
COALESCE(c_project_invoice_overview.Isactive, 'N') AS Isactive, 
 
        ? AS LANGUAGE 
        FROM c_project_invoice_overview left join (select C_Project_ID, Value, Name from C_Project) table1 on (c_project_invoice_overview.C_Project_ID = table1.C_Project_ID) left join (select C_Invoice_ID, DocumentNo, DateInvoiced, GrandTotal from C_Invoice) table2 on (c_project_invoice_overview.C_Invoice_ID = table2.C_Invoice_ID) left join (select Zsfi_Macctline_ID, Zsfi_Manualacct_ID, Line, Amt from Zsfi_Macctline) table3 on (c_project_invoice_overview.Zsfi_Macctline_ID = table3.Zsfi_Macctline_ID) left join (select Zsfi_Manualacct_ID, Description, DocumentNo from Zsfi_Manualacct) table4 on (table3.Zsfi_Manualacct_ID = table4.Zsfi_Manualacct_ID) left join (select C_Doctype_ID, Name from C_Doctype) table5 on (c_project_invoice_overview.C_Doctype_ID = table5.C_Doctype_ID) left join (select C_DocType_ID,AD_Language, Name from C_DocType_TRL) tableTRL5 on (table5.C_DocType_ID = tableTRL5.C_DocType_ID and tableTRL5.AD_Language = ?)  left join (select C_BPartner_ID, Name from C_BPartner) table6 on (c_project_invoice_overview.C_Bpartner_ID = table6.C_BPartner_ID) left join (select C_Bpartner_Location_ID, Name from C_Bpartner_Location) table7 on (c_project_invoice_overview.C_Bpartner_Location_ID = table7.C_Bpartner_Location_ID) left join (select M_Pricelist_ID, Name from M_Pricelist) table8 on (c_project_invoice_overview.M_Pricelist_ID = table8.M_Pricelist_ID) left join (select AD_Org_ID, Name from AD_Org) table9 on (c_project_invoice_overview.AD_Org_ID = table9.AD_Org_ID)
        WHERE 2=2 

        AND 1=1 
        AND c_project_invoice_overview.C_Project_Invoice_Overview_ID = ? 
        AND c_project_invoice_overview.AD_Client_ID IN ('1') 
           AND c_project_invoice_overview.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="cProjectId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND c_project_invoice_overview.C_Project_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="c_project_invoice_overview.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="c_project_invoice_overview.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
<Parameter name="issotrx"></Parameter><Parameter name="cProjectInvoiceOverviewId"></Parameter><Parameter name="zsfiMacctlineId"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="salestotallines"></Parameter><Parameter name="documentnote"></Parameter><Parameter name="ispaid"></Parameter><Parameter name="mPricelistId"></Parameter><Parameter name="purchasetotallines"></Parameter><Parameter name="purchasetotalpaid"></Parameter><Parameter name="cInvoiceId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="description"></Parameter><Parameter name="salestotalpaid"></Parameter><Parameter name="bpname"></Parameter><Parameter name="cDoctypeId"></Parameter><Parameter name="cBpartnerLocationId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef4B6F17A5FB3949F7A37E60CFD4686908_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as C_Bpartner_ID FROM C_BPartner table1 WHERE table1.isActive='Y' AND table1.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_Bpartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef12BEF6D30CED485AB3FDAB1068B705F4_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3C8E791A01734B7488F1CBD3435E1CED_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT c_project_invoice_overview.C_Project_ID AS NAME
        FROM c_project_invoice_overview
        WHERE c_project_invoice_overview.C_Project_Invoice_Overview_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_Project left join (select C_Project_ID, Value, Name from C_Project) table1 on (C_Project.C_Project_ID = table1.C_Project_ID) WHERE C_Project.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="cProjectId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_Project left join (select C_Project_ID, Value, Name from C_Project) table1 on (C_Project.C_Project_ID = table1.C_Project_ID) WHERE C_Project.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="cProjectId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE c_project_invoice_overview
        SET C_Project_ID = (?) , Salestotallines = TO_NUMBER(?) , Purchasetotallines = TO_NUMBER(?) , Ispaid = (?) , Salestotalpaid = TO_NUMBER(?) , Purchasetotalpaid = TO_NUMBER(?) , Documentnote = (?) , C_Invoice_ID = (?) , Zsfi_Macctline_ID = (?) , C_Doctype_ID = (?) , C_Bpartner_ID = (?) , C_Bpartner_Location_ID = (?) , Description = (?) , M_Pricelist_ID = (?) , AD_Org_ID = (?) , Bpname = (?) , AD_Client_ID = (?) , Issotrx = (?) , C_Project_Invoice_Overview_ID = (?) , Isactive = (?) , updated = now(), updatedby = ? 
        WHERE c_project_invoice_overview.C_Project_Invoice_Overview_ID = ? 
                 AND c_project_invoice_overview.C_Project_ID = ? 
        AND c_project_invoice_overview.AD_Client_ID IN ('1') 
        AND c_project_invoice_overview.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cProjectId"></Parameter> <Parameter name="salestotallines"></Parameter> <Parameter name="purchasetotallines"></Parameter> <Parameter name="ispaid"></Parameter> <Parameter name="salestotalpaid"></Parameter> <Parameter name="purchasetotalpaid"></Parameter> <Parameter name="documentnote"></Parameter> <Parameter name="cInvoiceId"></Parameter> <Parameter name="zsfiMacctlineId"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="cBpartnerLocationId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="bpname"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="issotrx"></Parameter> <Parameter name="cProjectInvoiceOverviewId"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cProjectInvoiceOverviewId"></Parameter>
    
    <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="c_project_invoice_overview.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="c_project_invoice_overview.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO c_project_invoice_overview 
        (C_Project_ID, Salestotallines, Purchasetotallines, Ispaid, Salestotalpaid, Purchasetotalpaid, Documentnote, C_Invoice_ID, Zsfi_Macctline_ID, C_Doctype_ID, C_Bpartner_ID, C_Bpartner_Location_ID, Description, M_Pricelist_ID, AD_Org_ID, Bpname, AD_Client_ID, Issotrx, C_Project_Invoice_Overview_ID, Isactive, created, createdby, updated, updatedBy)
        VALUES ((?), TO_NUMBER(?), TO_NUMBER(?), (?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cProjectId"></Parameter> <Parameter name="salestotallines"></Parameter> <Parameter name="purchasetotallines"></Parameter> <Parameter name="ispaid"></Parameter> <Parameter name="salestotalpaid"></Parameter> <Parameter name="purchasetotalpaid"></Parameter> <Parameter name="documentnote"></Parameter> <Parameter name="cInvoiceId"></Parameter> <Parameter name="zsfiMacctlineId"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="cBpartnerLocationId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="bpname"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="issotrx"></Parameter> <Parameter name="cProjectInvoiceOverviewId"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM c_project_invoice_overview
        WHERE c_project_invoice_overview.C_Project_Invoice_Overview_ID = ? 
                 AND c_project_invoice_overview.C_Project_ID = ? 
        AND c_project_invoice_overview.AD_Client_ID IN ('1') 
        AND c_project_invoice_overview.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="c_project_invoice_overview.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="c_project_invoice_overview.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM c_project_invoice_overview
        WHERE c_project_invoice_overview.C_Project_Invoice_Overview_ID = ? 
                 AND c_project_invoice_overview.C_Project_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM c_project_invoice_overview
         WHERE c_project_invoice_overview.C_Project_Invoice_Overview_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM c_project_invoice_overview
         WHERE c_project_invoice_overview.C_Project_Invoice_Overview_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>