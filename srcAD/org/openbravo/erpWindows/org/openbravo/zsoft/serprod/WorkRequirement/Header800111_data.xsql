<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="Header800111Data" package="org.openbravo.erpWindows.org.openbravo.zsoft.serprod.WorkRequirement">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(MA_WorkRequirement.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = MA_WorkRequirement.CreatedBy) as CreatedByR, 
        to_char(MA_WorkRequirement.Updated, ?) as updated, 
        to_char(MA_WorkRequirement.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        MA_WorkRequirement.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = MA_WorkRequirement.UpdatedBy) as UpdatedByR,
        MA_WorkRequirement.MA_Workrequirement_ID, 
MA_WorkRequirement.AD_Client_ID, 
(CASE WHEN MA_WorkRequirement.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
MA_WorkRequirement.AD_Org_ID, 
(CASE WHEN MA_WorkRequirement.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
MA_WorkRequirement.DocumentNo, 
COALESCE(MA_WorkRequirement.IsActive, 'N') AS IsActive, 
MA_WorkRequirement.MA_Processplan_ID, 
(CASE WHEN MA_WorkRequirement.MA_Processplan_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS MA_Processplan_IDR, 
COALESCE(MA_WorkRequirement.Explodephases, 'N') AS Explodephases, 
MA_WorkRequirement.Quantity, 
MA_WorkRequirement.Name, 
MA_WorkRequirement.Conversionrate, 
MA_WorkRequirement.Secondaryqty, 
MA_WorkRequirement.Secondaryunit, 
MA_WorkRequirement.Launchdate, 
MA_WorkRequirement.StartDate, 
MA_WorkRequirement.EndDate, 
MA_WorkRequirement.Closed, 
MA_WorkRequirement.Explote, 
COALESCE(MA_WorkRequirement.Processed, 'N') AS Processed, 
 
        ? AS LANGUAGE 
        FROM MA_WorkRequirement left join (select AD_Client_ID, Name from AD_Client) table1 on (MA_WorkRequirement.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (MA_WorkRequirement.AD_Org_ID = table2.AD_Org_ID) left join (select MA_Processplan_ID, Name from MA_Processplan) table3 on (MA_WorkRequirement.MA_Processplan_ID = table3.MA_Processplan_ID)
        WHERE 2=2 

        AND 1=1 
        AND MA_WorkRequirement.MA_Workrequirement_ID = ? 
        AND MA_WorkRequirement.AD_Client_ID IN ('1') 
           AND MA_WorkRequirement.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="MA_WorkRequirement.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="MA_WorkRequirement.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="adOrgId"></Parameter><Parameter name="launchdate"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="secondaryqty"></Parameter><Parameter name="closed"></Parameter><Parameter name="name"></Parameter><Parameter name="explodephases"></Parameter><Parameter name="maWorkrequirementId"></Parameter><Parameter name="documentno"></Parameter><Parameter name="explote"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="enddate"></Parameter><Parameter name="startdate"></Parameter><Parameter name="secondaryunit"></Parameter><Parameter name="isactive"></Parameter><Parameter name="processed"></Parameter><Parameter name="maProcessplanId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="quantity"></Parameter><Parameter name="conversionrate"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef801556_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef801554_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE MA_WorkRequirement
        SET MA_Workrequirement_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , DocumentNo = (?) , IsActive = (?) , MA_Processplan_ID = (?) , Explodephases = (?) , Quantity = TO_NUMBER(?) , Name = (?) , Conversionrate = TO_NUMBER(?) , Secondaryqty = TO_NUMBER(?) , Secondaryunit = (?) , Launchdate = TO_DATE(?) , StartDate = TO_DATE(?) , EndDate = TO_DATE(?) , Closed = (?) , Explote = (?) , Processed = (?) , updated = now(), updatedby = ? 
        WHERE MA_WorkRequirement.MA_Workrequirement_ID = ? 
        
        AND MA_WorkRequirement.AD_Client_ID IN ('1') 
        AND MA_WorkRequirement.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="maWorkrequirementId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="documentno"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="maProcessplanId"></Parameter> <Parameter name="explodephases"></Parameter> <Parameter name="quantity"></Parameter> <Parameter name="name"></Parameter> <Parameter name="conversionrate"></Parameter> <Parameter name="secondaryqty"></Parameter> <Parameter name="secondaryunit"></Parameter> <Parameter name="launchdate"></Parameter> <Parameter name="startdate"></Parameter> <Parameter name="enddate"></Parameter> <Parameter name="closed"></Parameter> <Parameter name="explote"></Parameter> <Parameter name="processed"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="maWorkrequirementId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="MA_WorkRequirement.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="MA_WorkRequirement.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO MA_WorkRequirement 
        (MA_Workrequirement_ID, AD_Client_ID, AD_Org_ID, DocumentNo, IsActive, MA_Processplan_ID, Explodephases, Quantity, Name, Conversionrate, Secondaryqty, Secondaryunit, Launchdate, StartDate, EndDate, Closed, Explote, Processed, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), TO_NUMBER(?), TO_NUMBER(?), (?), TO_DATE(?), TO_DATE(?), TO_DATE(?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="maWorkrequirementId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="documentno"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="maProcessplanId"></Parameter> <Parameter name="explodephases"></Parameter> <Parameter name="quantity"></Parameter> <Parameter name="name"></Parameter> <Parameter name="conversionrate"></Parameter> <Parameter name="secondaryqty"></Parameter> <Parameter name="secondaryunit"></Parameter> <Parameter name="launchdate"></Parameter> <Parameter name="startdate"></Parameter> <Parameter name="enddate"></Parameter> <Parameter name="closed"></Parameter> <Parameter name="explote"></Parameter> <Parameter name="processed"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM MA_WorkRequirement
        WHERE MA_WorkRequirement.MA_Workrequirement_ID = ? 
        
        AND MA_WorkRequirement.AD_Client_ID IN ('1') 
        AND MA_WorkRequirement.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="MA_WorkRequirement.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="MA_WorkRequirement.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM MA_WorkRequirement
        WHERE MA_WorkRequirement.MA_Workrequirement_ID = ? 
        
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM MA_WorkRequirement
         WHERE MA_WorkRequirement.MA_Workrequirement_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM MA_WorkRequirement
         WHERE MA_WorkRequirement.MA_Workrequirement_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>