<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="ServiceItem800003Data" package="org.openbravo.erpWindows.org.openbravo.zsoft.bid.ExternalOrdersCallforBids">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_ProjectLine.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_ProjectLine.CreatedBy) as CreatedByR, 
        to_char(C_ProjectLine.Updated, ?) as updated, 
        to_char(C_ProjectLine.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_ProjectLine.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_ProjectLine.UpdatedBy) as UpdatedByR,
        C_ProjectLine.M_Product_Category_ID, 
C_ProjectLine.CommittedAmt, 
C_ProjectLine.InvoicedAmt, 
C_ProjectLine.CommittedQty, 
C_ProjectLine.C_ProjectLine_ID, 
C_ProjectLine.C_Order_ID, 
C_ProjectLine.C_OrderPO_ID, 
C_ProjectLine.C_ProjectIssue_ID, 
C_ProjectLine.DoPricing, 
COALESCE(C_ProjectLine.Processed, 'N') AS Processed, 
COALESCE(C_ProjectLine.IsPrinted, 'N') AS IsPrinted, 
C_ProjectLine.InvoicedQty, 
C_ProjectLine.AD_Client_ID, 
(CASE WHEN C_ProjectLine.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_ProjectLine.AD_Org_ID, 
(CASE WHEN C_ProjectLine.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_ProjectLine.C_Project_ID, 
(CASE WHEN C_ProjectLine.C_Project_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS C_Project_IDR, 
C_ProjectLine.Line, 
COALESCE(C_ProjectLine.IsActive, 'N') AS IsActive, 
C_ProjectLine.Description, 
C_ProjectLine.M_Product_ID, 
(CASE WHEN C_ProjectLine.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL4.Name IS NULL THEN TO_CHAR(table4.Name) ELSE TO_CHAR(tableTRL4.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
C_ProjectLine.Product_Value, 
C_ProjectLine.Product_Name, 
C_ProjectLine.Product_Description, 
C_ProjectLine.PlannedQty, 
C_ProjectLine.C_Tax_ID, 
(CASE WHEN C_ProjectLine.C_Tax_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'') ) END) AS C_Tax_IDR, 
C_ProjectLine.PlannedPrice, 
C_ProjectLine.Plannedpoprice, 
C_ProjectLine.PlannedAmt, 
C_ProjectLine.PlannedMarginAmt, 
 
        ? AS LANGUAGE 
        FROM C_ProjectLine left join (select AD_Client_ID, Name from AD_Client) table1 on (C_ProjectLine.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_ProjectLine.AD_Org_ID = table2.AD_Org_ID) left join (select C_Project_ID, Value, Name from C_Project) table3 on (C_ProjectLine.C_Project_ID = table3.C_Project_ID) left join (select M_Product_ID, Value, Name from M_Product) table4 on (C_ProjectLine.M_Product_ID = table4.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL4 on (table4.M_Product_ID = tableTRL4.M_Product_ID and tableTRL4.AD_Language = ?)  left join (select C_Tax_ID, Name from C_Tax) table5 on (C_ProjectLine.C_Tax_ID =  table5.C_Tax_ID) left join (select C_Tax_ID,AD_Language, Name from C_Tax_TRL) tableTRL5 on (table5.C_Tax_ID = tableTRL5.C_Tax_ID and tableTRL5.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND C_ProjectLine.C_ProjectLine_ID = ? 
        AND C_ProjectLine.AD_Client_ID IN ('1') 
           AND C_ProjectLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="cProjectId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_ProjectLine.C_Project_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_ProjectLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_ProjectLine.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
<Parameter name="mProductId"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="cTaxId"></Parameter><Parameter name="committedqty"></Parameter><Parameter name="description"></Parameter><Parameter name="mProductCategoryId"></Parameter><Parameter name="committedamt"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="productValue"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="plannedprice"></Parameter><Parameter name="processed"></Parameter><Parameter name="cOrderpoId"></Parameter><Parameter name="plannedpoprice"></Parameter><Parameter name="productName"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="cProjectissueId"></Parameter><Parameter name="cOrderId"></Parameter><Parameter name="productDescription"></Parameter><Parameter name="plannedqty"></Parameter><Parameter name="plannedmarginamt"></Parameter><Parameter name="isprinted"></Parameter><Parameter name="dopricing"></Parameter><Parameter name="invoicedqty"></Parameter><Parameter name="plannedamt"></Parameter><Parameter name="line"></Parameter><Parameter name="invoicedamt"></Parameter><Parameter name="cProjectlineId"></Parameter><Parameter name="adOrgId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef5775_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5763_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5765_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5767" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM C_ProjectLine WHERE C_Project_ID=? 
    ]]></Sql>

<Parameter name="C_Project_ID"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_ProjectLine.C_Project_ID AS NAME
        FROM C_ProjectLine
        WHERE C_ProjectLine.C_ProjectLine_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_Project left join (select C_Project_ID, Value, Name from C_Project) table1 on (C_Project.C_Project_ID = table1.C_Project_ID) WHERE C_Project.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="cProjectId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_Project left join (select C_Project_ID, Value, Name from C_Project) table1 on (C_Project.C_Project_ID = table1.C_Project_ID) WHERE C_Project.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="cProjectId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_ProjectLine
        SET M_Product_Category_ID = (?) , CommittedAmt = TO_NUMBER(?) , InvoicedAmt = TO_NUMBER(?) , CommittedQty = TO_NUMBER(?) , C_ProjectLine_ID = (?) , C_Order_ID = (?) , C_OrderPO_ID = (?) , C_ProjectIssue_ID = (?) , DoPricing = (?) , Processed = (?) , IsPrinted = (?) , InvoicedQty = TO_NUMBER(?) , AD_Client_ID = (?) , AD_Org_ID = (?) , C_Project_ID = (?) , Line = TO_NUMBER(?) , IsActive = (?) , Description = (?) , M_Product_ID = (?) , Product_Value = (?) , Product_Name = (?) , Product_Description = (?) , PlannedQty = TO_NUMBER(?) , C_Tax_ID = (?) , PlannedPrice = TO_NUMBER(?) , Plannedpoprice = TO_NUMBER(?) , PlannedAmt = TO_NUMBER(?) , PlannedMarginAmt = TO_NUMBER(?) , updated = now(), updatedby = ? 
        WHERE C_ProjectLine.C_ProjectLine_ID = ? 
                 AND C_ProjectLine.C_Project_ID = ? 
        AND C_ProjectLine.AD_Client_ID IN ('1') 
        AND C_ProjectLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="mProductCategoryId"></Parameter> <Parameter name="committedamt"></Parameter> <Parameter name="invoicedamt"></Parameter> <Parameter name="committedqty"></Parameter> <Parameter name="cProjectlineId"></Parameter> <Parameter name="cOrderId"></Parameter> <Parameter name="cOrderpoId"></Parameter> <Parameter name="cProjectissueId"></Parameter> <Parameter name="dopricing"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="isprinted"></Parameter> <Parameter name="invoicedqty"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="line"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="description"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="productValue"></Parameter> <Parameter name="productName"></Parameter> <Parameter name="productDescription"></Parameter> <Parameter name="plannedqty"></Parameter> <Parameter name="cTaxId"></Parameter> <Parameter name="plannedprice"></Parameter> <Parameter name="plannedpoprice"></Parameter> <Parameter name="plannedamt"></Parameter> <Parameter name="plannedmarginamt"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cProjectlineId"></Parameter>
    
    <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_ProjectLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_ProjectLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_ProjectLine 
        (M_Product_Category_ID, CommittedAmt, InvoicedAmt, CommittedQty, C_ProjectLine_ID, C_Order_ID, C_OrderPO_ID, C_ProjectIssue_ID, DoPricing, Processed, IsPrinted, InvoicedQty, AD_Client_ID, AD_Org_ID, C_Project_ID, Line, IsActive, Description, M_Product_ID, Product_Value, Product_Name, Product_Description, PlannedQty, C_Tax_ID, PlannedPrice, Plannedpoprice, PlannedAmt, PlannedMarginAmt, created, createdby, updated, updatedBy)
        VALUES ((?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="mProductCategoryId"></Parameter> <Parameter name="committedamt"></Parameter> <Parameter name="invoicedamt"></Parameter> <Parameter name="committedqty"></Parameter> <Parameter name="cProjectlineId"></Parameter> <Parameter name="cOrderId"></Parameter> <Parameter name="cOrderpoId"></Parameter> <Parameter name="cProjectissueId"></Parameter> <Parameter name="dopricing"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="isprinted"></Parameter> <Parameter name="invoicedqty"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="line"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="description"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="productValue"></Parameter> <Parameter name="productName"></Parameter> <Parameter name="productDescription"></Parameter> <Parameter name="plannedqty"></Parameter> <Parameter name="cTaxId"></Parameter> <Parameter name="plannedprice"></Parameter> <Parameter name="plannedpoprice"></Parameter> <Parameter name="plannedamt"></Parameter> <Parameter name="plannedmarginamt"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_ProjectLine
        WHERE C_ProjectLine.C_ProjectLine_ID = ? 
                 AND C_ProjectLine.C_Project_ID = ? 
        AND C_ProjectLine.AD_Client_ID IN ('1') 
        AND C_ProjectLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_ProjectLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_ProjectLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_ProjectLine
        WHERE C_ProjectLine.C_ProjectLine_ID = ? 
                 AND C_ProjectLine.C_Project_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_ProjectLine
         WHERE C_ProjectLine.C_ProjectLine_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_ProjectLine
         WHERE C_ProjectLine.C_ProjectLine_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>