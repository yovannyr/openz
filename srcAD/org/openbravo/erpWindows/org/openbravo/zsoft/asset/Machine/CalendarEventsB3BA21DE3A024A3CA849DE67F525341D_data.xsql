<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="CalendarEventsB3BA21DE3A024A3CA849DE67F525341DData" package="org.openbravo.erpWindows.org.openbravo.zsoft.asset.Machine">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(ma_machineEVENT.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = ma_machineEVENT.CreatedBy) as CreatedByR, 
        to_char(ma_machineEVENT.Updated, ?) as updated, 
        to_char(ma_machineEVENT.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        ma_machineEVENT.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = ma_machineEVENT.UpdatedBy) as UpdatedByR,
        ma_machineEVENT.MA_Machine_ID, 
(CASE WHEN ma_machineEVENT.MA_Machine_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS MA_Machine_IDR, 
ma_machineEVENT.MA_Machineevent_ID, 
ma_machineEVENT.Datefrom, 
ma_machineEVENT.Dateto, 
ma_machineEVENT.C_Calendarevent_ID, 
(CASE WHEN ma_machineEVENT.C_Calendarevent_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), ''))),'') ) END) AS C_Calendarevent_IDR, 
COALESCE(ma_machineEVENT.Reminder, 'N') AS Reminder, 
ma_machineEVENT.Worktime, 
ma_machineEVENT.Note, 
COALESCE(ma_machineEVENT.Isactive, 'N') AS Isactive, 
ma_machineEVENT.AD_Client_ID, 
ma_machineEVENT.AD_Org_ID, 
 
        ? AS LANGUAGE 
        FROM ma_machineEVENT left join (select MA_Machine_ID, Value, Name from MA_Machine) table1 on (ma_machineEVENT.MA_Machine_ID = table1.MA_Machine_ID) left join (select C_Calendarevent_ID, Name from C_CALENDAREVENT) table2 on (ma_machineEVENT.C_Calendarevent_ID =  table2.C_Calendarevent_ID) left join (select C_Calendarevent_ID,AD_Language, Name from C_CALENDAREVENT_TRL) tableTRL2 on (table2.C_Calendarevent_ID = tableTRL2.C_Calendarevent_ID and tableTRL2.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND ma_machineEVENT.MA_Machineevent_ID = ? 
        AND ma_machineEVENT.AD_Client_ID IN ('1') 
           AND ma_machineEVENT.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="maMachineId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND ma_machineEVENT.MA_Machine_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ma_machineEVENT.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ma_machineEVENT.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="maMachineId" id="paramKeyParent"></Parameter>
<Parameter name="note"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="reminder"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="worktime"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="cCalendareventId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="dateto"></Parameter><Parameter name="datefrom"></Parameter><Parameter name="isactive"></Parameter><Parameter name="maMachineeventId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDefA74C2A2DE5A1433BA2FBD3B2FAE70201_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef61E4D72A54CC4EE490833944A2971DAF_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT ma_machineEVENT.MA_Machine_ID AS NAME
        FROM ma_machineEVENT
        WHERE ma_machineEVENT.MA_Machineevent_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM MA_Machine left join (select MA_Machine_ID, Value, Name from MA_Machine) table1 on (MA_Machine.MA_Machine_ID = table1.MA_Machine_ID) WHERE MA_Machine.MA_Machine_ID = ?  
    ]]></Sql>
<Parameter name="maMachineId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM MA_Machine left join (select MA_Machine_ID, Value, Name from MA_Machine) table1 on (MA_Machine.MA_Machine_ID = table1.MA_Machine_ID) WHERE MA_Machine.MA_Machine_ID = ?  
    ]]></Sql>
<Parameter name="maMachineId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE ma_machineEVENT
        SET MA_Machine_ID = (?) , MA_Machineevent_ID = (?) , Datefrom = TO_DATE(?) , Dateto = TO_DATE(?) , C_Calendarevent_ID = (?) , Reminder = (?) , Worktime = TO_NUMBER(?) , Note = (?) , Isactive = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , updated = now(), updatedby = ? 
        WHERE ma_machineEVENT.MA_Machineevent_ID = ? 
                 AND ma_machineEVENT.MA_Machine_ID = ? 
        AND ma_machineEVENT.AD_Client_ID IN ('1') 
        AND ma_machineEVENT.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="maMachineId"></Parameter> <Parameter name="maMachineeventId"></Parameter> <Parameter name="datefrom"></Parameter> <Parameter name="dateto"></Parameter> <Parameter name="cCalendareventId"></Parameter> <Parameter name="reminder"></Parameter> <Parameter name="worktime"></Parameter> <Parameter name="note"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="maMachineeventId"></Parameter>
    
    <Parameter name="maMachineId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ma_machineEVENT.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ma_machineEVENT.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO ma_machineEVENT 
        (MA_Machine_ID, MA_Machineevent_ID, Datefrom, Dateto, C_Calendarevent_ID, Reminder, Worktime, Note, Isactive, AD_Client_ID, AD_Org_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), TO_DATE(?), TO_DATE(?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="maMachineId"></Parameter> <Parameter name="maMachineeventId"></Parameter> <Parameter name="datefrom"></Parameter> <Parameter name="dateto"></Parameter> <Parameter name="cCalendareventId"></Parameter> <Parameter name="reminder"></Parameter> <Parameter name="worktime"></Parameter> <Parameter name="note"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM ma_machineEVENT
        WHERE ma_machineEVENT.MA_Machineevent_ID = ? 
                 AND ma_machineEVENT.MA_Machine_ID = ? 
        AND ma_machineEVENT.AD_Client_ID IN ('1') 
        AND ma_machineEVENT.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="maMachineId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ma_machineEVENT.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ma_machineEVENT.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM ma_machineEVENT
        WHERE ma_machineEVENT.MA_Machineevent_ID = ? 
                 AND ma_machineEVENT.MA_Machine_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="maMachineId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM ma_machineEVENT
         WHERE ma_machineEVENT.MA_Machineevent_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM ma_machineEVENT
         WHERE ma_machineEVENT.MA_Machineevent_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>