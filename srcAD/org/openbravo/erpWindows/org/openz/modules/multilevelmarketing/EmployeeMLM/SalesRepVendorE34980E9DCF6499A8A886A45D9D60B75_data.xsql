<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="SalesRepVendorE34980E9DCF6499A8A886A45D9D60B75Data" package="org.openbravo.erpWindows.org.openz.modules.multilevelmarketing.EmployeeMLM">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_BPartner.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_BPartner.CreatedBy) as CreatedByR, 
        to_char(C_BPartner.Updated, ?) as updated, 
        to_char(C_BPartner.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_BPartner.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_BPartner.UpdatedBy) as UpdatedByR,
        C_BPartner.Value, 
C_BPartner.Name, 
COALESCE(C_BPartner.IsActive, 'N') AS IsActive, 
COALESCE(C_BPartner.IsVendor, 'N') AS IsVendor, 
C_BPartner.PaymentRulePO, 
(CASE WHEN C_BPartner.PaymentRulePO IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS PaymentRulePOR, 
C_BPartner.PO_PaymentTerm_ID, 
(CASE WHEN C_BPartner.PO_PaymentTerm_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'') ) END) AS PO_PaymentTerm_IDR, 
C_BPartner.PO_PriceList_ID, 
(CASE WHEN C_BPartner.PO_PriceList_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS PO_PriceList_IDR, 
C_BPartner.PO_Fixmonthday2, 
C_BPartner.PO_Fixmonthday3, 
C_BPartner.PO_Fixmonthday, 
COALESCE(C_BPartner.IsCreditcard, 'N') AS IsCreditcard, 
C_BPartner.C_BPartner_ID, 
C_BPartner.AD_Client_ID, 
C_BPartner.AD_Org_ID, 
 
        ? AS LANGUAGE 
        FROM C_BPartner left join ad_ref_list_v list1 on (C_BPartner.PaymentRulePO = list1.value and list1.ad_reference_id = '195' and list1.ad_language = ?)  left join (select C_PaymentTerm_ID, Name from C_PaymentTerm) table1 on (C_BPartner.PO_PaymentTerm_ID =  table1.C_PaymentTerm_ID) left join (select C_PaymentTerm_ID,AD_Language, Name from C_PaymentTerm_TRL) tableTRL1 on (table1.C_PaymentTerm_ID = tableTRL1.C_PaymentTerm_ID and tableTRL1.AD_Language = ?)  left join (select M_PriceList_ID, Name from M_PriceList) table2 on (C_BPartner.PO_PriceList_ID =  table2.M_PriceList_ID)
        WHERE 2=2 
 AND c_bpartner.C_BPARTNER_ID=?
        AND 1=1 
        AND C_BPartner.C_BPartner_ID = ? 
        AND C_BPartner.AD_Client_ID IN ('1') 
           AND C_BPartner.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="C_BPARTNER_ID"/>

    <Parameter name="cBpartnerId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_BPartner.C_BPartner_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BPartner.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BPartner.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
<Parameter name="poFixmonthday3"></Parameter><Parameter name="poPricelistId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="value"></Parameter><Parameter name="paymentrulepo"></Parameter><Parameter name="name"></Parameter><Parameter name="isactive"></Parameter><Parameter name="isvendor"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="poPaymenttermId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="iscreditcard"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="poFixmonthday2"></Parameter><Parameter name="poFixmonthday"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef2901" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT zssi_getNewBPartnerValue(?) 
    ]]></Sql>

<Parameter name="AD_ORG_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef2898_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2900_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_BPartner.C_BPartner_ID AS NAME
        FROM C_BPartner
        WHERE C_BPartner.C_BPartner_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(C_BPartner.Name), ''))) AS NAME FROM C_BPartner WHERE C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="cBpartnerId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(C_BPartner.Name), ''))) AS NAME FROM C_BPartner WHERE C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="cBpartnerId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_BPartner
        SET Value = (?) , Name = (?) , IsActive = (?) , IsVendor = (?) , PaymentRulePO = (?) , PO_PaymentTerm_ID = (?) , PO_PriceList_ID = (?) , PO_Fixmonthday2 = TO_NUMBER(?) , PO_Fixmonthday3 = TO_NUMBER(?) , PO_Fixmonthday = TO_NUMBER(?) , IsCreditcard = (?) , C_BPartner_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , updated = now(), updatedby = ? 
        WHERE C_BPartner.C_BPartner_ID = ? 
                 AND C_BPartner.C_BPartner_ID = ? 
        AND C_BPartner.AD_Client_ID IN ('1') 
        AND C_BPartner.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="value"></Parameter> <Parameter name="name"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="isvendor"></Parameter> <Parameter name="paymentrulepo"></Parameter> <Parameter name="poPaymenttermId"></Parameter> <Parameter name="poPricelistId"></Parameter> <Parameter name="poFixmonthday2"></Parameter> <Parameter name="poFixmonthday3"></Parameter> <Parameter name="poFixmonthday"></Parameter> <Parameter name="iscreditcard"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cBpartnerId"></Parameter>
    
    <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BPartner.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BPartner.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_BPartner 
        (Value, Name, IsActive, IsVendor, PaymentRulePO, PO_PaymentTerm_ID, PO_PriceList_ID, PO_Fixmonthday2, PO_Fixmonthday3, PO_Fixmonthday, IsCreditcard, C_BPartner_ID, AD_Client_ID, AD_Org_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="value"></Parameter> <Parameter name="name"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="isvendor"></Parameter> <Parameter name="paymentrulepo"></Parameter> <Parameter name="poPaymenttermId"></Parameter> <Parameter name="poPricelistId"></Parameter> <Parameter name="poFixmonthday2"></Parameter> <Parameter name="poFixmonthday3"></Parameter> <Parameter name="poFixmonthday"></Parameter> <Parameter name="iscreditcard"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_BPartner
        WHERE C_BPartner.C_BPartner_ID = ? 
                 AND C_BPartner.C_BPartner_ID = ? 
        AND C_BPartner.AD_Client_ID IN ('1') 
        AND C_BPartner.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_BPartner.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_BPartner.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_BPartner
        WHERE C_BPartner.C_BPartner_ID = ? 
                 AND C_BPartner.C_BPartner_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cBpartnerId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_BPartner
         WHERE C_BPartner.C_BPartner_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_BPartner
         WHERE C_BPartner.C_BPartner_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>