<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="IdentifierF665ADB84C934431BA8A6DBD0D47264BData" package="org.openbravo.erpWindows.org.openz.internallogistic.ShipmentReceipt">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(ils_snrinoutline_v.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = ils_snrinoutline_v.CreatedBy) as CreatedByR, 
        to_char(ils_snrinoutline_v.Updated, ?) as updated, 
        to_char(ils_snrinoutline_v.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        ils_snrinoutline_v.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = ils_snrinoutline_v.UpdatedBy) as UpdatedByR,
        ils_snrinoutline_v.ILS_Inoutline_V_ID, 
(CASE WHEN ils_snrinoutline_v.ILS_Inoutline_V_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Line), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table3.MovementDate, 'DD-MM-YYYY')),'') ) END) AS ILS_Inoutline_V_IDR, 
ils_snrinoutline_v.AD_Client_ID, 
ils_snrinoutline_v.Serialnumber, 
ils_snrinoutline_v.AD_Org_ID, 
COALESCE(ils_snrinoutline_v.Isactive, 'N') AS Isactive, 
COALESCE(ils_snrinoutline_v.Isunavailable, 'N') AS Isunavailable, 
ils_snrinoutline_v.ILS_Snrinoutline_V_ID, 
 
        ? AS LANGUAGE 
        FROM ils_snrinoutline_v left join (select ILS_Inoutline_V_ID, Line, M_Product_ID, ILS_Inout_V_ID from ILS_Inoutline_V) table1 on (ils_snrinoutline_v.ILS_Inoutline_V_ID = table1.ILS_Inoutline_V_ID) left join (select M_Product_ID, Value, Name from M_Product) table2 on (table1.M_Product_ID = table2.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL2 on (table2.M_Product_ID = tableTRL2.M_Product_ID and tableTRL2.AD_Language = ?)  left join (select ILS_Inout_V_ID, DocumentNo, MovementDate from ILS_Inout_V) table3 on (table1.ILS_Inout_V_ID = table3.ILS_Inout_V_ID)
        WHERE 2=2 

        AND 1=1 
        AND ils_snrinoutline_v.ILS_Snrinoutline_V_ID = ? 
        AND ils_snrinoutline_v.AD_Client_ID IN ('1') 
           AND ils_snrinoutline_v.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="ilsInoutlineVId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND ils_snrinoutline_v.ILS_Inoutline_V_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ils_snrinoutline_v.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ils_snrinoutline_v.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="ilsInoutlineVId" id="paramKeyParent"></Parameter>
<Parameter name="ilsSnrinoutlineVId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="isunavailable"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="serialnumber"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef7D47ACA98A37438793337F5F39F800F2_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef0A55F0E27BE345A9854425F5A842BF60_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT ils_snrinoutline_v.ILS_Inoutline_V_ID AS NAME
        FROM ils_snrinoutline_v
        WHERE ils_snrinoutline_v.ILS_Snrinoutline_V_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Line), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table2.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table3.DocumentNo), '')) || ' - ' || TO_CHAR(table3.MovementDate, 'DD-MM-YYYY')) AS NAME FROM ils_inoutline_v left join (select ILS_Inoutline_V_ID, Line, M_Product_ID, ILS_Inout_V_ID from ILS_Inoutline_V) table1 on (ils_inoutline_v.ILS_Inoutline_V_ID = table1.ILS_Inoutline_V_ID) left join (select M_Product_ID, Value, Name from M_Product) table2 on (table1.M_Product_ID = table2.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL2 on (table2.M_Product_ID = tableTRL2.M_Product_ID and tableTRL2.AD_Language = ?)  left join (select ILS_Inout_V_ID, DocumentNo, MovementDate from ILS_Inout_V) table3 on (table1.ILS_Inout_V_ID = table3.ILS_Inout_V_ID) WHERE ils_inoutline_v.ILS_Inoutline_V_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="ilsInoutlineVId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Line), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table2.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table3.DocumentNo), '')) || ' - ' || TO_CHAR(table3.MovementDate, 'DD-MM-YYYY')) AS NAME FROM ils_inoutline_v left join (select ILS_Inoutline_V_ID, Line, M_Product_ID, ILS_Inout_V_ID from ILS_Inoutline_V) table1 on (ils_inoutline_v.ILS_Inoutline_V_ID = table1.ILS_Inoutline_V_ID) left join (select M_Product_ID, Value, Name from M_Product) table2 on (table1.M_Product_ID = table2.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL2 on (table2.M_Product_ID = tableTRL2.M_Product_ID and tableTRL2.AD_Language = ?)  left join (select ILS_Inout_V_ID, DocumentNo, MovementDate from ILS_Inout_V) table3 on (table1.ILS_Inout_V_ID = table3.ILS_Inout_V_ID) WHERE ils_inoutline_v.ILS_Inoutline_V_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="ilsInoutlineVId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE ils_snrinoutline_v
        SET ILS_Inoutline_V_ID = (?) , AD_Client_ID = (?) , Serialnumber = (?) , AD_Org_ID = (?) , Isactive = (?) , Isunavailable = (?) , ILS_Snrinoutline_V_ID = (?) , updated = now(), updatedby = ? 
        WHERE ils_snrinoutline_v.ILS_Snrinoutline_V_ID = ? 
                 AND ils_snrinoutline_v.ILS_Inoutline_V_ID = ? 
        AND ils_snrinoutline_v.AD_Client_ID IN ('1') 
        AND ils_snrinoutline_v.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="ilsInoutlineVId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="serialnumber"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="isunavailable"></Parameter> <Parameter name="ilsSnrinoutlineVId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="ilsSnrinoutlineVId"></Parameter>
    
    <Parameter name="ilsInoutlineVId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ils_snrinoutline_v.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ils_snrinoutline_v.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO ils_snrinoutline_v 
        (ILS_Inoutline_V_ID, AD_Client_ID, Serialnumber, AD_Org_ID, Isactive, Isunavailable, ILS_Snrinoutline_V_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="ilsInoutlineVId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="serialnumber"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="isunavailable"></Parameter> <Parameter name="ilsSnrinoutlineVId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM ils_snrinoutline_v
        WHERE ils_snrinoutline_v.ILS_Snrinoutline_V_ID = ? 
                 AND ils_snrinoutline_v.ILS_Inoutline_V_ID = ? 
        AND ils_snrinoutline_v.AD_Client_ID IN ('1') 
        AND ils_snrinoutline_v.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="ilsInoutlineVId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="ils_snrinoutline_v.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="ils_snrinoutline_v.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM ils_snrinoutline_v
        WHERE ils_snrinoutline_v.ILS_Snrinoutline_V_ID = ? 
                 AND ils_snrinoutline_v.ILS_Inoutline_V_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="ilsInoutlineVId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM ils_snrinoutline_v
         WHERE ils_snrinoutline_v.ILS_Snrinoutline_V_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM ils_snrinoutline_v
         WHERE ils_snrinoutline_v.ILS_Snrinoutline_V_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>