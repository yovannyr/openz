<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="CountryData" package="org.openbravo.erpWindows.CountryRegionandCity">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_Country.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_Country.CreatedBy) as CreatedByR, 
        to_char(C_Country.Updated, ?) as updated, 
        to_char(C_Country.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_Country.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_Country.UpdatedBy) as UpdatedByR,
        C_Country.C_Country_ID, 
C_Country.AD_Client_ID, 
(CASE WHEN C_Country.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_Country.AD_Org_ID, 
(CASE WHEN C_Country.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_Country.CountryCode, 
C_Country.Name, 
C_Country.Description, 
COALESCE(C_Country.IsActive, 'N') AS IsActive, 
COALESCE(C_Country.IsDefault, 'N') AS IsDefault, 
COALESCE(C_Country.HasRegion, 'N') AS HasRegion, 
C_Country.RegionName, 
C_Country.DisplaySequence, 
C_Country.ExpressionPhone, 
COALESCE(C_Country.HasPostal_Add, 'N') AS HasPostal_Add, 
C_Country.ExpressionPostal, 
C_Country.ExpressionPostal_Add, 
C_Country.AD_Language, 
(CASE WHEN C_Country.AD_Language IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS AD_LanguageR, 
C_Country.C_Currency_ID, 
(CASE WHEN C_Country.C_Currency_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.ISO_Code), ''))),'') ) END) AS C_Currency_IDR, 
C_Country.IBANCountry, 
C_Country.IBANNoDigits, 
 
        ? AS LANGUAGE 
        FROM C_Country left join (select AD_Client_ID, Name from AD_Client) table1 on (C_Country.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_Country.AD_Org_ID = table2.AD_Org_ID) left join (select AD_Language, Name from AD_Language) table3 on (C_Country.AD_Language =  table3.AD_Language) left join (select C_Currency_ID, ISO_Code from C_Currency) table4 on (C_Country.C_Currency_ID = table4.C_Currency_ID)
        WHERE 2=2 

        AND 1=1 
        AND C_Country.C_Country_ID = ? 
        AND C_Country.AD_Client_ID IN ('1') 
           AND C_Country.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_Country.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_Country.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="cCurrencyId"></Parameter><Parameter name="adLanguage"></Parameter><Parameter name="name"></Parameter><Parameter name="countrycode"></Parameter><Parameter name="expressionpostalAdd"></Parameter><Parameter name="expressionpostal"></Parameter><Parameter name="hasregion"></Parameter><Parameter name="expressionphone"></Parameter><Parameter name="description"></Parameter><Parameter name="ibannodigits"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="displaysequence"></Parameter><Parameter name="ibancountry"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="isdefault"></Parameter><Parameter name="haspostalAdd"></Parameter><Parameter name="cCountryId"></Parameter><Parameter name="regionname"></Parameter><Parameter name="adOrgId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef948_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef946_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_Country
        SET C_Country_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , CountryCode = (?) , Name = (?) , Description = (?) , IsActive = (?) , IsDefault = (?) , HasRegion = (?) , RegionName = (?) , DisplaySequence = (?) , ExpressionPhone = (?) , HasPostal_Add = (?) , ExpressionPostal = (?) , ExpressionPostal_Add = (?) , AD_Language = (?) , C_Currency_ID = (?) , IBANCountry = (?) , IBANNoDigits = TO_NUMBER(?) , updated = now(), updatedby = ? 
        WHERE C_Country.C_Country_ID = ? 
        
        AND C_Country.AD_Client_ID IN ('1') 
        AND C_Country.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cCountryId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="countrycode"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="isdefault"></Parameter> <Parameter name="hasregion"></Parameter> <Parameter name="regionname"></Parameter> <Parameter name="displaysequence"></Parameter> <Parameter name="expressionphone"></Parameter> <Parameter name="haspostalAdd"></Parameter> <Parameter name="expressionpostal"></Parameter> <Parameter name="expressionpostalAdd"></Parameter> <Parameter name="adLanguage"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="ibancountry"></Parameter> <Parameter name="ibannodigits"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cCountryId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="C_Country.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_Country.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_Country 
        (C_Country_ID, AD_Client_ID, AD_Org_ID, CountryCode, Name, Description, IsActive, IsDefault, HasRegion, RegionName, DisplaySequence, ExpressionPhone, HasPostal_Add, ExpressionPostal, ExpressionPostal_Add, AD_Language, C_Currency_ID, IBANCountry, IBANNoDigits, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cCountryId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="countrycode"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="isdefault"></Parameter> <Parameter name="hasregion"></Parameter> <Parameter name="regionname"></Parameter> <Parameter name="displaysequence"></Parameter> <Parameter name="expressionphone"></Parameter> <Parameter name="haspostalAdd"></Parameter> <Parameter name="expressionpostal"></Parameter> <Parameter name="expressionpostalAdd"></Parameter> <Parameter name="adLanguage"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="ibancountry"></Parameter> <Parameter name="ibannodigits"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_Country
        WHERE C_Country.C_Country_ID = ? 
        
        AND C_Country.AD_Client_ID IN ('1') 
        AND C_Country.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="C_Country.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_Country.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_Country
        WHERE C_Country.C_Country_ID = ? 
        
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_Country
         WHERE C_Country.C_Country_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_Country
         WHERE C_Country.C_Country_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>