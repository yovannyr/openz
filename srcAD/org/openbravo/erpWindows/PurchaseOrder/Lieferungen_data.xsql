<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="LieferungenData" package="org.openbravo.erpWindows.PurchaseOrder">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(M_InOut.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_InOut.CreatedBy) as CreatedByR, 
        to_char(M_InOut.Updated, ?) as updated, 
        to_char(M_InOut.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        M_InOut.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_InOut.UpdatedBy) as UpdatedByR,
        M_InOut.User2_ID, 
M_InOut.User1_ID, 
M_InOut.AD_OrgTrx_ID, 
M_InOut.Posted, 
M_InOut.POReference, 
M_InOut.UpdateLines, 
M_InOut.DocumentNo, 
COALESCE(M_InOut.Islogistic, 'N') AS Islogistic, 
M_InOut.C_DocType_ID, 
(CASE WHEN M_InOut.C_DocType_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'') ) END) AS C_DocType_IDR, 
M_InOut.GenerateLines, 
M_InOut.Description, 
M_InOut.MovementDate, 
M_InOut.Delivery_Location_ID, 
(CASE WHEN M_InOut.Delivery_Location_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS Delivery_Location_IDR, 
M_InOut.C_Project_ID, 
(CASE WHEN M_InOut.C_Project_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS C_Project_IDR, 
M_InOut.AD_Org_ID, 
M_InOut.C_Campaign_ID, 
(CASE WHEN M_InOut.C_Campaign_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS C_Campaign_IDR, 
M_InOut.C_Activity_ID, 
(CASE WHEN M_InOut.C_Activity_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Name), ''))),'') ) END) AS C_Activity_IDR, 
M_InOut.ShipDate, 
M_InOut.PickDate, 
M_InOut.Qty, 
M_InOut.TrackingNo, 
M_InOut.SalesRep_ID, 
(CASE WHEN M_InOut.SalesRep_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Name), ''))),'') ) END) AS SalesRep_IDR, 
M_InOut.DateOrdered, 
M_InOut.PriorityRule, 
(CASE WHEN M_InOut.PriorityRule IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS PriorityRuleR, 
M_InOut.ChargeAmt, 
M_InOut.C_Charge_ID, 
(CASE WHEN M_InOut.C_Charge_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Name), ''))),'') ) END) AS C_Charge_IDR, 
M_InOut.M_Shipper_ID, 
(CASE WHEN M_InOut.M_Shipper_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Name), ''))),'') ) END) AS M_Shipper_IDR, 
M_InOut.DeliveryViaRule, 
(CASE WHEN M_InOut.DeliveryViaRule IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list2.name),'') ) END) AS DeliveryViaRuleR, 
M_InOut.DeliveryRule, 
(CASE WHEN M_InOut.DeliveryRule IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list3.name),'') ) END) AS DeliveryRuleR, 
M_InOut.M_Warehouse_ID, 
(CASE WHEN M_InOut.M_Warehouse_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Name), ''))),'') ) END) AS M_Warehouse_IDR, 
M_InOut.AD_User_ID, 
(CASE WHEN M_InOut.AD_User_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table10.Name), ''))),'') ) END) AS AD_User_IDR, 
M_InOut.C_BPartner_ID, 
(CASE WHEN M_InOut.C_BPartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table11.Name), ''))),'') ) END) AS C_BPartner_IDR, 
M_InOut.C_BPartner_Location_ID, 
M_InOut.DateAcct, 
M_InOut.C_Order_ID, 
(CASE WHEN M_InOut.C_Order_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table12.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table12.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table12.DateOrdered, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table12.GrandTotal), ''))),'') ) END) AS C_Order_IDR, 
M_InOut.DatePrinted, 
M_InOut.FreightAmt, 
M_InOut.FreightCostRule, 
(CASE WHEN M_InOut.FreightCostRule IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list4.name),'') ) END) AS FreightCostRuleR, 
COALESCE(M_InOut.IsSOTrx, 'N') AS IsSOTrx, 
COALESCE(M_InOut.IsActive, 'N') AS IsActive, 
M_InOut.MovementType, 
(CASE WHEN M_InOut.MovementType IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list5.name),'') ) END) AS MovementTypeR, 
M_InOut.DocStatus, 
(CASE WHEN M_InOut.DocStatus IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list6.name),'') ) END) AS DocStatusR, 
M_InOut.C_Invoice_ID, 
(CASE WHEN M_InOut.C_Invoice_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table13.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table13.DateInvoiced, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table13.GrandTotal), ''))),'') ) END) AS C_Invoice_IDR, 
M_InOut.CreateFrom, 
COALESCE(M_InOut.IsPrinted, 'N') AS IsPrinted, 
M_InOut.GenerateTo, 
M_InOut.DocAction, 
COALESCE(M_InOut.Processed, 'N') AS Processed, 
COALESCE(M_InOut.Processing, 'N') AS Processing, 
M_InOut.M_InOut_ID, 
M_InOut.AD_Client_ID, 
 
        ? AS LANGUAGE 
        FROM M_InOut left join (select C_DocType_ID, Name from C_DocType) table1 on (M_InOut.C_DocType_ID =  table1.C_DocType_ID) left join (select C_DocType_ID,AD_Language, Name from C_DocType_TRL) tableTRL1 on (table1.C_DocType_ID = tableTRL1.C_DocType_ID and tableTRL1.AD_Language = ?)  left join (select C_BPartner_Location_ID, Name from C_BPartner_Location) table2 on (M_InOut.Delivery_Location_ID =  table2.C_BPartner_Location_ID) left join (select C_Project_ID, Value, Name from C_Project) table3 on (M_InOut.C_Project_ID = table3.C_Project_ID) left join (select C_Campaign_ID, Name from C_Campaign) table4 on (M_InOut.C_Campaign_ID = table4.C_Campaign_ID) left join (select C_Activity_ID, Name from C_Activity) table5 on (M_InOut.C_Activity_ID = table5.C_Activity_ID) left join (select AD_User_ID, Name from AD_User) table6 on (M_InOut.SalesRep_ID =  table6.AD_User_ID) left join ad_ref_list_v list1 on (M_InOut.PriorityRule = list1.value and list1.ad_reference_id = '154' and list1.ad_language = ?)  left join (select C_Charge_ID, Name from C_Charge) table7 on (M_InOut.C_Charge_ID =  table7.C_Charge_ID) left join (select M_Shipper_ID, Name from M_Shipper) table8 on (M_InOut.M_Shipper_ID = table8.M_Shipper_ID) left join ad_ref_list_v list2 on (M_InOut.DeliveryViaRule = list2.value and list2.ad_reference_id = '152' and list2.ad_language = ?)  left join ad_ref_list_v list3 on (M_InOut.DeliveryRule = list3.value and list3.ad_reference_id = '151' and list3.ad_language = ?)  left join (select M_Warehouse_ID, Name from M_Warehouse) table9 on (M_InOut.M_Warehouse_ID =  table9.M_Warehouse_ID) left join (select AD_User_ID, Name from AD_User) table10 on (M_InOut.AD_User_ID = table10.AD_User_ID) left join (select C_BPartner_ID, Name from C_BPartner) table11 on (M_InOut.C_BPartner_ID = table11.C_BPartner_ID) left join (select C_Order_ID, DocumentNo, Name, DateOrdered, GrandTotal from C_Order) table12 on (M_InOut.C_Order_ID = table12.C_Order_ID) left join ad_ref_list_v list4 on (M_InOut.FreightCostRule = list4.value and list4.ad_reference_id = '153' and list4.ad_language = ?)  left join ad_ref_list_v list5 on (M_InOut.MovementType = list5.value and list5.ad_reference_id = '189' and list5.ad_language = ?)  left join ad_ref_list_v list6 on (M_InOut.DocStatus = list6.value and list6.ad_reference_id = '131' and list6.ad_language = ?)  left join (select C_Invoice_ID, DocumentNo, DateInvoiced, GrandTotal from C_Invoice) table13 on (M_InOut.C_Invoice_ID = table13.C_Invoice_ID)
        WHERE 2=2 

        AND 1=1 
        AND M_InOut.M_InOut_ID = ? 
        AND M_InOut.AD_Client_ID IN ('1') 
           AND M_InOut.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="cOrderId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND M_InOut.C_Order_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_InOut.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_InOut.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cOrderId" id="paramKeyParent"></Parameter>
<Parameter name="cActivityId"></Parameter><Parameter name="updatelines"></Parameter><Parameter name="deliveryLocationId"></Parameter><Parameter name="user1Id"></Parameter><Parameter name="generateto"></Parameter><Parameter name="docaction"></Parameter><Parameter name="chargeamt"></Parameter><Parameter name="movementtype"></Parameter><Parameter name="deliveryviarule"></Parameter><Parameter name="adUserId"></Parameter><Parameter name="islogistic"></Parameter><Parameter name="docstatus"></Parameter><Parameter name="pickdate"></Parameter><Parameter name="isprinted"></Parameter><Parameter name="deliveryrule"></Parameter><Parameter name="createfrom"></Parameter><Parameter name="qty"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="generatelines"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="dateordered"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="cChargeId"></Parameter><Parameter name="processed"></Parameter><Parameter name="issotrx"></Parameter><Parameter name="adOrgtrxId"></Parameter><Parameter name="mWarehouseId"></Parameter><Parameter name="salesrepId"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="trackingno"></Parameter><Parameter name="cInvoiceId"></Parameter><Parameter name="cInvoiceIdr"></Parameter><Parameter name="cBpartnerLocationId"></Parameter><Parameter name="dateacct"></Parameter><Parameter name="priorityrule"></Parameter><Parameter name="cOrderIdr"></Parameter><Parameter name="mInoutId"></Parameter><Parameter name="dateprinted"></Parameter><Parameter name="freightcostrule"></Parameter><Parameter name="user2Id"></Parameter><Parameter name="isactive"></Parameter><Parameter name="processing"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="poreference"></Parameter><Parameter name="documentno"></Parameter><Parameter name="cProjectId"></Parameter><Parameter name="cProjectIdr"></Parameter><Parameter name="cDoctypeId"></Parameter><Parameter name="freightamt"></Parameter><Parameter name="movementdate"></Parameter><Parameter name="description"></Parameter><Parameter name="mShipperId"></Parameter><Parameter name="cCampaignId"></Parameter><Parameter name="posted"></Parameter><Parameter name="shipdate"></Parameter>
   </SqlMethod>




   <SqlMethod name="selectActP154_M_PriceList_Version_ID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT MIN(M_PRICELIST_VERSION_ID) AS TOTAL FROM M_PRICELIST_VERSION M, C_BPARTNER B WHERE M.M_PRICELIST_ID = (CASE ? WHEN 'Y' THEN B.M_PRICELIST_ID ELSE COALESCE(B.PO_PRICELIST_ID, B.M_PRICELIST_ID) END) AND M.ISACTIVE = 'Y' AND B.C_BPARTNER_ID = ? 
    ]]></Sql>

<Parameter name="isSOTrx"/>
<Parameter name="C_BPARTNER_ID"/>
  </SqlMethod>



   <SqlMethod name="selectDef3528_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3526_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3795_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as C_BPartner_ID FROM C_BPartner table1 WHERE table1.isActive='Y' AND table1.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_BPartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5402_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.DocumentNo), '')  || ' - ' || COALESCE(TO_CHAR(table1.DateInvoiced), '')  || ' - ' || COALESCE(TO_CHAR(table1.GrandTotal), '') ) as C_Invoice_ID FROM C_Invoice table1 WHERE table1.isActive='Y' AND table1.C_Invoice_ID = ?  
    ]]></Sql>
<Parameter name="C_Invoice_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3809_4" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.DocumentNo), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '')  || ' - ' || COALESCE(TO_CHAR(table1.DateOrdered), '')  || ' - ' || COALESCE(TO_CHAR(table1.GrandTotal), '') ) as C_Order_ID FROM C_Order table1 WHERE table1.isActive='Y' AND table1.C_Order_ID = ?  
    ]]></Sql>
<Parameter name="C_Order_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef9585_5" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as C_Project_ID FROM C_Project table1 WHERE table1.isActive='Y' AND table1.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="C_Project_IDR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_InOut.C_Order_ID AS NAME
        FROM M_InOut
        WHERE M_InOut.M_InOut_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DocumentNo), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Name), '')) || ' - ' || TO_CHAR(table1.DateOrdered, 'DD-MM-YYYY') || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.GrandTotal), ''))) AS NAME FROM C_Order left join (select C_Order_ID, DocumentNo, Name, DateOrdered, GrandTotal from C_Order) table1 on (C_Order.C_Order_ID = table1.C_Order_ID) WHERE C_Order.C_Order_ID = ?  
    ]]></Sql>
<Parameter name="cOrderId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DocumentNo), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Name), '')) || ' - ' || TO_CHAR(table1.DateOrdered, 'DD-MM-YYYY') || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.GrandTotal), ''))) AS NAME FROM C_Order left join (select C_Order_ID, DocumentNo, Name, DateOrdered, GrandTotal from C_Order) table1 on (C_Order.C_Order_ID = table1.C_Order_ID) WHERE C_Order.C_Order_ID = ?  
    ]]></Sql>
<Parameter name="cOrderId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE M_InOut
        SET User2_ID = (?) , User1_ID = (?) , AD_OrgTrx_ID = (?) , Posted = (?) , POReference = (?) , UpdateLines = (?) , DocumentNo = (?) , Islogistic = (?) , C_DocType_ID = (?) , GenerateLines = (?) , Description = (?) , MovementDate = TO_DATE(?) , Delivery_Location_ID = (?) , C_Project_ID = (?) , AD_Org_ID = (?) , C_Campaign_ID = (?) , C_Activity_ID = (?) , ShipDate = TO_DATE(?) , PickDate = TO_DATE(?) , Qty = TO_NUMBER(?) , TrackingNo = (?) , SalesRep_ID = (?) , DateOrdered = TO_DATE(?) , PriorityRule = (?) , ChargeAmt = TO_NUMBER(?) , C_Charge_ID = (?) , M_Shipper_ID = (?) , DeliveryViaRule = (?) , DeliveryRule = (?) , M_Warehouse_ID = (?) , AD_User_ID = (?) , C_BPartner_ID = (?) , C_BPartner_Location_ID = (?) , DateAcct = TO_DATE(?) , C_Order_ID = (?) , DatePrinted = TO_DATE(?) , FreightAmt = TO_NUMBER(?) , FreightCostRule = (?) , IsSOTrx = (?) , IsActive = (?) , MovementType = (?) , DocStatus = (?) , C_Invoice_ID = (?) , CreateFrom = (?) , IsPrinted = (?) , GenerateTo = (?) , DocAction = (?) , Processed = (?) , Processing = (?) , M_InOut_ID = (?) , AD_Client_ID = (?) , updated = now(), updatedby = ? 
        WHERE M_InOut.M_InOut_ID = ? 
                 AND M_InOut.C_Order_ID = ? 
        AND M_InOut.AD_Client_ID IN ('1') 
        AND M_InOut.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="user2Id"></Parameter> <Parameter name="user1Id"></Parameter> <Parameter name="adOrgtrxId"></Parameter> <Parameter name="posted"></Parameter> <Parameter name="poreference"></Parameter> <Parameter name="updatelines"></Parameter> <Parameter name="documentno"></Parameter> <Parameter name="islogistic"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="generatelines"></Parameter> <Parameter name="description"></Parameter> <Parameter name="movementdate"></Parameter> <Parameter name="deliveryLocationId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cCampaignId"></Parameter> <Parameter name="cActivityId"></Parameter> <Parameter name="shipdate"></Parameter> <Parameter name="pickdate"></Parameter> <Parameter name="qty"></Parameter> <Parameter name="trackingno"></Parameter> <Parameter name="salesrepId"></Parameter> <Parameter name="dateordered"></Parameter> <Parameter name="priorityrule"></Parameter> <Parameter name="chargeamt"></Parameter> <Parameter name="cChargeId"></Parameter> <Parameter name="mShipperId"></Parameter> <Parameter name="deliveryviarule"></Parameter> <Parameter name="deliveryrule"></Parameter> <Parameter name="mWarehouseId"></Parameter> <Parameter name="adUserId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="cBpartnerLocationId"></Parameter> <Parameter name="dateacct"></Parameter> <Parameter name="cOrderId"></Parameter> <Parameter name="dateprinted"></Parameter> <Parameter name="freightamt"></Parameter> <Parameter name="freightcostrule"></Parameter> <Parameter name="issotrx"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="movementtype"></Parameter> <Parameter name="docstatus"></Parameter> <Parameter name="cInvoiceId"></Parameter> <Parameter name="createfrom"></Parameter> <Parameter name="isprinted"></Parameter> <Parameter name="generateto"></Parameter> <Parameter name="docaction"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="processing"></Parameter> <Parameter name="mInoutId"></Parameter> <Parameter name="adClientId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mInoutId"></Parameter>
    
    <Parameter name="cOrderId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_InOut.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_InOut.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO M_InOut 
        (User2_ID, User1_ID, AD_OrgTrx_ID, Posted, POReference, UpdateLines, DocumentNo, Islogistic, C_DocType_ID, GenerateLines, Description, MovementDate, Delivery_Location_ID, C_Project_ID, AD_Org_ID, C_Campaign_ID, C_Activity_ID, ShipDate, PickDate, Qty, TrackingNo, SalesRep_ID, DateOrdered, PriorityRule, ChargeAmt, C_Charge_ID, M_Shipper_ID, DeliveryViaRule, DeliveryRule, M_Warehouse_ID, AD_User_ID, C_BPartner_ID, C_BPartner_Location_ID, DateAcct, C_Order_ID, DatePrinted, FreightAmt, FreightCostRule, IsSOTrx, IsActive, MovementType, DocStatus, C_Invoice_ID, CreateFrom, IsPrinted, GenerateTo, DocAction, Processed, Processing, M_InOut_ID, AD_Client_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), TO_DATE(?), (?), (?), (?), (?), (?), TO_DATE(?), TO_DATE(?), TO_NUMBER(?), (?), (?), TO_DATE(?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), TO_DATE(?), (?), TO_DATE(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="user2Id"></Parameter> <Parameter name="user1Id"></Parameter> <Parameter name="adOrgtrxId"></Parameter> <Parameter name="posted"></Parameter> <Parameter name="poreference"></Parameter> <Parameter name="updatelines"></Parameter> <Parameter name="documentno"></Parameter> <Parameter name="islogistic"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="generatelines"></Parameter> <Parameter name="description"></Parameter> <Parameter name="movementdate"></Parameter> <Parameter name="deliveryLocationId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cCampaignId"></Parameter> <Parameter name="cActivityId"></Parameter> <Parameter name="shipdate"></Parameter> <Parameter name="pickdate"></Parameter> <Parameter name="qty"></Parameter> <Parameter name="trackingno"></Parameter> <Parameter name="salesrepId"></Parameter> <Parameter name="dateordered"></Parameter> <Parameter name="priorityrule"></Parameter> <Parameter name="chargeamt"></Parameter> <Parameter name="cChargeId"></Parameter> <Parameter name="mShipperId"></Parameter> <Parameter name="deliveryviarule"></Parameter> <Parameter name="deliveryrule"></Parameter> <Parameter name="mWarehouseId"></Parameter> <Parameter name="adUserId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="cBpartnerLocationId"></Parameter> <Parameter name="dateacct"></Parameter> <Parameter name="cOrderId"></Parameter> <Parameter name="dateprinted"></Parameter> <Parameter name="freightamt"></Parameter> <Parameter name="freightcostrule"></Parameter> <Parameter name="issotrx"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="movementtype"></Parameter> <Parameter name="docstatus"></Parameter> <Parameter name="cInvoiceId"></Parameter> <Parameter name="createfrom"></Parameter> <Parameter name="isprinted"></Parameter> <Parameter name="generateto"></Parameter> <Parameter name="docaction"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="processing"></Parameter> <Parameter name="mInoutId"></Parameter> <Parameter name="adClientId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_InOut
        WHERE M_InOut.M_InOut_ID = ? 
                 AND M_InOut.C_Order_ID = ? 
        AND M_InOut.AD_Client_ID IN ('1') 
        AND M_InOut.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cOrderId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_InOut.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_InOut.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_InOut
        WHERE M_InOut.M_InOut_ID = ? 
                 AND M_InOut.C_Order_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cOrderId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM M_InOut
         WHERE M_InOut.M_InOut_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM M_InOut
         WHERE M_InOut.M_InOut_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>