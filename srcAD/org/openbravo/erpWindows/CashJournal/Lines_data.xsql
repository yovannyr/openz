<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="LinesData" package="org.openbravo.erpWindows.CashJournal">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_CashLine.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_CashLine.CreatedBy) as CreatedByR, 
        to_char(C_CashLine.Updated, ?) as updated, 
        to_char(C_CashLine.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_CashLine.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_CashLine.UpdatedBy) as UpdatedByR,
        COALESCE(C_CashLine.IsGenerated, 'N') AS IsGenerated, 
C_CashLine.AD_Client_ID, 
(CASE WHEN C_CashLine.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
C_CashLine.AD_Org_ID, 
(CASE WHEN C_CashLine.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_CashLine.C_Cash_ID, 
(CASE WHEN C_CashLine.C_Cash_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS C_Cash_IDR, 
C_CashLine.Line, 
C_CashLine.Description, 
C_CashLine.CashType, 
(CASE WHEN C_CashLine.CashType IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS CashTypeR, 
C_CashLine.C_Glitem_ID, 
(CASE WHEN C_CashLine.C_Glitem_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS C_Glitem_IDR, 
C_CashLine.Amount, 
C_CashLine.C_Currency_ID, 
(CASE WHEN C_CashLine.C_Currency_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.ISO_Code), ''))),'') ) END) AS C_Currency_IDR, 
C_CashLine.C_Charge_ID, 
C_CashLine.C_Debt_Payment_ID, 
(CASE WHEN C_CashLine.C_Debt_Payment_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(list2.name),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table6.Dateplanned, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Amount), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.IsReceipt), ''))),'') ) END) AS C_Debt_Payment_IDR, 
C_CashLine.DiscountAmt, 
C_CashLine.WriteOffAmt, 
C_CashLine.C_Order_ID, 
(CASE WHEN C_CashLine.C_Order_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table8.DateOrdered, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.GrandTotal), ''))),'') ) END) AS C_Order_IDR, 
C_CashLine.PayInAdvance, 
COALESCE(C_CashLine.IsActive, 'N') AS IsActive, 
C_CashLine.C_CashLine_ID, 
 
        ? AS LANGUAGE 
        FROM C_CashLine left join (select AD_Client_ID, Name from AD_Client) table1 on (C_CashLine.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (C_CashLine.AD_Org_ID = table2.AD_Org_ID) left join (select C_Cash_ID, Name from C_Cash) table3 on (C_CashLine.C_Cash_ID = table3.C_Cash_ID) left join ad_ref_list_v list1 on (C_CashLine.CashType = list1.value and list1.ad_reference_id = '217' and list1.ad_language = ?)  left join (select C_Glitem_ID, Name from C_Glitem) table4 on (C_CashLine.C_Glitem_ID = table4.C_Glitem_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table5 on (C_CashLine.C_Currency_ID = table5.C_Currency_ID) left join (select C_Debt_Payment_ID, C_BPartner_ID, PaymentRule, Dateplanned, Amount, IsReceipt from C_Debt_Payment) table6 on (C_CashLine.C_Debt_Payment_ID = table6.C_Debt_Payment_ID) left join (select C_BPartner_ID, Name from C_BPartner) table7 on (table6.C_BPartner_ID = table7.C_BPartner_ID) left join ad_ref_list_v list2 on (table6.PaymentRule = list2.value and list2.ad_reference_id = '195' and list2.ad_language = ?)  left join (select C_Order_ID, DocumentNo, Name, DateOrdered, GrandTotal from C_Order) table8 on (C_CashLine.C_Order_ID = table8.C_Order_ID)
        WHERE 2=2 

        AND 1=1 
        AND C_CashLine.C_CashLine_ID = ? 
        AND C_CashLine.AD_Client_ID IN ('1') 
           AND C_CashLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="cCashId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_CashLine.C_Cash_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_CashLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_CashLine.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cCashId" id="paramKeyParent"></Parameter>
<Parameter name="cCashlineId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="isgenerated"></Parameter><Parameter name="writeoffamt"></Parameter><Parameter name="cCurrencyId"></Parameter><Parameter name="cChargeId"></Parameter><Parameter name="discountamt"></Parameter><Parameter name="description"></Parameter><Parameter name="cDebtPaymentId"></Parameter><Parameter name="cDebtPaymentIdr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="created"></Parameter><Parameter name="payinadvance"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="cGlitemId"></Parameter><Parameter name="cashtype"></Parameter><Parameter name="amount"></Parameter><Parameter name="line"></Parameter><Parameter name="cOrderId"></Parameter><Parameter name="cOrderIdr"></Parameter>
   </SqlMethod>


   <SqlMethod name="selectAux0C25BF7F893543FA83EFC6F36FF3DA5C" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT PROCESSED FROM C_CASH WHERE C_CASH_ID = ? 
    ]]></Sql>

<Parameter name="C_CASH_ID"/>
  </SqlMethod>





   <SqlMethod name="selectDef5290_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef6673" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_CURRENCY_ID FROM C_CASHBOOK WHERE C_CASHBOOK_ID = ? 
    ]]></Sql>

<Parameter name="C_CashBook_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef800405_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table2.Name), '')  || ' - ' || COALESCE(TO_CHAR(table1.PaymentRule), '')  || ' - ' || COALESCE(TO_CHAR(table1.Dateplanned), '')  || ' - ' || COALESCE(TO_CHAR(table1.Amount), '')  || ' - ' || COALESCE(TO_CHAR(table1.IsReceipt), '') ) as C_Debt_Payment_ID FROM C_Debt_Payment table1 left join C_BPartner table2 on (table1.C_BPartner_ID = table2.C_BPartner_ID) WHERE table1.isActive='Y' AND table1.C_Debt_Payment_ID = ?  
    ]]></Sql>
<Parameter name="C_Debt_Payment_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5288_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef5292" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM C_CashLine WHERE C_Cash_ID=? 
    ]]></Sql>

<Parameter name="C_Cash_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef800209_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.DocumentNo), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '')  || ' - ' || COALESCE(TO_CHAR(table1.DateOrdered), '')  || ' - ' || COALESCE(TO_CHAR(table1.GrandTotal), '') ) as C_Order_ID FROM C_Order table1 WHERE table1.isActive='Y' AND table1.C_Order_ID = ?  
    ]]></Sql>
<Parameter name="C_Order_IDR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_CashLine.C_Cash_ID AS NAME
        FROM C_CashLine
        WHERE C_CashLine.C_CashLine_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_Cash left join (select C_Cash_ID, Name from C_Cash) table1 on (C_Cash.C_Cash_ID = table1.C_Cash_ID) WHERE C_Cash.C_Cash_ID = ?  
    ]]></Sql>
<Parameter name="cCashId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_Cash left join (select C_Cash_ID, Name from C_Cash) table1 on (C_Cash.C_Cash_ID = table1.C_Cash_ID) WHERE C_Cash.C_Cash_ID = ?  
    ]]></Sql>
<Parameter name="cCashId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_CashLine
        SET IsGenerated = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , C_Cash_ID = (?) , Line = TO_NUMBER(?) , Description = (?) , CashType = (?) , C_Glitem_ID = (?) , Amount = TO_NUMBER(?) , C_Currency_ID = (?) , C_Charge_ID = (?) , C_Debt_Payment_ID = (?) , DiscountAmt = TO_NUMBER(?) , WriteOffAmt = TO_NUMBER(?) , C_Order_ID = (?) , PayInAdvance = (?) , C_CashLine_ID = (?) , IsActive = (?) , updated = now(), updatedby = ? 
        WHERE C_CashLine.C_CashLine_ID = ? 
                 AND C_CashLine.C_Cash_ID = ? 
        AND C_CashLine.AD_Client_ID IN ('1') 
        AND C_CashLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="isgenerated"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cCashId"></Parameter> <Parameter name="line"></Parameter> <Parameter name="description"></Parameter> <Parameter name="cashtype"></Parameter> <Parameter name="cGlitemId"></Parameter> <Parameter name="amount"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="cChargeId"></Parameter> <Parameter name="cDebtPaymentId"></Parameter> <Parameter name="discountamt"></Parameter> <Parameter name="writeoffamt"></Parameter> <Parameter name="cOrderId"></Parameter> <Parameter name="payinadvance"></Parameter> <Parameter name="cCashlineId"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cCashlineId"></Parameter>
    
    <Parameter name="cCashId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_CashLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_CashLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_CashLine 
        (IsGenerated, AD_Client_ID, AD_Org_ID, C_Cash_ID, Line, Description, CashType, C_Glitem_ID, Amount, C_Currency_ID, C_Charge_ID, C_Debt_Payment_ID, DiscountAmt, WriteOffAmt, C_Order_ID, PayInAdvance, IsActive, C_CashLine_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="isgenerated"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cCashId"></Parameter> <Parameter name="line"></Parameter> <Parameter name="description"></Parameter> <Parameter name="cashtype"></Parameter> <Parameter name="cGlitemId"></Parameter> <Parameter name="amount"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="cChargeId"></Parameter> <Parameter name="cDebtPaymentId"></Parameter> <Parameter name="discountamt"></Parameter> <Parameter name="writeoffamt"></Parameter> <Parameter name="cOrderId"></Parameter> <Parameter name="payinadvance"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cCashlineId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_CashLine
        WHERE C_CashLine.C_CashLine_ID = ? 
                 AND C_CashLine.C_Cash_ID = ? 
        AND C_CashLine.AD_Client_ID IN ('1') 
        AND C_CashLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cCashId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_CashLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_CashLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_CashLine
        WHERE C_CashLine.C_CashLine_ID = ? 
                 AND C_CashLine.C_Cash_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cCashId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_CashLine
         WHERE C_CashLine.C_CashLine_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_CashLine
         WHERE C_CashLine.C_CashLine_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>