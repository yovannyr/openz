<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="ProductPriceExportData" package="org.openbravo.erpWindows.ExportPricelist">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(i_pricelist_v.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = i_pricelist_v.CreatedBy) as CreatedByR, 
        to_char(i_pricelist_v.Updated, ?) as updated, 
        to_char(i_pricelist_v.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        i_pricelist_v.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = i_pricelist_v.UpdatedBy) as UpdatedByR,
        i_pricelist_v.AD_Org_ID, 
(CASE WHEN i_pricelist_v.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Org_IDR, 
i_pricelist_v.M_Pricelist_Version_ID, 
(CASE WHEN i_pricelist_v.M_Pricelist_Version_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS M_Pricelist_Version_IDR, 
i_pricelist_v.M_Product_ID, 
(CASE WHEN i_pricelist_v.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
i_pricelist_v.Pricelist, 
i_pricelist_v.Pricestd, 
i_pricelist_v.Pricelimit, 
i_pricelist_v.AD_Client_ID, 
i_pricelist_v.I_Pricelist_V_ID, 
COALESCE(i_pricelist_v.Isactive, 'N') AS Isactive, 
 
        ? AS LANGUAGE 
        FROM i_pricelist_v left join (select AD_Org_ID, Name from AD_Org) table1 on (i_pricelist_v.AD_Org_ID = table1.AD_Org_ID) left join (select M_Pricelist_Version_ID, Name from M_Pricelist_Version) table2 on (i_pricelist_v.M_Pricelist_Version_ID = table2.M_Pricelist_Version_ID) left join (select M_Product_ID, Value, Name from M_Product) table3 on (i_pricelist_v.M_Product_ID = table3.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL3 on (table3.M_Product_ID = tableTRL3.M_Product_ID and tableTRL3.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND i_pricelist_v.I_Pricelist_V_ID = ? 
        AND i_pricelist_v.AD_Client_ID IN ('1') 
           AND i_pricelist_v.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="i_pricelist_v.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="i_pricelist_v.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="mPricelistVersionId"></Parameter><Parameter name="pricelimit"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="pricestd"></Parameter><Parameter name="mProductId"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="pricelist"></Parameter><Parameter name="iPricelistVId"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef39582F48438C42749C9FA37F2783F6B6_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef965F431894254E15A9627784ED485372_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef0DC396AB03294B62AB8C98707F3BE85C_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE i_pricelist_v
        SET AD_Org_ID = (?) , M_Pricelist_Version_ID = (?) , M_Product_ID = (?) , Pricelist = TO_NUMBER(?) , Pricestd = TO_NUMBER(?) , Pricelimit = TO_NUMBER(?) , AD_Client_ID = (?) , I_Pricelist_V_ID = (?) , Isactive = (?) , updated = now(), updatedby = ? 
        WHERE i_pricelist_v.I_Pricelist_V_ID = ? 
        
        AND i_pricelist_v.AD_Client_ID IN ('1') 
        AND i_pricelist_v.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="mPricelistVersionId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="pricelist"></Parameter> <Parameter name="pricestd"></Parameter> <Parameter name="pricelimit"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="iPricelistVId"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="iPricelistVId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="i_pricelist_v.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="i_pricelist_v.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO i_pricelist_v 
        (AD_Org_ID, M_Pricelist_Version_ID, M_Product_ID, Pricelist, Pricestd, Pricelimit, AD_Client_ID, I_Pricelist_V_ID, Isactive, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="mPricelistVersionId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="pricelist"></Parameter> <Parameter name="pricestd"></Parameter> <Parameter name="pricelimit"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="iPricelistVId"></Parameter> <Parameter name="isactive"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM i_pricelist_v
        WHERE i_pricelist_v.I_Pricelist_V_ID = ? 
        
        AND i_pricelist_v.AD_Client_ID IN ('1') 
        AND i_pricelist_v.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="i_pricelist_v.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="i_pricelist_v.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM i_pricelist_v
        WHERE i_pricelist_v.I_Pricelist_V_ID = ? 
        
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM i_pricelist_v
         WHERE i_pricelist_v.I_Pricelist_V_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM i_pricelist_v
         WHERE i_pricelist_v.I_Pricelist_V_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>