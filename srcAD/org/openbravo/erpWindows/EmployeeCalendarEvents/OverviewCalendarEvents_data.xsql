<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="OverviewCalendarEventsData" package="org.openbravo.erpWindows.EmployeeCalendarEvents">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_bpartneremployeeEVENT.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_bpartneremployeeEVENT.CreatedBy) as CreatedByR, 
        to_char(C_bpartneremployeeEVENT.Updated, ?) as updated, 
        to_char(C_bpartneremployeeEVENT.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_bpartneremployeeEVENT.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_bpartneremployeeEVENT.UpdatedBy) as UpdatedByR,
        C_bpartneremployeeEVENT.C_Bpartneremployeeevent_ID, 
C_bpartneremployeeEVENT.C_Bpartner_ID, 
(CASE WHEN C_bpartneremployeeEVENT.C_Bpartner_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
C_bpartneremployeeEVENT.Datefrom, 
C_bpartneremployeeEVENT.Dateto, 
C_bpartneremployeeEVENT.AD_Client_ID, 
C_bpartneremployeeEVENT.C_Calendarevent_ID, 
(CASE WHEN C_bpartneremployeeEVENT.C_Calendarevent_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), ''))),'') ) END) AS C_Calendarevent_IDR, 
COALESCE(C_bpartneremployeeEVENT.Reminder, 'N') AS Reminder, 
C_bpartneremployeeEVENT.Worktime, 
C_bpartneremployeeEVENT.Note, 
COALESCE(C_bpartneremployeeEVENT.IsActive, 'N') AS IsActive, 
C_bpartneremployeeEVENT.AD_Org_ID, 
 
        ? AS LANGUAGE 
        FROM C_bpartneremployeeEVENT left join (select C_BPartner_ID, Name from C_BPartner) table1 on (C_bpartneremployeeEVENT.C_Bpartner_ID =  table1.C_BPartner_ID) left join (select C_Calendarevent_ID, Name from C_CALENDAREVENT) table2 on (C_bpartneremployeeEVENT.C_Calendarevent_ID =  table2.C_Calendarevent_ID) left join (select C_Calendarevent_ID,AD_Language, Name from C_CALENDAREVENT_TRL) tableTRL2 on (table2.C_Calendarevent_ID = tableTRL2.C_Calendarevent_ID and tableTRL2.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND C_bpartneremployeeEVENT.C_Bpartneremployeeevent_ID = ? 
        AND C_bpartneremployeeEVENT.AD_Client_ID IN ('1') 
           AND C_bpartneremployeeEVENT.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_bpartneremployeeEVENT.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_bpartneremployeeEVENT.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="cCalendareventId"></Parameter><Parameter name="dateto"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="datefrom"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartneremployeeeventId"></Parameter><Parameter name="worktime"></Parameter><Parameter name="note"></Parameter><Parameter name="reminder"></Parameter><Parameter name="isactive"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDefF20C91E3BC1B46B384FD44CCDAF10471_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef0C53B14C4540481FA38D5E0B005FD8EC_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_bpartneremployeeEVENT
        SET C_Bpartneremployeeevent_ID = (?) , C_Bpartner_ID = (?) , Datefrom = TO_DATE(?) , Dateto = TO_DATE(?) , AD_Client_ID = (?) , C_Calendarevent_ID = (?) , Reminder = (?) , Worktime = TO_NUMBER(?) , Note = (?) , IsActive = (?) , AD_Org_ID = (?) , updated = now(), updatedby = ? 
        WHERE C_bpartneremployeeEVENT.C_Bpartneremployeeevent_ID = ? 
        
        AND C_bpartneremployeeEVENT.AD_Client_ID IN ('1') 
        AND C_bpartneremployeeEVENT.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cBpartneremployeeeventId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="datefrom"></Parameter> <Parameter name="dateto"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="cCalendareventId"></Parameter> <Parameter name="reminder"></Parameter> <Parameter name="worktime"></Parameter> <Parameter name="note"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cBpartneremployeeeventId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="C_bpartneremployeeEVENT.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_bpartneremployeeEVENT.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_bpartneremployeeEVENT 
        (C_Bpartneremployeeevent_ID, C_Bpartner_ID, Datefrom, Dateto, AD_Client_ID, C_Calendarevent_ID, Reminder, Worktime, Note, IsActive, AD_Org_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), TO_DATE(?), TO_DATE(?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cBpartneremployeeeventId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="datefrom"></Parameter> <Parameter name="dateto"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="cCalendareventId"></Parameter> <Parameter name="reminder"></Parameter> <Parameter name="worktime"></Parameter> <Parameter name="note"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_bpartneremployeeEVENT
        WHERE C_bpartneremployeeEVENT.C_Bpartneremployeeevent_ID = ? 
        
        AND C_bpartneremployeeEVENT.AD_Client_ID IN ('1') 
        AND C_bpartneremployeeEVENT.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="C_bpartneremployeeEVENT.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_bpartneremployeeEVENT.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_bpartneremployeeEVENT
        WHERE C_bpartneremployeeEVENT.C_Bpartneremployeeevent_ID = ? 
        
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_bpartneremployeeEVENT
         WHERE C_bpartneremployeeEVENT.C_Bpartneremployeeevent_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_bpartneremployeeEVENT
         WHERE C_bpartneremployeeEVENT.C_Bpartneremployeeevent_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>