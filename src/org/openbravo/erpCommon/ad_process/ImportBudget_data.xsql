<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SL 
 * All portions are Copyright (C) 2001-2008 Openbravo SL 
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->
<SqlClass name="ImportBudgetData" package="org.openbravo.erpCommon.ad_process">

  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT I_BudgetLine_ID, C_Budgetline_ID, '' as seqNo
        FROM I_BudgetLine
        WHERE I_IsImported='N'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="selectSeqNo" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT COALESCE(max(SeqNo),0) +10 as seqNo
        FROM C_BudgetLine
        WHERE C_Budget_ID = ?
      ]]>
    </Sql>
    <Parameter name="c_budget_id"/>
  </SqlMethod>


  <SqlMethod name="deleteOld" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      DELETE FROM I_BudgetLine WHERE I_IsImported='Y'
      AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
  <SqlMethod name="updateRecords" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET AD_Client_ID = COALESCE(AD_Client_ID, ?),
        AD_Org_ID = COALESCE(AD_Org_ID, '0'),
        IsActive = COALESCE(IsActive, 'Y'),
        Created = COALESCE(Created, now()),
        CreatedBy = COALESCE(CreatedBy, '0'),
        Updated = COALESCE(Updated, now()),
        UpdatedBy = COALESCE(UpdatedBy, '0'),
        I_ErrorMsg = NULL,
        I_IsImported = 'N',
        C_Budget_ID = ?
        WHERE I_IsImported<>'Y' OR I_IsImported IS NULL
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
    <Parameter name="c_budget_id"/>
  </SqlMethod>

  <SqlMethod name="updateBPartnerId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET C_BPartner_ID=(
          SELECT C_BPartner_ID FROM C_BPartner p
			    WHERE I_BudgetLine.PartnerIdent=AD_COLUMN_IDENTIFIER('C_BPARTNER', TO_CHAR(p.C_BPARTNER_ID), ?)
          AND p.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
			  WHERE C_BPartner_ID IS NULL
        AND PartnerIdent IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updatePartnerError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Partner, ' 
        WHERE C_BPartner_ID IS NULL
        AND PartnerIdent IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateBPGroupId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET C_BP_Group_ID=(
          SELECT C_BP_Group_ID FROM C_BP_Group g
			    WHERE I_BudgetLine.BPGroupIdent=AD_COLUMN_IDENTIFIER('C_BP_GROUP', TO_CHAR(g.C_BP_GROUP_ID), ?)
          AND g.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
			  WHERE C_BP_Group_ID IS NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
  <SqlMethod name="updateGroupError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Group, ' 
        WHERE C_BP_Group_ID IS NULL
        AND BPGROUPIDENT IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateProductId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET M_Product_ID=(
          SELECT M_Product_ID FROM M_Product p
			    WHERE I_BudgetLine.ProductIdent=AD_COLUMN_IDENTIFIER('M_PRODUCT', TO_CHAR(p.M_Product_ID), ?)
          AND p.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
			  WHERE M_Product_ID IS NULL
        AND ProductIdent IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateUomId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
        SET C_Uom_ID=(
          SELECT p.C_Uom_ID FROM M_Product p
          WHERE I_BudgetLine.M_Product_ID=p.M_Product_ID
          AND p.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
        WHERE M_Product_ID IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateProductError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Product, '
        WHERE M_Product_ID IS NULL
        AND ProductIdent IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateProdCatId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET M_Product_Category_ID=(
          SELECT M_Product_Category_ID FROM M_Product_Category p
			    WHERE I_BudgetLine.ProdCategoryIdent=AD_COLUMN_IDENTIFIER('M_PRODUCT_CATEGORY', TO_CHAR(p.M_Product_Category_ID), ?)
          AND p.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
			  WHERE M_Product_Category_ID IS NULL
        AND ProdCategoryIdent IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateProdCatError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Product Category, ' 
        WHERE M_Product_Category_ID IS NULL
        AND ProdCategoryIdent IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateTrxOrgId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
        SET AD_OrgTrx_ID=(
          SELECT AD_Org_ID FROM AD_Org o
          WHERE I_BudgetLine.OrgTrxIdent=AD_COLUMN_IDENTIFIER('AD_ORG', TO_CHAR(o.AD_Org_ID), ?)
        )
        WHERE AD_OrgTrx_ID IS NULL
         AND OrgTrxIdent IS NOT NULL
         AND I_IsImported<>'Y'
         AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateTrxOrgError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Trx Organization, ' 
        WHERE AD_OrgTrx_ID IS NULL
        AND OrgTrxIdent IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateSalesRegionId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET C_SalesRegion_ID=(
          SELECT C_SalesRegion_ID FROM C_SalesRegion sr
			    WHERE I_BudgetLine.SalesRegionIdent=AD_COLUMN_IDENTIFIER('C_SALESREGION', TO_CHAR(sr.C_SalesRegion_ID), ?)
          AND sr.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
			  WHERE C_SalesRegion_ID IS NULL
        AND SalesRegionIdent IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateSalesRegionError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Sales Region, ' 
        WHERE C_SalesRegion_ID IS NULL
        AND SalesRegionIdent IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateProjectId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET C_Project_ID=(
          SELECT C_Project_ID FROM C_Project p
			    WHERE I_BudgetLine.ProjectIdent=AD_COLUMN_IDENTIFIER('C_PROJECT', TO_CHAR(p.C_Project_ID), ?)
          AND p.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
			  WHERE C_Project_ID IS NULL
        AND ProjectIdent IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateProjectError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Project, ' 
        WHERE C_Project_ID IS NULL
        AND ProjectIdent IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateCampaignId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET C_Campaign_ID=(
          SELECT C_Campaign_ID FROM C_Campaign p
			    WHERE I_BudgetLine.CampaignIdent=AD_COLUMN_IDENTIFIER('C_CAMPAIGN', TO_CHAR(p.C_Campaign_ID), ?)
          AND p.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
			  WHERE C_Campaign_ID IS NULL
        AND CampaignIdent IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateCampaignError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Campaign, ' 
        WHERE C_Campaign_ID IS NULL
        AND CampaignIdent IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateActivityId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET C_Activity_ID=(
          SELECT C_Activity_ID FROM C_Activity p
			    WHERE I_BudgetLine.ActivityIdent=AD_COLUMN_IDENTIFIER('C_ACTIVITY', TO_CHAR(p.C_Activity_ID), ?)
          AND p.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
			  WHERE C_Activity_ID IS NULL
        AND ActivityIdent IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateActivityError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Activity, ' 
        WHERE C_Activity_ID IS NULL
        AND ActivityIdent IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateAccountId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET C_ELEMENTVALUE_ID=(
          SELECT C_ELEMENTVALUE_ID FROM C_ELEMENTVALUE v
			    WHERE I_BudgetLine.ELEMENTVALUEIDENT=AD_COLUMN_IDENTIFIER('C_ELEMENTVALUE', TO_CHAR(v.C_ELEMENTVALUE_ID), ?)
          AND v.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
			  WHERE C_ELEMENTVALUE_ID IS NULL
        AND ELEMENTVALUEIDENT IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateAccountIdError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Account ID, ' 
        WHERE C_ELEMENTVALUE_ID IS NULL
        AND ELEMENTVALUEIDENT IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>






  <SqlMethod name="updateAcctSchemaId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET C_ACCTSCHEMA_ID=(
          SELECT C_ACCTSCHEMA_ID FROM C_ACCTSCHEMA p
			    WHERE I_BudgetLine.ACCTSCHEMAIDENT=AD_COLUMN_IDENTIFIER('C_ACCTSCHEMA', TO_CHAR(p.C_ACCTSCHEMA_ID), ?)
          AND p.AD_Client_ID=I_BudgetLine.AD_Client_ID
        )
			  WHERE C_ACCTSCHEMA_ID IS NULL
        AND ACCTSCHEMAIDENT IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateAcctSchemaError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Account Schema, ' 
        WHERE C_ACCTSCHEMA_ID IS NULL
        AND ACCTSCHEMAIDENT IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>







  <SqlMethod name="updatePeriodId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET C_Period_ID=(
          SELECT C_Period_ID FROM C_Period p, AD_Month m
			    WHERE I_BudgetLine.PeriodIdent=m.Name
          AND p.PeriodNo = m.Value
          AND p.AD_Client_ID=I_BudgetLine.AD_Client_ID
          AND p.C_Year_ID = (SELECT C_Year_ID FROM C_Budget WHERE C_Budget_ID = ?)
        )
			  WHERE C_Period_ID IS NULL
        AND PeriodIdent IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="cBudgetId"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updatePeriodError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Period, ' 
        WHERE C_Period_ID IS NULL
        AND PeriodIdent IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateCurrencyId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
			  SET C_Currency_ID=(
          SELECT C_Currency_ID FROM C_Currency p
			    WHERE I_BudgetLine.CurrencyIdent=AD_COLUMN_IDENTIFIER('C_CURRENCY', TO_CHAR(p.C_Currency_ID), ?)
        )
			  WHERE C_Currency_ID IS NULL
        AND CurrencyIdent IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="adlanguage"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateCurrencyError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid currency, ' 
        WHERE C_Currency_ID IS NULL
        AND CurrencyIdent IS NOT NULL
        AND I_IsImported<>'Y'
        AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateBudgetLineId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine 
        SET C_BudgetLine_ID=(
            SELECT MIN(C_BudgetLine_ID) FROM C_BudgetLine bl
            WHERE COALESCE(I_BudgetLine.C_ELEMENTVALUE_ID,-1) = COALESCE(bl.C_ELEMENTVALUE_ID,-1)
              AND COALESCE(I_BudgetLine.C_Period_ID,-1) = COALESCE(bl.C_Period_ID,-1)
              AND COALESCE(I_BudgetLine.C_Bpartner_ID,-1) = COALESCE(bl.C_Bpartner_ID,-1)
              AND COALESCE(I_BudgetLine.AD_OrgTrx_ID,-1) = COALESCE(bl.AD_OrgTrx_ID,-1)
              AND COALESCE(I_BudgetLine.C_SalesRegion_ID,-1) = COALESCE(bl.C_SalesRegion_ID,-1)
              AND COALESCE(I_BudgetLine.C_Project_ID,-1) = COALESCE(bl.C_Project_ID,-1)
              AND COALESCE(I_BudgetLine.C_Campaign_ID,-1) = COALESCE(bl.C_Campaign_ID,-1)
              AND COALESCE(I_BudgetLine.C_Activity_ID,-1) = COALESCE(bl.C_Activity_ID,-1)
              AND COALESCE(I_BudgetLine.C_BP_Group_ID,-1) = COALESCE(bl.C_BP_Group_ID,-1)
              AND COALESCE(I_BudgetLine.M_Product_ID,-1) = COALESCE(bl.M_Product_ID,-1)
              AND COALESCE(I_BudgetLine.M_Product_Category_ID,-1) = COALESCE(bl.M_Product_Category_ID,-1)
              AND COALESCE(I_BudgetLine.C_Currency_ID,-1) = COALESCE(bl.C_Currency_ID,-1)
              AND bl.C_Budget_ID = ?
              AND bl.AD_Client_ID = I_BudgetLine.AD_Client_ID
            )
        WHERE I_IsImported='N'
          AND AD_Client_ID = ?
      ]]>
    </Sql>
    <Parameter name="cBudgetId"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="insertBudgetLine" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        INSERT INTO C_BudgetLine (C_Budgetline_ID, AD_Client_ID, AD_Org_ID, Isactive, Created, Createdby, 
            Updated, Updatedby, C_ELEMENTVALUE_ID, C_ACCTSCHEMA_ID, C_Period_ID, C_Currency_ID, C_Uom_ID, Qty, M_Product_ID, 
            C_Bpartner_ID, AD_Orgtrx_ID, C_Salesregion_ID, C_Project_ID, C_Campaign_ID, C_Activity_ID, Description, 
            Seqno, C_Bp_Group_ID, M_Product_Category_ID, C_Budget_ID, Amount, Price)
            SELECT ?, AD_Client_ID, AD_Org_ID, 'Y',now(),CreatedBy,
            now(),UpdatedBy, C_ELEMENTVALUE_ID, C_ACCTSCHEMA_ID, C_Period_ID, C_Currency_ID, C_Uom_ID, Qty, M_Product_ID, 
            C_Bpartner_ID, AD_Orgtrx_ID, C_Salesregion_ID, C_Project_ID, C_Campaign_ID, C_Activity_ID, Description, 
            TO_NUMBER(?), C_Bp_Group_ID, M_Product_Category_ID, C_Budget_ID, Amount, Price
            FROM I_BudgetLine
            WHERE I_BudgetLine_ID=?
      ]]>
    </Sql>
    <Parameter name="CBudgetLineID"/>
    <Parameter name="seqno"/>
    <Parameter name="IBudgetLineID"/>
  </SqlMethod>

  <SqlMethod name="insertBudgetLineError" type="preparedStatement" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
	    UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'') || 'Insert BudgetLine error: ' || ?
        WHERE I_BudgetLine_ID=?
      ]]>
    </Sql>
	<Parameter name="error"/>
    <Parameter name="I_BudgetLine_id"/>
  </SqlMethod>

  <SqlMethod name="updateBudgetLine" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE C_BudgetLine
        SET 
          Qty=(
          SELECT Qty
          FROM I_BudgetLine
          WHERE I_BudgetLine_ID=?
        ),
          Amount=(
          SELECT Amount
          FROM I_BudgetLine
          WHERE I_BudgetLine_ID=?
        ),
          Price=(
          SELECT Price
          FROM I_BudgetLine
          WHERE I_BudgetLine_ID=?
        ),
          Updated=now()
        ,
          UpdatedBy=(
          SELECT UpdatedBy
          FROM I_BudgetLine
          WHERE I_BudgetLine_ID=?
        )
        WHERE C_BudgetLine_ID=?
      ]]>
    </Sql>
    <Parameter name="IBudgetLineID"/>
    <Parameter name="CBudgetLineID"/>
  </SqlMethod>

  <SqlMethod name="updateBudgetLineError" type="preparedStatement" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
	    UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'') || 'Update BudgetLine error: ' || ?
        WHERE I_BudgetLine_ID=?
      ]]>
    </Sql>
	<Parameter name="error"/>
    <Parameter name="I_BudgetLine_id"/>
  </SqlMethod>

  <SqlMethod name="updateSetImportedError" type="preparedStatement" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
	    UPDATE I_BudgetLine
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'') || 'Set imported error: ' || ?
        WHERE I_BudgetLine_ID=?
      ]]>
    </Sql>
	<Parameter name="error"/>
    <Parameter name="I_BudgetLine_id"/>
  </SqlMethod>

  <SqlMethod name="setImported" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='Y', C_BudgetLine_id = ?, Updated=now(), Processed='Y'
        WHERE I_BudgetLine_ID=?
      ]]>
    </Sql>
    <Parameter name="CBudgetLineID"/>
    <Parameter name="IBudgetLineID"/>
  </SqlMethod>

  <SqlMethod name="updateNotImported" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_BudgetLine
        SET I_IsImported='N', Updated=now()
        WHERE I_IsImported<>'Y'
        AND AD_CLIENT_ID = ?
      ]]>
    </Sql>
    <Parameter name="client"/>
  </SqlMethod>

</SqlClass>
