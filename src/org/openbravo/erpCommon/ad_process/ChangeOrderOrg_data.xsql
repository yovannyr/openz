<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SL 
 * All portions are Copyright (C) 2001-2006 Openbravo SL 
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->





<SqlClass name="ChangeOrderOrgData" package="org.openbravo.erpCommon.ad_process">
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT o.C_Order_ID AS ID, og.NAME AS ORG, o.DocumentNo, bp.NAME, o.DateOrdered, o.GRANDTOTAL, 
        l.Name as PaymentRule, og2.Name AS FORCED_ORG, '' AS M_INOUT_ID
        FROM C_ORDER o left join AD_Ref_List_V l on o.PaymentRule = l.Value 
                                                AND l.AD_Reference_ID = '195' 
                                                AND l.AD_Language = ? ,
             C_BPARTNER bp left join AD_Org og2 on bp.AD_Forced_Org_ID = og2.AD_Org_ID,  
             C_ORDERLINE ol, AD_Org og
        WHERE bp.C_BPartner_ID=o.C_BPartner_ID
        AND o.C_Order_ID = ol.C_Order_ID
        AND o.AD_Org_ID = og.AD_Org_ID 
        AND o.AD_Client_ID IN ('1') 
        AND o.AD_Org_ID IN ('1') 
        AND o.DocStatus IN ('CO','CL') 
        AND o.IsSOTrx='Y' 
        AND ol.QtyInvoiced= 0
        AND ol.QTYORDERED<>0
        AND NOT EXISTS(SELECT 1 FROM C_CashLine l, C_Cash c WHERE l.C_Cash_ID = c.C_Cash_ID 
        AND l.C_Order_ID = o.C_Order_ID AND c.Processed = 'Y')
        GROUP BY o.C_Order_ID, og.NAME, o.DocumentNo, bp.NAME, o.DateOrdered, l.Name, og2.Name, o.GRANDTOTAL
        ORDER BY O.DOCUMENTNO
      ]]>
    </Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="adLanguage"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="o.AD_Client_ID IN (" text="'1'"/>
    <Parameter name="adOrgClient" type="replace" optional="true" after="o.AD_Org_ID IN (" text="'1'"/>
    <Parameter name="cBpartnerId" optional="true" after="AND o.IsSOTrx='Y' " text=" AND o.C_BPartner_ID = ? "/>
    <Parameter name="adOrgId" optional="true" after="AND o.IsSOTrx='Y' " text=" AND o.AD_Org_ID = ? "/>
    <Parameter name="paymentrule" optional="true" after="AND o.IsSOTrx='Y' " text=" AND o.PaymentRule = ? "/>
    <Parameter name="adwarehouseid" optional="true" after="AND o.IsSOTrx='Y' " text=" AND o.m_warehouse_id = ? "/>
  </SqlMethod>
  <SqlMethod name="selectBPartner" type="preparedStatement" return="String" default="">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT NAME FROM C_BPARTNER WHERE C_BPARTNER_ID = ?
      ]]>
    </Sql>
    <Parameter name="cBpartnerId"/>
  </SqlMethod>
  <SqlMethod name="selectDocbasetype" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT DOCBASETYPE
        FROM C_ORDER, C_DOCTYPE C1
        WHERE C_ORDER.C_DOCTYPE_ID = C1.C_DOCTYPE_ID
        AND C_ORDER_ID= ?
      ]]>
    </Sql>
     <Parameter name="cOrderId"/>
  </SqlMethod>
  <SqlMethod name="selectDocsubtypeso" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT DOCSUBTYPESO
        FROM C_ORDER, C_DOCTYPE C1
        WHERE C_ORDER.C_DOCTYPE_ID = C1.C_DOCTYPE_ID
        AND C_ORDER_ID= ?
      ]]>
    </Sql>
     <Parameter name="cOrderId"/>
  </SqlMethod>
  <SqlMethod name="cDocttypeshipment" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT C_DOCTYPESHIPMENT_ID FROM C_DOCTYPE
        WHERE C_DOCTYPE_ID = ?
      ]]>
    </Sql>
     <Parameter name="cDoctypeId"/>
  </SqlMethod>
  <SqlMethod name="selectDoctypeneworg" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT C_DOCTYPE_ID
        FROM C_DOCTYPE
        WHERE DOCBASETYPE = ?
        AND DOCSUBTYPESO = ?
        AND AD_ORG_ID = ?
      ]]>
    </Sql>
     <Parameter name="docbasetype"/>
     <Parameter name="docsubtypeso"/>
     <Parameter name="adOrgId"/>
  </SqlMethod>
  <SqlMethod name="selectExistsShipment" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT COUNT(*)
        FROM C_ORDER
        WHERE EXISTS (SELECT 1 FROM M_INOUT, M_INOUTLINE, C_ORDERLINE
                     WHERE M_INOUT.M_INOUT_ID = M_INOUTLINE.M_INOUT_ID
                     AND M_INOUTLINE.C_ORDERLINE_ID = C_ORDERLINE.C_ORDERLINE_ID
                     AND C_ORDERLINE.C_ORDER_ID = ?
                     )
        AND C_ORDER.C_ORDER_ID= ?
      ]]>
    </Sql>
    <Parameter name="cOrderId"/>
    <Parameter name="cOrderId"/>
  </SqlMethod>
  <SqlMethod name="selectShipment" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT DISTINCT M_INOUT.M_INOUT_ID FROM M_INOUT, M_INOUTLINE, C_ORDERLINE
        WHERE M_INOUT.M_INOUT_ID = M_INOUTLINE.M_INOUT_ID
        AND M_INOUTLINE.C_ORDERLINE_ID = C_ORDERLINE.C_ORDERLINE_ID
        AND C_ORDERLINE.C_ORDER_ID = ?
      ]]>
    </Sql>
    <Parameter name="cOrderId"/>
  </SqlMethod>
  <SqlMethod name="checkRestrictions" type="preparedStatement" connection="true" return="boolean">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT COUNT(*) AS TOTAL
        FROM C_ORDER o, C_ORDERLINE ol 
        WHERE o.DocStatus IN ('CO', 'CL') 
        AND o.IsSOTrx='Y' 
        AND o.C_Order_ID = ? 
        AND o.C_Order_ID = ol.C_Order_ID
        AND (EXISTS(SELECT 1 FROM C_CashLine l, C_Cash c WHERE l.C_Cash_ID = c.C_Cash_ID 
        OR l.C_Order_ID = o.C_Order_ID AND c.Processed = 'Y')
        AND EXISTS(SELECT 1 FROM C_InvoiceLine a_il , C_Invoice a_i
                       WHERE a_il.C_Invoice_ID = a_i.C_Invoice_ID
                       AND a_i.DOCSTATUS NOT IN ('CL','RE')
                       AND a_il.C_OrderLine_ID = ol.C_OrderLine_ID))
      ]]>
    </Sql>
    <Parameter name="cOrderId"/>
  </SqlMethod>
  <SqlMethod name="shouldDeleteCashLine" type="preparedStatement" connection="true" return="boolean">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT COALESCE(MAX((CASE o.PaymentRule WHEN 'C' THEN (CASE WHEN cl.C_CashLine_ID IS NULL THEN 1 ELSE 0 END) ELSE 0 END)),0) AS SHOULDDELETE
        FROM C_ORDER o left join C_CASHLINE cl on o.C_Order_ID = cl.C_Order_ID 
        WHERE o.C_Order_ID = ?
      ]]>
    </Sql>
    <Parameter name="cOrderId"/>
  </SqlMethod>
  <SqlMethod name="deleteCashLine" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        DELETE FROM C_CASHLINE
        WHERE C_ORDER_ID = ? 
        AND EXISTS (SELECT 1 FROM C_CASH WHERE PROCESSED='N' AND C_CASH_ID = C_CASHLINE.C_CASH_ID)
      ]]>
    </Sql>
    <Parameter name="cOrderId"/>
  </SqlMethod>
  <SqlMethod name="resetOrder" type="callableStatement" connection="true" return="object" object="ChangeOrderOrgData">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        CALL C_Order_Fact_Reset(?)
      ]]>
    </Sql>
    <Parameter name="cOrderId"/>
  </SqlMethod>
  <SqlMethod name="updateMtransaction" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE M_TRANSACTION SET AD_ORG_id = ?, UPDATED = now(), UPDATEDBY = ? 
        WHERE M_INOUTLINE_ID IN (SELECT M_INOUTLINE_ID FROM M_INOUTLINE WHERE M_INOUT_ID = ?)
      ]]>
    </Sql>
    <Parameter name="adOrgId"/>
    <Parameter name="adUserId"/>
    <Parameter name="mInoutId"/>
  </SqlMethod>
  <SqlMethod name="updateDocAction" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE C_ORDER SET UPDATED=now(), UPDATEDBY = ?, DOCSTATUS='CO', DOCACTION='RE' 
        WHERE C_ORDER_ID = ? 
      ]]>
    </Sql>
    <Parameter name="adUserId"/>
    <Parameter name="cOrderId"/>
  </SqlMethod>
  <SqlMethod name="updateProcessed" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE M_INOUT SET UPDATED=now(), UPDATEDBY = ?, PROCESSED = 'N'
        WHERE M_INOUT_ID = ? 
      ]]>
    </Sql>
    <Parameter name="adUserId"/>
    <Parameter name="mInoutId"/>
  </SqlMethod>
  <SqlMethod name="updateShipment" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE M_INOUT SET UPDATED=now(), UPDATEDBY = ?, DOCUMENTNO= ?, C_DOCTYPE_ID = ?, AD_ORG_ID = ?, PROCESSED = 'Y'
        WHERE M_INOUT_ID = ? 
      ]]>
    </Sql>
    <Parameter name="adUserId"/>
    <Parameter name="documentno"/>
    <Parameter name="cDoctypeId"/>
    <Parameter name="adOrgId"/>
    <Parameter name="mInoutId"/>
  </SqlMethod>
  <SqlMethod name="updateShipmentlines" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE M_INOUTLINE SET UPDATED=now(), UPDATEDBY = ?, AD_ORG_ID = ?
        WHERE M_INOUT_ID = ? 
      ]]>
    </Sql>
    <Parameter name="adUserId"/>
    <Parameter name="adOrgId"/>
    <Parameter name="mInoutId"/>
  </SqlMethod>
  <SqlMethod name="insertPInstance" connection="true" type="preparedStatement" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      INSERT INTO AD_PINSTANCE (AD_PINSTANCE_ID, AD_PROCESS_ID, RECORD_ID, ISPROCESSING, CREATED, AD_USER_ID, UPDATED, AD_CLIENT_ID, AD_ORG_ID, CREATEDBY, UPDATEDBY)
      VALUES(?,?,?,'N',now(),?,now(), ?, ?, ?, ?)
    </Sql>
    <Parameter name="adPinstanceId"/>
    <Parameter name="adProcessId"/>
    <Parameter name="recordId"/>
    <Parameter name="adUserId"/>
    <Parameter name="adClientId"/>
    <Parameter name="adOrgId"/>
    <Parameter name="adUserId"/>
    <Parameter name="adUserId"/>
  </SqlMethod>
  <SqlMethod name="processOrder" type="callableStatement" connection="true" return="object" object="ChangeOrderOrgData">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        CALL C_Order_Post(?)
      ]]></Sql>
      <Parameter name="adPinstanceId"/>
   </SqlMethod>
  <SqlMethod name="updateLines" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE C_ORDERLINE SET UPDATED=now(), UPDATEDBY = ?, AD_ORG_id = ? 
        WHERE C_ORDER_ID = ? 
      ]]>
    </Sql>
    <Parameter name="cTaxId" optional="true" after="UPDATED=now()" text=", C_Tax_ID=?"/>
    <Parameter name="adUserId"/>
    <Parameter name="adOrgId"/>
    <Parameter name="cOrderId"/>
  </SqlMethod>
  <SqlMethod name="update" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE C_ORDER SET UPDATED=now(), UPDATEDBY = ?, AD_ORG_id = ?, C_DOCTYPE_ID = ?, C_DOCTYPETARGET_ID = ?
        WHERE C_ORDER_ID = ? 
      ]]>
    </Sql>
    <Parameter name="adUserId"/>
    <Parameter name="adOrgId"/>
    <Parameter name="cDoctypeId"/>
    <Parameter name="cDoctypetargetId"/>
    <Parameter name="cOrderId"/>
  </SqlMethod>
</SqlClass>
