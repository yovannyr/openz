<?xml version="1.0" encoding="UTF-8" ?>
<!--
***************************************************************************************************************************************************
* The contents of this file are subject to the Openbravo  Public  License Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html. Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for the specific  language  governing  rights  and  limitations
* under the License. The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL. Parts created by Openbravo are Copyright (C) 2001-2009 Openbravo SL
* All Rights Reserved.
* Contributor(s): Stefan Zimmermann, sz@zimmermann-software.de (SZ) Contributions are Copyright (C) 2011 Stefan Zimmermann
****************************************************************************************************************************************************
-->





<SqlClass name="BusinessPartnerData" package="org.openbravo.erpCommon.info">
   <SqlClassComment></SqlClassComment>
   <SqlMethod name="select" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql> <![CDATA[
      		SELECT * FROM ( SELECT '0' AS RN1, A.* FROM (      				   
					select
                            bp.C_BPartner_ID, bp.value, bp.name as name, 
                            bp.name as name_hidden, 
                            c.name AS Contact, c.ad_user_id as C_BPartner_Contact_ID, coalesce(c.phone,bpl.Phone) as phone, l.Postal AS PC, 
                            bpl.c_bpartner_location_id as C_BPartner_Location_ID,
                            l.City, l.address1,l.address2,
                            bp.C_BPartner_ID || '#' || COALESCE(TO_CHAR(c.ad_user_id), '') || '#' || COALESCE(TO_CHAR(bpl.c_bpartner_location_id),'') || '#' || bp.name AS rowKey  
                            FROM C_BPARTNER_LOCATION bpl,C_LOCATION l ,
                                 C_BPARTNER bp left join AD_USER c on bp.c_bpartner_id = c.c_bpartner_id 
                                 AND c.IsActive ='Y'
                            WHERE bp.c_bpartner_id = bpl.c_bpartner_id and 
                                  bpl.IsActive = 'Y' and 
                                  case when bp.isemployee='Y' then (bp.iscustomer='Y' or bp.isvendor='Y') else 1=1 end and
                                  bpl.c_location_id=l.C_Location_ID and 
                                  case when c.ad_user_id is not null then case when c.c_bpartner_location_id is not null then c.c_bpartner_location_id=bpl.c_bpartner_location_id else bpl.isheadquarter='Y' end else 1=1 end and
        					        bp.AD_Client_ID IN ('1') 
        					        AND bp.AD_Org_ID IN ('1') 
        					        AND bp.IsSummary='N' 
        					        AND bp.IsActive='Y'
					        ORDER BY bp.value
					) A ) B
			WHERE 1=1
      ]]></Sql>
        <Field name="position" value="count"/>
        <Parameter name="rownum" type="replace" optional="true" after="FROM ( SELECT " text="'0'" />
        <Parameter name="xclients" optional="true" type="none" after="AND c.IsActive ='Y'"><![CDATA[AND c.ad_user_id = 'a']]></Parameter>
        <Parameter name="xvendors" optional="true" type="none" after="AND c.IsActive ='Y'"><![CDATA[AND c.ad_user_id = 'a']]></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="bp.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adUserOrg" type="replace" optional="true" after="bp.AD_Org_ID IN (" text="'1'"/>
        <Parameter name="key" ignoreValue="%" optional="true" after="AND bp.IsActive='Y'"><![CDATA[AND UPPER(bp.Value) LIKE UPPER(?) ]]></Parameter>
        <Parameter name="name" ignoreValue="%" optional="true" after="AND bp.IsActive='Y'"><![CDATA[AND C_IGNORE_ACCENT(bp.Name) LIKE C_IGNORE_ACCENT(?) ]]></Parameter>
        <Parameter name="contact" ignoreValue="%" optional="true" after="AND bp.IsActive='Y'"><![CDATA[AND UPPER(c.name) LIKE UPPER(?) ]]></Parameter>
        <Parameter name="codigoPostal" ignoreValue="%" optional="true" after="AND bp.IsActive='Y'"><![CDATA[AND UPPER(l.Postal) LIKE UPPER(?) ]]></Parameter>
        <Parameter name="clients" optional="true" type="none" after="AND bp.IsActive='Y'"><![CDATA[AND bp.ISCUSTOMER = 'Y']]></Parameter>
        <Parameter name="vendors" optional="true" type="none" after="AND bp.IsActive='Y'"><![CDATA[AND bp.ISVENDOR ='Y']]></Parameter>
        <Parameter name="ciudad" ignoreValue="%" optional="true" after="AND bp.IsActive='Y'"><![CDATA[AND UPPER(l.City) LIKE UPPER(?) ]]></Parameter>
        <Parameter name="orderBy" type="replace" optional="true" after="ORDER BY " text="bp.value" />
        <Parameter name="pgLimit" type="argument" optional="true" after="ORDER BY bp.value"><![CDATA[LIMIT ]]></Parameter>
   </SqlMethod>

   <SqlMethod name="countRows" type="preparedStatement" return="String">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
	      SELECT COUNT(*) AS VALUE  
	        FROM ( SELECT '0' AS rn1, B.* FROM 
	      (SELECT 1 FROM C_BPARTNER_LOCATION bpl,C_LOCATION l ,
                                 C_BPARTNER bp left join AD_USER c on bp.c_bpartner_id = c.c_bpartner_id 
                                 AND c.IsActive ='Y'
                            WHERE bp.c_bpartner_id = bpl.c_bpartner_id and 
                                  bpl.IsActive = 'Y' and 
                                  case when bp.isemployee='Y' then (bp.iscustomer='Y' or bp.isvendor='Y') else 1=1 end and
                                  bpl.c_location_id=l.C_Location_ID and 
                                  case when c.ad_user_id is not null then case when c.c_bpartner_location_id is not null then c.c_bpartner_location_id=bpl.c_bpartner_location_id else bpl.isheadquarter='Y' end else 1=1 end and
                                    bp.AD_Client_ID IN ('1') 
                                    AND bp.AD_Org_ID IN ('1') 
                                    AND bp.IsSummary='N' 
                                    AND bp.IsActive='Y'
        	                        AND 1=1
	        ) B
	        ) A  
      ]]></Sql>
        <Field name="position" value="count"/>     
        <Parameter name="rownum" type="replace" optional="true" after="FROM ( SELECT " text="'0'" />  
        <Parameter name="xclients" optional="true" type="none" after="AND c.IsActive ='Y'"><![CDATA[AND c.ad_user_id = 'a']]></Parameter>
        <Parameter name="xvendors" optional="true" type="none" after="AND c.IsActive ='Y'"><![CDATA[AND c.ad_user_id = 'a']]></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="bp.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adUserOrg" type="replace" optional="true" after="bp.AD_Org_ID IN (" text="'1'"/>
        <Parameter name="key" ignoreValue="%" optional="true" after="AND bp.IsActive='Y'"><![CDATA[AND UPPER(bp.Value) LIKE UPPER(?) ]]></Parameter>
        <Parameter name="name" ignoreValue="%" optional="true" after="AND bp.IsActive='Y'"><![CDATA[AND C_IGNORE_ACCENT(bp.Name) LIKE C_IGNORE_ACCENT(?) ]]></Parameter>
        <Parameter name="contact" ignoreValue="%" optional="true" after="AND bp.IsActive='Y'"><![CDATA[AND UPPER(c.name) LIKE UPPER(?) ]]></Parameter>
        <Parameter name="codigoPostal" ignoreValue="%" optional="true" after="AND bp.IsActive='Y'"><![CDATA[AND UPPER(l.Postal) LIKE UPPER(?) ]]></Parameter>
        <Parameter name="clients" optional="true" type="none" after="AND bp.IsActive='Y'"><![CDATA[AND bp.ISCUSTOMER = 'Y']]></Parameter>
        <Parameter name="vendors" optional="true" type="none" after="AND bp.IsActive='Y'"><![CDATA[AND bp.ISVENDOR ='Y']]></Parameter>
        <Parameter name="ciudad" ignoreValue="%" optional="true" after="AND bp.IsActive='Y'"><![CDATA[AND UPPER(l.City) LIKE UPPER(?) ]]></Parameter>
        <Parameter name="pgLimit" type="argument" optional="true" after="AND 1=1"><![CDATA[LIMIT ]]></Parameter>
   </SqlMethod>
   <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql></Sql>
   </SqlMethod>
   <SqlMethod name="selectKey" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql> <![CDATA[
      SELECT A.* FROM (                      
                       select
                            bp.C_BPartner_ID, bp.value, bp.name as name, 
                            bp.name as name_hidden, 
                            c.name AS Contact, c.ad_user_id as C_BPartner_Contact_ID, bpl.Phone, l.Postal AS PC, 
                            bpl.c_bpartner_location_id as C_BPartner_Location_ID,
                            l.City, l.address1,l.address2,
                            bp.C_BPartner_ID || '#' || COALESCE(TO_CHAR(c.ad_user_id), '') || '#' || COALESCE(TO_CHAR(bpl.c_bpartner_location_id),'') || '#' || bp.name AS rowKey  
                            FROM C_BPARTNER_LOCATION bpl,C_LOCATION l ,
                                 C_BPARTNER bp left join AD_USER c on bp.c_bpartner_id = c.c_bpartner_id 
                                 AND c.IsActive ='Y'
                            WHERE bp.c_bpartner_id = bpl.c_bpartner_id and 
                                  bpl.IsActive = 'Y' and 
                                  bpl.c_location_id=l.C_Location_ID and 
                                  case when c.ad_user_id is not null then case when c.c_bpartner_location_id is not null then c.c_bpartner_location_id=bpl.c_bpartner_location_id else bpl.isheadquarter='Y' end else 1=1 end and
                                    bp.AD_Client_ID IN ('1') 
                                    AND bp.AD_Org_ID IN ('1') 
                                    AND bp.IsSummary='N' 
                                    AND bp.IsActive='Y'
                            AND UPPER(bp.VALUE) LIKE UPPER(?)
                            ORDER BY bp.name
      ) A 
      ]]></Sql>
        <Parameter name="xclients" optional="true" type="none" after="AND c.IsActive ='Y'"><![CDATA[AND c.ad_user_id = 'a']]></Parameter>
        <Parameter name="xvendors" optional="true" type="none" after="AND c.IsActive ='Y'"><![CDATA[AND c.ad_user_id = 'a']]></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="bp.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adUserOrg" type="replace" optional="true" after="bp.AD_Org_ID IN (" text="'1'"/>
        <Parameter name="clients" optional="true" type="none" after="AND bp.IsActive='Y'"><![CDATA[AND bp.ISCUSTOMER = 'Y']]></Parameter>
        <Parameter name="vendors" optional="true" type="none" after="AND bp.IsActive='Y'"><![CDATA[AND bp.ISVENDOR ='Y']]></Parameter>
        <Parameter name="key"/>
        <Parameter name="pgLimit" type="argument" optional="true" after="ORDER BY bp.name"><![CDATA[LIMIT ]]></Parameter>
   </SqlMethod>
   <SqlMethod name="existsActual" type="preparedStatement" return="String" default="">
      <SqlMethodComment></SqlMethodComment>
      <Sql> <![CDATA[
        SELECT bp.name as name
        FROM C_BPARTNER bp 
        WHERE UPPER(bp.name) = UPPER(?)
        AND bp.C_BPartner_ID = ? 
        ORDER BY bp.name
      ]]></Sql>
        <Parameter name="description"/>
        <Parameter name="cBpartnerId"/>
   </SqlMethod>
   <SqlMethod name="existsActualValue" type="preparedStatement" return="String" default="">
      <SqlMethodComment></SqlMethodComment>
      <Sql> <![CDATA[
        SELECT bp.value as value
        FROM C_BPARTNER bp 
        WHERE UPPER(bp.name) = UPPER(?)
        AND bp.C_BPartner_ID = ? 
        ORDER BY bp.value
      ]]></Sql>
        <Parameter name="description"/>
        <Parameter name="cBpartnerId"/>
   </SqlMethod>
   <SqlMethod name="issotrxwindow" type="preparedStatement" return="String" default="">
      <SqlMethodComment></SqlMethodComment>
      <Sql> <![CDATA[
        SELECT issotrx from ad_window where ad_window_id= ? 
      ]]></Sql>
        <Parameter name="windowId"/>
   </SqlMethod>
</SqlClass>
